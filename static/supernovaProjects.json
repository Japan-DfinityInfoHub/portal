[
  {
    "id": "react-website-with-contentful-cms",
    "name": "React Website with Contentful CMS",
    "description": "This is a boilerplate for you to easily setup and deploy a React website with Contentful CMS onto the Internet Computer blockchain.",
    "image": "react-website-with-contentful-cms.png",
    "links": {
      "github": "https://github.com/therealbryanho/dfinity-websitewithcms",
      "otherLinks": []
    },
    "submitterFirstName": "Bryan",
    "submitterLastName": "Ho",
    "about": "This is a boilerplate for you to easily setup and deploy a React website with Contentful CMS onto the Internet Computer blockchain.\n\nThe boilerplate will get you setup with the structure of a blog. There are features like listing of multiple posts, viewing of an individual post, pagination and search.\n\nYou can create any kind of content in Contentful, like property listings, car listings, even eCommerce products, and then edit the code in this boilerplate to load your content through the Contentful API.",
    "domains": [
      "Website"
    ],
    "languages": [
      "javascript"
    ],
    "level": "intermediate",
    "contentType": [
      "code samples"
    ],
    "search": "contentful cms#@#@#react#@#@#internetcomputer#@#@#internetcomputer#@#@#javascript#@#@#html#@#@#boilerplate to easily setup and deploy a React website with Contentful CMS",
    "tags": [
      "react",
      "contentful cms",
      "internetcomputer",
      "javascript",
      "html"
    ]
  },
  {
    "id": "spinner-cash",
    "name": "Spinner Cash",
    "description": "Safeguard your financial privacy with zero-knowledge proofs",
    "image": "spinner-cash.png",
    "links": {
      "github": "https://github.com/spinner-cash/spinner",
      "livePreview": "https://spinner.cash",
      "external": "https://supernova.devpost.com/submissions/327085-spinner-cash",
      "otherLinks": []
    },
    "submitterFirstName": "spnrapp",
    "submitterLastName": "spinner.cash",
    "about": "Inspiration\n \n\n Privacy has always been on the mind of real crypto punks.\n We firmly believe that privacy is knowledge, and knowledge is the one thing that everyone can have and no one can take away.\n \n\n While there are existing layer-1 solutions such as Zcash or Monero, they do not have smart contracts.\n Bringing smart contracts and private transactions together was our initial motivation.\n In the past few years we have seen many innovations in the zk-SNARK landscape.\n Layer-2 projects on Ethereum, such as Aztec Network and Tornado Cash, gave us a lot of inspiration and leverage.\n Spinner is an extension of this evolution onto the latest blockchain technology that is the Internet Computer.\n \n\n With the upcoming threshold ECDSA support, the Internet Computer will be the only platform where we can bring zk-SNARK based private transactions directly to Bitcoin, with no trusted intermediaries or bridges.\n Everything will be controlled by autonomous smart contracts running on the Internet Computer blockchain.\n \n\n This not only opens up an opportunity to implement private transactions for bitcoin as a \"Layer 2\" solution, it also means we could facilitate private exchanges between tokens on different chains.\n All assets can now by managed by the same smart contract on the Internet Computer, without having to deploy separate contracts on different chains that can't talk to each other.\n \n\n What it does\n \n\n Spinner Cash implements a private ledger on which all transactions are 100% private.\n It does not reveal the sender or receiver of a transaction, nor the amount of tokens being transferred.\n Therefore, transactions conducted on the private ledger is 100% private.\n \n\n Similar to UTXOs, Spinner's ledger stores private notes instead of account balances or user address.\n Only a note's owners know the secret and can prove their ownership.\n To spend a note (for example, sending tokens to another account), a user has to first prove that she is the owner of the input note.\n The Spinner ledger will verify this proof before approving the transaction.\n \n\n The proof has to show that the amount of input tokens is equal to the output tokens, because otherwise it is not a legit transfer.\n Thanks to zero-knowledge techniques, the verification of such a proof does not need to see the actual amount.\n The Spinner ledger only stores the hashes of inputs (notes that are spent) and the outputs (notes that are created).\n \n\n So users can safely transact on the Spinner ledger with full privacy.\n Of course, for deposits and withdrawals, they still have to go through a public ledger which, depending on the token type, is either the ICP ledger or the Bitcoin network.\n The public ledgers will only see that tokens are moving in and out of the Spinner's smart contract addresses.\n These withdrawals cannot be linked to deposits in any meaningful way, making it also resistant to chain data analysis.\n \n\n How we built it\n \n\n Zero knowledge proofs may seem like a secret sauce if one is not familiar with the technique behind them.\n It has been extensively researched in recent years, and there are prior projects from which we can drew inspirations from.\n Thanks to high quality tools and libraries that are made available by the open source community around zk-SNARK, it was relatively easy to bootstrap ourselves from the ground.\n \n\n Building on the Internet Computer has many interesting characteristics, one of them is stable memory.\n We came up with a unique solution of storing binary Merkle Trees efficiently in the stable memory that can grow on demand.\n This is already open sourced as part of our Rust library.\n \n\n Also, the Internet Computer offers atomicity at per-call level, but not across calls.\n We have found that implementing transactions across canisters wasn't as hard as we thought.\n We have a multi-canister architecture, one canister serving each token pool, and each pool can manage its ledger spanning multiple canisters.\n \n\n Challenges we ran into\n \n\n One of the challenge building on the Internet Computer is how to convince people that a project is launched with maximum security and verifiability.\n Being privacy focused, we understand that without security there is no privacy.\n Security requires maintenance and upgrade, therefore we must solve the verifiability problem while considering upgrades.\n \n\n After analyzing the design and implementation of the Internet Computer blockchain, we proposed an innovative solution called LaunchTrail and spent some time to work on it as a side project.\n \n\n Essentially we don't want users to trust our claims, we want them to be able to verify and convince themselves that using Spinner Cash is safe.\n This means not only our source code must be open, but also what is deployed has to match the code, and every upgrade and every configuration ever done must be tracked and fully verifiable.\n It is correctness by construction.\n Our users don't have to to trust us because they can go to LaunchTrail and verify everything, not as an afterthought but beforehand.\n \n\n This is much in the same spirit of zk-SNARK: with math and rigor, everything is verifiable even when the actual data is private.\n \n\n Accomplishments that we're proud of\n \n\n We started with a public command line beta in March 2022.\n In the two months that follows, we rolled out a web UI, a side project, and a major upgrade to V2, supporting fully private transfers.\n \n\n Using Spinner Cash is really simple -- it doesn't require using a wallet or even login.\n One can just go to https://spinner.cash, launch the app and start transacting.\n There is no barrier to entry as long as you already know how to send or receive ICPs.\n It may be too simple to realize there is actual complex math and logic going on behind the scene, safeguarding your financial privacy.\n But that is the whole point of it, privacy and security don't have to be complex.\n \n\n What we learned\n \n\n Our plan is to first build a robust and secure foundation, starting with private transactions for ICP first, and then for BTC when ICP-BTC integration is ready.\n \n\n Transacting ICP or BTC privately is only the beginning.\n IC's unique technology also means we can bring these tokens together through the same set of smart contracts!\n Soon users will be able to trade between tokens securely and privately.\n This will set us apart from other L2 privacy projects.\n They are restricted by what their L1s can do, or bridges, which as we all know by now, is terribly insecure.\n \n\n So what we are building is really a protocol, through which token liquidity can flow freely, securely, and privately.\n \n\n What's next for Spinner Cash\n \n\n Support for BTC is well underway, and once ICP/BTC integration lands on the Internet Computer main net, we'll start beta testing.\n \n\n Decentralization has always been our goal as well.\n We have a small team, and we can't control and run everything.\n In fact, we don't want to.\n Our role is to eventually lead the project to a DAO structure, our users are owners and we become a facilitator to the DAO.\n \n\n Next on our roadmap is private swap, allowing users to atomically swap between different private ledgers.\n A native privacy token call SPNR will be introduced as an intermediary to facilitate private swaps.\n This is something really exciting and we can't wait to share with our users when it is ready.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "spinner cash#@#@#rust#@#@#canister#@#@#internetcomputer#@#@#javascript#@#@#html#@#@#safe guard your financial privacy with zero-knowledge proofs",
    "tags": [
      "rust",
      "canister",
      "internetcomputer",
      "javascript",
      "html"
    ],
    "winner": "1st place"
  },
  {
    "id": "kontribute",
    "name": "Kontribute",
    "description": "Kontribute brings readers, writers and NFTs together. Write some lore for your NFT collection or support your favourite writer by buying their NFTs - Web 3.0 creative writing with NFTs",
    "image": "kontribute.png",
    "links": {
      "github": "https://github.com/teambonsai/bonsai_dapp",
      "livePreview": "https://3ezq7-iqaaa-aaaal-aaacq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326818-kontribute",
      "otherLinks": [
        "https://mobile.twitter.com/TeamBonsai_ICP"
      ]
    },
    "submitterFirstName": "Jesse",
    "submitterLastName": "Keogh",
    "about": "Inspiration\n \n\n Kontribute was inspired by the idea of wanting to give everyone a use case for their NFTs as well as giving creative writers a platform on web 3 to write on and benefit from. We decided to combine both of these ideas to bring NFTs to storytelling. Readers can support their favorite authors by purchasing their NFTs, giving authors an incentive to write good stories and make good NFTs.\n \n\n What it does\n \n\n Kontribute allows readers, writers, and web 3 enthusiasts, to write and read stories, or sell and trade NFTs from their stories all within our dapp. To achieve this we have integrated a creative writing feature, a story section, and an ICP wallet in the dapp - users can directly hold their NFTs and ICP all within Kontribute. Kontribute gives writers a place to share their stories with a community and a way for them to sell NFTs from their stories. Readers may want to support an author's story by purchasing their NFTs.\n \n\n Larger projects with large stories and a large collection of NFTs can also launch stories and NFTs on the dapp via our launchpad.\n \n\n How we built it\n \n\n Kontribute is fully decentralized and built on top of the ICP blockchain from frontend to backend and we take advantage of the many tools that it provides including Internet Identity, DFX, and Motoko.\n \n\n Our frontend is made with React.js and uses lots of modern react techniques such as functional components with hooks, dynamic components, and React-Redux for state management. We have multiple frontend integrations via npm packages that let us call other smart contracts on the ICP blockchain most notably NFT Anvil smart contracts(also written in Motoko) - which power our NFT integration and ICP Wallet. For our UI and design, we use Chakra UI which allows us to build fast and responsive UI's that look nice on desktops and mobile alike.\n \n\n Our backend has two main smart contracts launched by us. One for our initial token offering or ito.mo which powers our NFT launchpad and lets us launch our Bonsai Warrior NFT collection. We also have story.mo which is the smart contract that powers our story section of the dapp which lets us store all user stories on the chain, to be called dynamically to our frontend. All of this makes Kontribute a multi-canister dapp.\n \n\n For a more detailed description of the development of our dapp and our code design decisions, you can read our GitHub README. All of our code is open-sourced and available for the community to look at and/or learn from.\n \n\n Challenges we ran into\n \n\n Building an app on ICP is much different than normal app development and there was a learning curve to figure all the new tools out. We found once we understood the idea of canisters, principals, and how to launch our front-end on-chain - things started to flow. Building out smart contracts in Motoko turned out to be a challenge as there were new concepts for us such as orthogonal persistence and the actor-based model.\n \n\n Accomplishments that we're proud of\n \n\n So far we are very happy with the success we have had thus far.\n \n\n \n\n Sold out our Bonsai Warrior NFT collection of 1100 NFTs within 5 hours raising 1500 ICP.\n 300 monthly users on the dapp already.\n Almost 2k followers on Twitter and 1k members in our discord. \n We have projects reaching out to us daily about using our dapp and we have joined multiple community calls and Twitter spaces with ICP journalists. \n We have also engaged with other dapp developers in the ecosystem and have multiple partnerships with different projects that we work with very closely such as NFT Anvil and Usergeek.\n \n\n \n\n What we learned\n \n\n We found ourselves thinking a lot about dapp architecture and how to create dynamic frontend components that interact with our Motoko backend. The async nature of the smart contracts also meant we had to think about how to properly display the information to our front-end and how we can notify the user of what's happening. We have learned and are still learning many new features of Motoko as a smart contract language. Building out this project and growing a community around it turned about to be a new sort of challenge for us as well. We know we have a niche audience that we can attract and we feel we have a product-market fit, So we have had to figure out how to grow an audience and keep them engaged all while we develop our dapp and launch new features.\n \n\n What's next for Kontribute\n \n\n We have about 5 other larger ICP NFT projects wanting to launch on our platform, as-well-as many writers who cant wait to get on board. \n \n\n We have many features lined up for improvements for the stories and marketplace sections of our dapp some of which that are currently being worked on are:\n \n\n \n\n Trade history for the marketplace.\n draft stories.\n story likes.\n voting options for interactive stories.\n \n\n \n\n We also have plans to add extra use cases for our Bonsai Warrior NFTs including claiming airdrops and using them to access the content. We want to scale the dapp out now as much as possible and try to cater to as many web 2 writers as we can and bring them over to web 3.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "kontribute#@#@#react#@#@#motoko#@#@#icp#@#@#kontribute brings readers, writers and nfts together. write some lore for your nft collection or support your favourite writer by buying their nfts - web 3.0 creative writing with nfts",
    "tags": [
      "react",
      "motoko",
      "icp"
    ],
    "winner": "1st place"
  },
  {
    "id": "dsquad",
    "name": "dSquad",
    "description": "A new chapter of the Internet is opening. Start by minting your avatar, then take part in the adventure and get rewarded as your explore a new wave of decentralized applications.",
    "image": "dsquad.png",
    "links": {
      "github": "https://github.com/ICPSquad/Squad",
      "livePreview": "https://x3ul6-2aaaa-aaaah-abjda-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/328183-dsquad",
      "otherLinks": [
        "https://dsquad.gitbook.io/docs/",
        "https://entrepot.app/marketplace/icpsquad2",
        "https://twitter.com/dSquadNFT"
      ]
    },
    "submitterFirstName": "Seb",
    "submitterLastName": "Thuillier",
    "about": "Inspiration & Vision\n \n\n The NFT industry is full of projects with capped supplies that exclude users and assets which only benefit the dev team of a single dapp. We wanted to create something which changed this completely: an NFT project that is accessible to everyone and focused on gamifying the entire Internet Computer ecosystem.\n \n\n Anyone can join dSquad by minting a personalized Avatar for a low flat rate of 1 ICP, and as long as they keep this NFT in their wallet it gives them a chance to earn prizes in monthly airdrops (both with prizes from our collection and partnering projects) as they use the Internet Computer. They can complete \"missions\" on various dapps across the ecosystem and engage with other projects to increase their rank on a leaderboard and improve their odds for winning prizes.\n \n\n Our goal is to welcome new users to the Internet Computer ecosystem and directly incentivize them to explore all the exciting things it has to offer!\n \n\n Getting Started with dSquad\n \n\n 1) Create : Design your own avatar, which you'll be able to use for completing missions and earning tokens and NFTs. You will be able to customize all physical attributes of your avatar.\n \n\n 2) Accessories : Wanna show your own style to the squad ? \n Collect materials and assemble them through recipes to create accessories. Equip the accessories on your own avatar to earn more, gain bonus and indeed... show off! \n \n\n 3) Engage and earn : Discover a new wave of decentralized applications and get rewarded as you explore the Internet Computer ecosystem.\n \n\n 4) Events and legends : Participate in events and contests with the community and make your way to becoming one of the legends and earning special prizes!\n \n\n 5) Projects : Are you an ICP project looking for more user engagement ?\n We can incentivize our users to join your community, follow your social media accounts, and regularly engage with your app. Grow your community and educate people about your application through missions by integrating with our reward system.\n \n\n How we built it\n \n\n We built the backend using Motoko and using the technologies and best practices of the ecosystem (integration with Entrepot, using CAP to record history of transactions, EXT standard for the NFT, integration with wallets)\n \n\n We built the frontend using Svelte.\n \n\n We are using Canistergeek to monitor our canister fleet and we used the Invoice canister from Dfinity as an huge inspiration for our own payment system.\n \n\n Challenges we ran into\n \n\n The most challenging part of our project has been assembling the artwork elements to create a dynamic rendering engine for avatars. \n \n\n We had to make sure that for every combination of avatar properties (hair, clothes, body, nose, mouth...) & accessories the result was clean and conformed to the artist intentions. \n \n\n This led to several rounds of discussion between the developers side and the artist. For instance we had to ask our artist to create special hairstyles that would automatically replace the default one if an avatar is equipped with a hat, that way the quality of the final design is improved.\n \n\n The gameplay we are building is already pushing the limits in term of the current possibilities of the IC (cycle limit execution per round, canister storage, delay with Intercanister-calls..). \n \n\n It requires a proper design, we need to gather information across many canisters (some of them we don't have control over because they are owned by external dApps). We are currently creating a standard for other apps to easily plug into our ecosystem.\n \n\n We also need to solve problems related to the identity providers used by our users and make sure we can respect privacy but gather enough information on our users so that we can truly rewards the most involved members. \n \n\n Finally, we had a huge challenge with processing payments on the IC due to the lack of notify interface into the ICP ledger canister. Fortunately, after several trials and with the help of the invoice canister we now have a custom system for processing fees (during avatar minting and accessory minting) that is very reliable and acceptable in terms of user experience and speed. We also keep track of all the information related to payments attempts so even in the very rare scenario where a payment doesn't go through we have everything available to process to fast refunds for impacted users.\n \n\n Accomplishments that we're proud of\n \n\n The quality of our artwork, and our dynamic & multi-layers rendering engine for avatars & accessories. \n We have created branded accessories in partnerships with two famous NFT projects on the IC (ICPunks & Cronics). \n \n\n The design of those branded accessories has been made in the spirit of each project. Those accessories will require special materials that can be earned trough Cronic game and ICPunk (now Gigaverse) marketplace. \n \n\n The gameplay we have designed and how it uses the properties of the IC to create a game that has never been possible before. Our engagement mechanisms would be very complicated to build on a platform where the transactions and activity of dapps is not happening on-chain. \n We need to be able to trust the recorded informations and access it directly on-chain. Also having a standardized API (through the system of canister) help to build a mental model around inter-dapp communication.\n \n\n We are also very proud of the community we have built and the diversity of initiatives we are creating. \n We hosted a few months ago the first bootcamp for the Internet Computer: the Motoko Bootcamp.\n During one week we released resources and exorcises for students, and with the help of experienced members of the dev community we organized lectures and workshops on how to build on the IC. \n \n\n At the end of the event, we used our NFT project to reward contributors. \n  1) The students that validated the final test have been airdropped special accessories they can equip on their avatar and earn rewards with! \n 2) The mentors have been rewarded by special Legendary Avatars made especially for them with the help of our artist.\n \n\n We want to keep going into this direction and make sure the project is used to connect people and create value trough events (education, hackathon, presence on social media). \n \n\n What we learned\n \n\n A lot of lessons have been learned on the technology needed to build on the Internet Computer and the best design practices (canister architecture, security practices, standards, and libraries).\n \n\n Obviously we also learned a lot on the artwork side (we used SVG) and how to properly communicate between artists and developers. It is important for both parties to understand how the other one is working and what are the aspects each one can act on so as to make the work easier and reduce the amount of time spent adapting the technology to the artwork (or the other way around).\n \n\n We also gathered important insights on how to properly design a digital economy, how to make sure that we create engagement and excitement around it. Each accessory requires materials to be created. Materials are the raw pieces of our economy and will be airdropped monthly as rewards. We need to make sure that the proportion of airdropped materials compared to the number of active players stay in an acceptable range to avoid hyperinflation or intense deflation that would hurt the economy. \n \n\n We are still learning, our community, the platform and the tech is moving fast and improving on a daily basics.\n \n\n What was built during the Supernova Hackathon\n \n\n Before the Hackathon we released only 9 accessories, 6 types of materials, basic Avatar minting, and functions for Accessory minting (though this feature didn't have a UI and wasn't public). This was just the most basic artwork, most basic minting, and a landing page with a bit of information.\n \n\n During the dates of the Hackathon we:\n 1) Defined and determined the Accessory Minting recipes, as well as the reward algorithm and other economy balancing mechanisms.\n 2) Implemented the features of the leaderboard, the monthly contests, the points system, the user profiles, missions, economy statistics, CAP activity tracking, as well as started work on the SDK.\n 3) Created a completely new website, a new brand (renamed the project), and filled the new website with information. This Also included building UIs for all the new features, as well as enhanced UIs and workflows for Avatar minting, equiping/unequiping/previewing accessories, and minting accessories.\n 4) We refined and polished the payment processing process.\n 5) We released 20 pages worth of documentation organized within an easy to navigate Gitbook covering every aspect of the project so users can dive right in.\n \n\n This work completes our MVP, with all external onboarding materials polished and gameplay features ready to be used!\n \n\n What's next for dSquad ?\n \n\n \n\n Release of the SDK to integrate more project into our engage-to-earn and missions ecosystem. \n Release of Legendary Accessories and raise capital to expand the team.\n Season 1 : Branded merchandises, improved artwork, more community events and SDK for mission and action tracking across our partners dapps.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dsquad#@#@#motoko#@#@#typescript#@#@#svelte#@#@#a new chapter of the internet is opening. start by minting your avatar, then take part in the adventure and get rewarded as your explore a new wave of decentralized applications.",
    "tags": [
      "motoko",
      "typescript",
      "svelte"
    ],
    "winner": "1st place"
  },
  {
    "id": "ictc",
    "name": "ICTC",
    "description": "IC Transaction Coordinator (ICTC) is a distributed transaction framework for Defi applications on IC network. It supports Motoko language. The core idea of ICTC is inspired by the DTC (Distributed Transaction Coordinator), which is commonly used in the financial sector.",
    "image": "ictc.png",
    "links": {
      "github": "https://github.com/iclighthouse/ICTC",
      "livePreview": "https://cmqwp-uiaaa-aaaaj-aihzq-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/328779-ictc",
      "otherLinks": [
        "https://youtu.be/fxG4vunET8s"
      ]
    },
    "submitterFirstName": "William",
    "submitterLastName": "Simpson",
    "about": "Inspiration\n \n\n Motoko developers need a development framework that addresses the issue of atomicity in order to lower the development threshold. The core idea of ICTC is inspired by the DTC (Distributed Transaction Coordinator), which is commonly used in the financial sector.\n \n\n What it does\n \n\n ICTC is a distributed transaction framework for Defi applications on IC network. It supports Motoko language. \n \n\n \n\n How we built it\n \n\n ICTC consists of Transaction Manager (TM), Task Actuator (TA), and Transaction Compensator (TC).\n Transaction Order: A transaction, including one or more transaction tasks, that requires all tasks to be either fully successful or fully rejected.\n Transaction Task: A task within a transaction, including local tasks of the caller and remote tasks of other parties involved.\n \n\n Transaction Manager\n \n\n The Transaction Manager is used to manage the status of transactions, operate the Actuator, handle exceptions and call the Compensator. Transaction Manager implementation includes the Saga Transaction Manager (SagaTM) and the 2PC Transaction Manager (TPCTM).\n \n\n Task Actuator\n \n\n The Task Actuator uses a \"best-effort delivery\" policy and will definitely return a result (success/failure). Synchronous actuator and asynchronous actuator are supported.\n \n\n Transaction Compensator\n \n\n The Transaction Compensator function is implemented in Transaction Manager and is used to execute compensation operations when an exception occurs in a transaction, including automatic compensation, governance or manual compensation.\n \n\n Example\n \n\n \n\n \n\n Challenges we ran into\n \n\n Motoko does not support polymorphism, and also does not support reflection. So this posed some challenges to our development process and we had to spend some time and effort doing some underlying packaging. Fortunately, we solved all these problems.\n \n\n Accomplishments that we're proud of\n \n\n An Alpha version of ICTC has now been developed to support Saga mode, with support for Forward and Backward modes. The basic needs of Defi development can be met. DeSwap (OrderBook Dex), ICSwap (AMM Dex) are currently using ICTC.\n \n\n What we learned\n \n\n IC does not support atomicity for cross-canister calls, but improves scalability and performance, which opens up more possibilities for Defi.\n \n\n What's next for IC Transaction Coordinator（ICTC）\n \n\n Next we plan to make ICTC support 2PC mode and encapsulate it in vessel to make it easy for developers to use.\n And then ICTC Framework V1.0 and technical documentation will be completed. Our technical staff will be reaching out to the community to introduce the framework, giving technical talks and code demos. We will also seek the cooperation of the official Dfinity operations staff to promote the motoko technology",
    "domains": [
      "Asynchronous DeFi"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ]
  },
  {
    "id": "proof-of-personhood",
    "name": "Proof of Personhood",
    "description": "a Sybil-proof identity system powered by decentralized AI human detection.",
    "image": "proof-of-personhood.png",
    "links": {
      "github": "https://github.com/AstroxNetwork/Proof-of-Personhood",
      "livePreview": "http://thehuman.id/",
      "external": "https://supernova.devpost.com/submissions/332526-proof-of-personhood",
      "otherLinks": []
    },
    "submitterFirstName": "Ken",
    "submitterLastName": "Cui",
    "about": "Inspiration\n \n\n One of the most challenging Web3 issues is known as the Sybil attack. A Sybil attack is when a malicious user leverages multiple crypto wallets and/or web2 social media identity to gain multiple positions with an unfair advantage of systems.\n \n\n Examples of Sybil attacks are quite common in Web3, such as:\n \n\n \n\n Token airdrops are exploited by bot-controlled wallets to gain a large percentage of community tokens, diluting the value for those left holding their bags when the bad actor sells off all their rewarded tokens as their core objective is to game the system. Here is a recent example. NFT whitelisting suffers the same attack as well.\n Twitter, Discord and Telegram have been plagued with phishing links sent by bot accounts luring a user to interact with malicious smart contracts to steal their crypto assets. \n \n\n \n\n In addition, many Web3 efforts are trying to build social impact projects, as well as crypto as a public good, all requiring a decentralized Identity layer with Sybil-resistance as the building block of the projects:\n \n\n \n\n Universal Basic Income (UBI) aiming to support sustainable development. \n 1 human 1 vote for Web3 DAO governance avoiding plutocracy. Examples like Optimism’s the Citizens’ House.\n \n\n \n\n To prevent Sybil attacks, both centralized and decentralized identity solutions exist with different pros and cons. \n \n\n Centralized solutions like Blockpass require users to KYC (Know Your Customer) and provide their sensitive personal information such as government IDs, addresses, face photos, etc without users understanding how that information will be secured. Such private information is stored in centralized servers, which is prone to the next Equifax data breach. \n \n\n Decentralized solutions such as ProofofHumanity and BrightID don't require government IDs and both rely on other human users to distinguish humans from bots. They use different mechanism designs with various economic incentives/penalty, and also human coordination is required. BrightID users need to attend a Zoom group verification call at specific timeslots and ProofofHumanity requires users to reveal a selfie video with their ETH address online to make a public announcement and deposit some amount of ether. Obviously both solutions are not user friendly and they have been around for a couple of years with only modest success in adaption because of high onboarding friction.\n \n\n What it does\n \n\n Proof of Personhood is a Sybil-proof identity system powered by decentralized AI human detection. It allows:  \n \n\n \n\n a user to verify he or she is not a bot by answering a combination of random challenges with sequential simple human actions like simultaneous face gestures and speaking numbers;\n dApps or Web2.0 apps can prevent Sybil attacks by requiring users to complete Proof of Personhood via QR Code Authentication;\n Privacy preserved. No sensitive information (user face image or voice) ever leaves the user's device. The on-device AI algorithm and the algorithm running on the IC canister together perform a Reverse Turing Test, in a decentralized way. \n \n\n \n\n How we built it\n \n\n Frontend\n \n\n The Proof of Personhood is integrated with AstroX ME mobile wallet app (soon to be released) as an advanced add-on feature (under the Experiment menu). The mobile app is built with Flutter using Agent_Dart to interact with the Internet Computer. \n \n\n AI: Human Liveness Detection\n \n\n The core components are face detection and face tracking based on Deep Neural Network (DNN) to detect real human interaction. A random sequence of face gestures is computed at the canister and sent to the app to challenge the user to perform. So photo, pre-recorded video or paper mask attacks can be prevented. \n In addition, a random number speech challenge is also required with simultaneous face tracking. \n During the challenges, none of the face image or voice data are leaving the mobile device. Only the results of the liveness detection are sent back to the canister to determine the final result. \n \n\n Below is the Human Liveness AI Detection Flow.\n \n\n \n\n Backend\n \n\n The Proof of Personhood canister is built using Rust. It performs two tasks: \n \n\n \n\n Compute interactive random challenges and send them to the app;\n Authenticate a web app that needs a user's Proof of Personhood. A user can scan a QR code generated on the web to perform the Proof of Personhood.\n \n\n \n\n \n\n \n\n Challenges we ran into\n \n\n Originally we wanted to run the entire AI on a canister with only a web \"thin client\" so that a user can use proof of personhood from a web browser. Deploying an AI framework into a caster would be so cool and many new use cases will be unlocked. \n \n\n However, we found out that DNN is too computation-intensive to run on today's IC canister. So we switch to a decentralized Reverse Turing Test by the on-device AI algorithm and the algorithm running on the IC canister. \n \n\n Accomplishments that we're proud of\n \n\n We have built an end-to-end fully functional proof-of-concept of Sybil-proof identity on the Internet Computer using AI liveness detection, as well as the demo web app in just less than 2 weeks!\n \n\n What we learned\n \n\n We are a team of experienced engineers and entrepreneurs who have built Internet-scale applications in the past 10 years and started to build on Internet Computer last year. \n \n\n During the project, we learned a lot about the problem space of Sybil-proof decentralized identity and previous attempts. Dfinity's People Parties project has provided us with a lot of insights as well and inspired us to try a different approach using a combination of various mature technologies for faster trial-and-error in the real world. \n \n\n We also learned a lot about the existing AI solutions. Although the solutions are mature in some use cases (especially face detection and voice), some assumptions do not apply to webSo more innovations are needed to bridge the two technologies.  \n \n\n What's next for Proof of Personhood\n \n\n We intend to make Proof of Personhood a public good for a Sybil-attack-free Web3 world. To make it a reality, there are a few milestones ahead: \n \n\n \n\n Drive user growth and adaption of Web3 apps using Proof of Personhood service:\n \n\n \n\n Reach out to NFT projects in IC community to use Proof of Personhood for Sybil-proof NFT fair mint; \n Integrate with Discord/Telegram so that general web3 projects in larger crypto ecosystems can use Proof of Personhood as well;\n Continue to explore how to run the entire AI module on canisters, so users can use Proof of Personhood from a browser only. \n \n\n Incorporate additional methods like mechanism design/incentive, or social graph analysis to combat newer and more sophisticated Sybil-attack vectors, while striking a good balance between ease of use for end-users and effectiveness of Sybil-resistance;\n Explore a good business model or tokenomics to support the long-term health of Proof of Personhood (to pay the R&D cost, canister cycle cost, etc).",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "proof of personhood#@#@#flutter#@#@#rust#@#@#deepneuralnetwork(dnn)#@#@#a sybil-proof identity system powered by decentralized ai human detection.",
    "tags": [
      "flutter",
      "rust",
      "deepneuralnetwork(dnn)"
    ],
    "winner": "2nd place"
  },
  {
    "id": "kinic",
    "name": "Kinic",
    "description": "A search engine for web3.",
    "image": "kinic.png",
    "links": {
      "github": "https://github.com/wyattbenno777/kinic",
      "livePreview": "https://kinic.io/",
      "external": "https://supernova.devpost.com/submissions/327859-kinic",
      "otherLinks": []
    },
    "submitterFirstName": "Wyatt",
    "submitterLastName": "San",
    "about": "Inspiration\n \n\n Did you know web2 Search makes around $12 per user / per year? These massive profits mostly come from Ads. Reworded: this revenue comes from your data being packaged and utilized for secondary sale to advertisers. Most of the time we are completely unaware of this exchange in value. These products seem to be 'free' to use. But of course there is no such thing as a free lunch.\n \n\n Do any of these profits go to the content providers that you find? Sometimes.. Do you get a kickback if your search data results in more sales or insights for an advertiser? Almost never. Does it go into a pool to help promote apps and content that you enjoy? No.\n \n\n 'Search' can be done better with web3! It can be used for discovery and insights, spotlighting new applications, and aligning economic incentives that match the values of individual users.\n \n\n A quick look into what web3 is all about will have the reader amazed at the potential. But in summary, web1 was all about browsing and reading content. Web2 is about writing and sharing. Web3 is all of web1 and web2, plus ownership. The very content and data that you share or produce can be protected and monetized like never before. Indeed, web3 has many advantages for end-users and companies: better privacy, security and direct-to-user business models to name a few. What is web3? Web3 is ownership.\n \n\n Unfortunately web3 is still young! And like many other new technologies there exist a few barriers to entry that prevent a full and immediate transition. One major barrier being discoverability. Which leaves many saying: \"I made my cool thing on webNow what?\". \n \n\n Kinic is my answer to the problem of discoverability for web3 apps and content. I was inspired to build it because I was seeing content being made but having little chance of being discovered. Not because of quality, or variety of the content, but by the systems' of centralized gatekeepers. These systems are in the interest of the status-quo. The gatekeepers do not mind to care.\n \n\n \"Nothing is more expensive than a closed mind, and a missed opportunity\". - H. Jackson Brown, Jr\n \n\n Rather than trying to play the web2 'SEO game' with transcribers at boundary nodes or landing sites, we should create and support web3 specific SEO. 'Search' that can only be done with an advanced blockchain powering it. 'Search' that can help incentivize and power the very things people are searching for. \n \n\n In stark contrast to maintaining the \"status-quo\", we are inspired to build by the forward, positive progress, which we can now all discover in the new decentralized internet.\n \n\n \n\n \n\n Kinic has a high level of technicality and runs on the revolutionary Internet Computer blockchain. We deep dived into how this blockchain works to make content search possible, powerful, and concise. Moreover, we have Motoko code that allows for bidding and site claiming directly on-chain.\n \n\n In short, this submission represents lots of hacking and loads of fun /s 💻❤️ . \n \n\n We decided on May 13th to build Kinic in public. We did this to help inspire others and bring some spice to SUPERNOVA. (I strongly encourage others to do the same in future!)\n \n\n That's right! We had just an idea with a way to get it done, a badly designed MVP page, 0 followers and no traction at the start of SUPERNOVA. I wanted a full blown product-to-market match making experiment and I definitely got one with this 30 day sprint - Slept like 20 hours week-one out of excitement 🧟‍♂️ \n \n\n Kinic now has 1000+ followers, revenue #s and other strong KPIs, much better design and branding, and a more polished MVP.\n \n\n What it does\n \n\n Allows for content search on frontend canisters. \n A user can input text, categories or canister IDs to discover relevant content hosted on the IC.\n \n\n How we built it\n \n\n Search:\n \n\n We used traits of the IC discovered in the Rust source code to gather all canister IDs on subnets. \n By using other 'smart-code' we identify keywords for each app and app type. We then prioritize 'claimed sites' over WIP or staging sites, creating a new basis for web3 SEO.\n \n\n Frontend:\n \n\n The app is built using Vue.js. We A/B tested a few variants to find a simple and sleek design. Take a look at our images on Twitter to see the evolution. \n \n\n The name Kinic comes from the word kin from kinship, and IC from the Internet Computer. It is also an onomatopoeia for a click noise. Our design and logo have been derived from this using AI term matching and other methods.\n \n\n Ad Bids and Site Claiming:\n \n\n We use Motoko 👻 ❤️ \n \n\n We used the Ledger canister to allow for bidding on Ad categories. The highest bidder cannot revoke their bid. Other bidders can reclaim their bid, and bid again if they desire. After the auction closes (time based), the highest bid is decided as the winner and gets a two-week ad spot.\n \n\n The ads appear on category pages on the right side. They can be images, videos, or gifs and have links.\n \n\n Claiming sites is done by comparing the canister owner principal ID by what is given to us in a DFX command. Motoko does not have an 'info' method call yet, so we are forced to do this comparison with DFX for now. (https://forum.dfinity.org/t/getting-a-canisters-controller-on-chain/7531)\n \n\n Challenges we ran into\n \n\n Oh boy. A lot of technical challenges like how do we iterate through canisters? \n What to do with all of these Wallet canisters? How to differentiate between phishing and other bad content vs legitimate apps?\n \n\n Accomplishments that we're proud of\n \n\n The community likes Kinic! We hope they love it as we build it out further :) \n https://twitter.com/kinic_app\n \n\n Many established teams Tweeted the first week of launch showing support. ✌️ \n \n\n Unsolicited demo video made for Kinic: https://www.youtube.com/watch?v=-qytoxhHyyA&feature=youtu.be\n \n\n ICOS uses Kinic as default search: https://twitter.com/icpcsnft/status/1529629378300239874\n \n\n We tried a CrowdFund NFT and were the fastest sell out of all time. Our NFT is focused on providing visibility to new projects on the IC; if they use the perk of the NFT they get an SEO boost in their chosen category for one day.\n \n\n We are very proud to have made a useful product that is being enjoyed daily. \n \n\n What we learned\n \n\n I am a serial entrepreneur and technical founder. The first stage of product building, for me, is all about validating an idea. Kinic exceeded all of my expectations in this.\n \n\n We have learned the exact content deployed on the IC and have visualized the boundary line of the IC-verse. Now we are very keen to build Kinic and help web3 expand: with more features to incentives good content and apps on the IC!\n \n\n Kinic is like an ever increasing repulsive pressure, behaving as an opposite of gravity. A bit like nuclear fission in a ________ 💥 😉 \n \n\n What's next for Kinic?\n \n\n \n\n We have plans to index the inner contents of backend canisters. We are in a discussion with Nuance first.. but will create an automated way to get this done. \n We are building ways to incentives content on the IC! Why build, write, or upload, on web2 when you can profit more on web3? \n Help Dfinity Foundation beat the baddies, with an API to track malicious content or phishing sites on the IC; Comms channel already opened with relevant team.\n \n\n \n\n We have a blue sky of options but will focus our efforts on demonstrating web3's competitive advantages.\n \n\n (#1 Technically this could also be possible for NFTs or other backend canisters; Rather than asking \"submit your app and code\" we can index the public functions and assume the NFT standard used. NFT canister owners can then verify their code and get a \"Verified\" tag. This is in contrast to existing methods that require someone to pre-approve an NFT before listing.)\n \n\n Our WIP mantra: No more competitive advantages for webOr \"Got web3 content?\"\n \n\n ** Product video is unsolicited from the community. It does not contain code for auction or claiming sites. We are doing a thorough review of that code before pushing it to production. It can be viewed in our Github repository. **",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "kinic#@#@#motoko#@#@#vue#@#@#love#@#@#a search engine for web3.",
    "tags": [
      "motoko",
      "vue",
      "love"
    ],
    "winner": "1st place"
  },
  {
    "id": "signals",
    "name": "Signals",
    "description": "A unique SocialFi space for making connections, discovering events and creating decentralized communities. Signals is a DAO. The more you interact with it, the greater say you have in its governance.",
    "image": "signals.png",
    "links": {
      "github": "https://github.com/bertiespell/Signals",
      "livePreview": "https://2fydv-iqaaa-aaaak-qap6q-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/327368-signals",
      "otherLinks": []
    },
    "submitterFirstName": "Bertie",
    "submitterLastName": "Snell",
    "about": "Inspiration\n \n\n I was inspired to build Signals after moving to a new city and finding it hard to connect with new people. It occurred to me that I pass the same strangers every day who share my interests and hobbies - we live in the same building, go to the same gym, enjoy the same cafes or play the same sports. Despite an epidemic of loneliness, crowded cities and all of us carrying devices which constantly broadcast our location to private companies... it seems harder than ever to connect with one another in meaningful ways. Signals presents an opportunity to re-think social media to put connection at the heart.\n \n\n What it does\n \n\n Signals is built as a DAO, meaning that its users control how it operates and are incentivised through the Signals Token to interact with the map and maintain the quality of the data. Currently it supports leaving three types of signals - Chats, Trades and Events. Any user with sufficient tokens can see the state of the system, and make proposals on how Signals should be run.\n \n\n Some ideas of how to use the Chat Signal:\n \n\n \n\n Finding a language exchange partner\n Meeting someone to play sports with\n Searching for a lost connection... someone who's number you regret not asking for\n Communicating and organizing with neighbors\n Creating a public forum page for your business or cafe\n Reporting incidents, repairs and local infrastructure problems\n Looking for lost pets\n \n\n \n\n Signals also supports the Event Signal. You can use this to broadcast an event taking place - maybe a talk, meetup, party, book launch or anything really! There's also the option to make the event ticketed and to set the number of available tickets.\n \n\n With the Trade Signal you can list goods and services for sale, the way you would on Gumtree or Wallapop. Perhaps you're looking for a cleaner, nanny or teacher, leaving a trade signal is the perfect way to find someone. It also encourages people to buy second hand, which is good for the planet.\n \n\n How I built it\n \n\n I decided to build this in Rust, as I really wanted to learn and improve in this language. I also used React, Typescript and Leaflet.js for the front-end. I knew there would be so many features I wanted to add, so I spent a good proportion of time in the planning stage, coming up with and MVP and using wireframes to know where to focus my efforts. I also used Kyle Peacock's Webpack starter kit which was sooo useful <3\n \n\n Challenges I ran into\n \n\n It was a challenge just to get the whole thing finished in time, and to not let the scope creep too much that it wouldn't be useable or finished. I was also very aware that communicating the idea and the necessity of it was vital, so working on the branding, marketing and copy was new to me. \n \n\n Accomplishments that I'm proud of\n \n\n I'm proud that I finished it, and did everything myself. I even managed to squeeze in a few extra features like ticketed events (buying and checking tickets) and searches (both searching signals and functionality to search for places on the map itself)! I've built something that I'd actually use, and that when I speak to people I hear they are missing something like this in their lives - so I'm proud of the idea as much as the code!\n \n\n What I learned\n \n\n I've learned so much about Rust, working with maps, and of course the Internet Computer. I really loved developing something completely decentralized. I've learned a lot about the ICP ecosystem <3\n \n\n What's next for Signals\n \n\n I'd like to integrate a DAO Launcher into the app, to allow users who have discovered each other to easily launch templated DAOs to govern their communities, spaces or projects. But I have many many other ideas for it, which you can see over on the Github Page.\n \n\n I'd love the opportunity to develop these ideas further, and implement a production ready version of this app. I've loved building on the ICP and have felt very inspired by the idea of building a completely decentralized application. Thanks so much for reading if you made it this far. I'm always very happy to hear feedback and of course - to make new connections - so feel free to reach out.\n \n\n Who am I? I'm a full stack developer, I've worked helping to build a 3D graphics library, a blockchain and most recently building backend and payment systems for millions of users at Sketch. I'm really passionate about trying to use blockchain to solve real world problems, and building beautiful products which benefit people. I'm currently in the process of turning my ideas into something more concrete, I hope to find a path to be able to sustain myself building in this space... so, if you know of any, or want to link up, let me know. You can find me on any of these links.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "signals#@#@#rust#@#@#icp#@#@#react#@#@#typescript#@#@#javascript#@#@#a unique socialfi space for making connections, discovering events and creating decentralized communities. signals is a dao. the more you interact with it, the greater say you have in its governance.",
    "tags": [
      "rust",
      "icp",
      "react",
      "typescript",
      "javascript"
    ],
    "winner": "3rd place"
  },
  {
    "id": "faefolk",
    "name": "FaeFolk",
    "description": "FaeFolk is an NFT-based role-playing game where you use your NFTs to craft tools & equipment, train your skills and ultimately fight your way through dungeons and find treasure.",
    "image": "faefolk.png",
    "links": {
      "github": "https://github.com/ICCards/faefolk",
      "livePreview": "https://ge5fs-qyaaa-aaaap-qam6a-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326797-faefolk",
      "otherLinks": [
        "https://github.com/ICCards/Server"
      ]
    },
    "submitterFirstName": "Jonathan",
    "submitterLastName": "Green",
    "about": "Inspiration\n \n\n Faefolk was inspired by Stardew Valley, a pixel-style, slice of life game that has been enjoyed by gamers for over 10 years. We wanted to bring this experience to the blockchain, and the Internet Computer was the most effective path to bring the vision to life. \n \n\n What it does\n \n\n In its current iteration, Faefolk allows users to farm, craft and build in a multiplayer, procedurally generated, persistent world. While much of what it will be is not yet built, the internet computer offers a unique opportunity to enhance game play loops by incorporating blockchain technology into the user experience. The current demo will demonstrate the minting of real NFTs by harvesting trees and stone, along with a procedurally generated world that users can play in with their friends.\n \n\n How we built it\n \n\n We built Faefolk using the Godot game engine, GDscript, Rust, and Motoko. We use web sockets and a centralized server for multiplayer communication, and NFTs are minted and persisted on the Motoko canisters. Godot is a particularly great match for the Internet Computer given its open source nature and its ability to use any programming language.\n \n\n Challenges we ran into\n \n\n To say that a month was not enough time to build this project is an understatement. Games take quite a while to actually bring to production. That being said, some of the challenges we faced were communication with the Internet Computer. Because we do not want our game to run exclusively on the web, we could not just build an HTML5 export, so we had to use Rust libraries to communicate with the Internet Computer. This is a problem because the Rust HD wallet library could not digest 12 word phrases from popular wallets like Plug, so user Principles could not be imported from web wallets like Plug. For the demo, we have hard coded principles, so we can demonstrate the minting of NFTs across the game and in our own NFT marketplace. Another challenge we faced was multiplayer. Outside of turn-based games, no blockchain is fast enough to handle real time multiplayer, so we had to settle for a Web2 solution to handle multiplayer communication. Godot has a fabulous, high-level multiplayer API that is not compatible with HTML5, so at a future point in development, we will have to build our own communication protocol so we can export an HTML5 version of the game that can be hosted on the IC. On the personnel front, our artist disappeared midway through, and the artist we hired to replace her lives in the Ukraine and has been unavailable for obvious reasons. Also, two developers of the four developer team have not been able to commit time to the project for personal reasons, so the remaining two were challenged with completing a project that was scoped for four developers. \n \n\n Accomplishments that we're proud of\n \n\n This is the first real gaming project the team has worked on. From what I have heard from other game developers, the fact that our game is enjoyable with this level of technological complexity is impressive. We are proud of our Rust implementation. While Godot allows you to use any language, it’s easier said than done. Rust allows us to bring the IC in all its utility to any platform that Godot can compile for. Yes, this means consoles, which may be a first for the blockchain. \n \n\n What we learned\n \n\n We learned what Rust could and could not do. We also learned the limitations of Godot, from its finicky tile mapping system to how picky its HTML5 export is and how it handles multiple threads and asynchronous communication. We also learned how great of an engine Godot is on top of all this. The node system makes things very modular and maintainable, and its community shares a lot of synergy with the IC community. \n \n\n What's next for FaeFolk\n \n\n Every great journey starts with the first step, and when it’s all said and done, Faefolk will not just be known as a great blockchain game but as a great game. We have already started conversations with experts in tokenomics and economies in RPG-based games, accelerator programs, and that crazy guy at the bar that told us about his artist friend who could be a useful replacement for those we left behind.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "faefolk#@#@#godot#@#@#rust#@#@#gdscript#@#@#ic#@#@#motoko#@#@#faefolk is an nft-based role-playing game where you use your nfts to craft tools & equipment, train your skills and ultimately fight your way through dungeons and find treasure.",
    "tags": [
      "godot",
      "rust",
      "gdscript",
      "ic",
      "motoko"
    ],
    "winner": "3rd place"
  },
  {
    "id": "saga-tarot",
    "name": "Saga Tarot",
    "description": "Open source tarot ecosystem on the IC. Nobody owns Tarot. Everybody owns Web3.",
    "image": "saga-tarot.png",
    "links": {
      "github": "https://github.com/sagacards/bazaar",
      "livePreview": "https://l2jyf-nqaaa-aaaah-qadha-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334420-saga-tarot",
      "otherLinks": [
        "https://bazaar.saga.cards",
        "https://table.saga.cards",
        "https://directory.saga.cards",
        "https://www.npmjs.com/settings/opentarot/packages",
        "https://github.com/sagacards/legends-nft"
      ]
    },
    "submitterFirstName": "Jorgen",
    "submitterLastName": "Hookham",
    "about": "Inspiration\n \n\n Tarot is a bustling community of people who enjoy the art, social aspects, and creative self insight that this card-based \"divination\" practice has to offer. It's a semi mystical practice that's been around for hundreds of years and is going strong to this day.\n \n\n I love what MTG Arena and Hearthstone have done to create a beautiful digital experience out of a \"traditional game\" based on physical cards, and this project started with the intention of doing the same thing with tarot.\n \n\n After discovering the Internet Computer, I realized that the web3 infrastructure it offers could take the project to a new level, and that there are latent similarities between the tarot and web3 communities. Tarot is a naturally decentralized space, with thousands of artists creating tens of thousands of unique decks, and meritocratic and open ideals pervade.\n \n\n What it does\n \n\n Saga's initial purpose is to bring a delightful, faithful digital tarot experience to existing tarot fans, and to do it in a way that enables and encourages open contribution and participation at all levels. We do this by first establishing the groundwork for interoperable tarot goods and services (NFTs and dApps) as a suite of open source software and SDKs. There are several components of this ecosystem that we have developed on IC mainnet:\n \n\n \n\n The Bazaar: A launchpad protocol and secondary NFT marketplace that's dedicated to tarot.\n The Tarot Directory: A DAB standard NFT registry that provides developers with an authoritative list of all available tarot NFTs in a single call.\n Open Tarot SDK: A typescript SDK available on npm providing a plug-and-play api to connect wallets, discover available NFTs or tokens owned by the user, query provenance, mint/buy/sell NFTs, query assets, and so on.\n Tarot Table: A a simple dApp built using the SDK, allowing users to use any decks they own to do tarot readings.\n Legends NFTs: Illustrating a full deck of tarot cards is a time consuming process, so in addition to our NFTs which act as a fully functional deck of tarot cards, we developed this series of collectible NFTs. Each Legends token is good for one or more full decks once illustration is complete, and the full deck inherits the unique card trim from the collectible that spawns it. Legends NFTs have some unique features enabled by IC, such as static, animated and interactive views that are encoded in the same canister as the token ledger itself.\n \n\n \n\n How we built it\n \n\n \n\n Our stack is Motoko and Typescript, with React and Threejs for our 3D interactive components.\n We operate a fleet of canisters dedicated to various functions: the launchpad canister, a fleet of Legends NFT canisters, a fleet of tarot deck canisters.\n Our frontends can be deployed to the IC, but we have preferred other solutions that can offer just-in-time edge-cached rendering. One perk of flexible deployment targets is that we can decentralize our frontends using the IC at the drop of a hat if it is required.\n We have relied heavily on the EXT standard in developing our own legends and tarot deck NFT canisters, as well as much of the work done by Psychedelic DAO to provide standards and common infrastructure for our NFT projects (CAP provenance, DAB directories, etc.)\n We developed custom NFT generation tools and a novel open source minting protocol.\n \n\n \n\n Challenges we ran into\n \n\n ICP Payments\n \n\n Payments processing with ICP has been a significant learning process for the community, and for us. Having found a few ways that do not work, we eventually developed a protocol based on per-principal deposit accounts held by our launchpad canister, which allows us to perform atomic \"single client message\" or \"fire and forget\" purchases.\n \n\n Accomplishments that we're proud of\n \n\n Novel Fire-And-Forget ICP Payment Protocol\n \n\n ICP purchase protocols often relied on the client performing multiple calls in order to complete a transaction. For example, a client would have to perform separate message executions to 1) indicate intent to purchase an NFT, 2) transfer ICP, 3) notify the purchase handler of the ICP transfer.\n \n\n This is a fairly simple flow, but mishandling it is easy for a dApp to do. This can result in incomplete transactions that must be recovered and mean headaches or lost ICP for end users.\n \n\n User controlled deposit accounts within the payments canister allow clients to instead \"fire and forget\" a single message to purchase some goods with ICP, which will atomically fail or succeed.\n \n\n What we learned\n \n\n What's next for Saga Tarot\n \n\n Illustration for our first complete deck will finish later this summer. We will keep building better tarot experiences, and eventually begin translating knowledge gained into new niches in the IC and Web3.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "saga tarot#@#@#motoko#@#@#typescript#@#@#react#@#@#three#@#@#ext#@#@#cap#@#@#dab#@#@#zustand#@#@#open source tarot ecosystem on the ic. nobody owns tarot. everybody owns web3.",
    "tags": [
      "motoko",
      "typescript",
      "react",
      "three",
      "ext",
      "cap",
      "dab",
      "zustand"
    ],
    "winner": "3rd place"
  },
  {
    "id": "enoki-dex",
    "name": "Enoki DEX",
    "description": "Completely Async and Scalable DEX: Swap, Earn, and be a Market Maker",
    "image": "enoki-dex.png",
    "links": {
      "github": "https://github.com/enoki-dex",
      "livePreview": "https://5ba5l-caaaa-aaaag-qaoja-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334178-enoki-dex",
      "otherLinks": [
        "https://enoki.ooo"
      ]
    },
    "submitterFirstName": "Rudy",
    "submitterLastName": "Hasbun",
    "about": "Inspiration\n \n\n Having both worked in Fintech, we had an idea of what we wanted in a Decentralized Exchange.\n \n\n When we heard about the scalability and asynchronous nature of the Internet Computer, something that sets it apart from other blockchain systems, we decided to imagine what an exchange with multiple asynchronous actors would look like. We arrived on a model with one central exchange with multiple \"brokers\" around it, and Enoki was born.\n \n\n Try it out\n \n\n Well, this is a long, technical post, and we hate to ramble. TL;DR: scroll to the bottom links and try out our dApp.\n \n\n What it does\n \n\n In short, Enoki is a Decentralized Exchange that allows users to swap tokens, provide liquidity, trade using limit orders, and act as a market maker.\n \n\n A user signs up to the exchange and is assigned a broker. The user can submit limit orders to the broker, which are then executed by the exchange after a synchronization round.\n \n\n Users can also lock liquidity into a Liquidity Pool. Brokers have access to this liquidity, which is available for swapping at prices determined by the bid-ask curve of the limit orders in the exchange.\n \n\n This way, users are also able to instantly swap tokens with any broker, without having to wait for any exchange synchronization.\n \n\n As an additional incentive for market makers, users who submit limit orders that are posted to the order book (they create a market) receive 0.03% in rebates when their order is matched.\n \n\n How we built it\n \n\n We had Rust experience but had never built an Internet Computer canister. However, we were quickly up to speed after attending the excellent Supernova developer workshops.\n \n\n We used Rust to code the canisters, and React to code the frontend.\n \n\n After several iterations we now have:\n \n\n \n\n a central exchange canister in charge of synchronizing state and executing limit orders.\n many broker canisters in charge of taking limit orders, distributing order payouts, and immediately executing swaps.\n a liquidity pool canister in charge of keeping track of liquidity.\n a liquidity pool worker canister where users actually deposit their liquidity. It has an anti-spam mechanism to ensure the exchange canister can constantly and reliably communicate with the liquidity pool canister.\n \n\n \n\n Challenges we ran into\n \n\n We aim to create a truly scalable DEX that simply adds and removes broker canisters as user activity changes. We met our first obstacle when we realized that existing token standards are not yet scalable. They depend on a single canister for processing transactions, and this canister can get clogged up after a sudden influx of transactions.\n \n\n Since we wanted the core of our project to be truly scalable, we designed our own proof-of-concept token standard. The Enoki Token has a sharded data structure that allows for scalable token transfers.\n \n\n Another challenge we ran into deals with market maker incentives. Because the liquidity pool (and the returns for liquidity providers) relies so heavily on bid-ask curves set by market makers, it became essential to set the right incentives for market makers to operate at the right prices.\n \n\n We therefore added multiple measures to ensure market makers cannot manipulate this bid-ask curve, such as being able to cancel limit orders only after a synchronization round. We also plan to penalize bad market making (for example, not giving rebates for setting bids/asks that do not have a large enough bid-ask spread, as proven by either historic or future price volatility) and use these funds to reward good market making.\n \n\n Accomplishments that we're proud of\n \n\n In a month we have created a complete version of our DEX, which includes swapping, a liquidity pool, limit orders, and an automated market maker bot. It is fully deployed and running with test tokens.\n \n\n We also take pride in designing a good looking dApp. We aim for a simple and user-friendly UI, and we think we have achieved that with our design - it's clean, and it makes you want to trade some tokens.\n \n\n What we learned\n \n\n On the programming side, we learned that we can actually put our Rust hobby to good use. And we brushed up on our css. A lot.\n \n\n We were also impressed at how fast and easily we can deploy a complete dApp on the Internet Computer, including all the hosting. We thought surge.sh was the coolest thing we had ever seen, but now dfx deploy --network ic enoki_exchange and us are best buds.\n \n\n What's next for Enoki DEX\n \n\n We have a lot of work in the pipeline. First, when there is community consensus on a standardized token standard, we want to migrate our token to fully support it. We also want to discuss our sharded token model for scalability with the community.\n \n\n Second, after extensive testing we will release a version of Enoki DEX with real wrapped tokens, probably starting with ICP, Cycles (XTC), and possibly BTC pending Bitcoin integration.\n \n\n We also have a lot of extra features we want to add to our dApp:\n \n\n \n\n ability to scale up and down automatically, depending on user activity.\n use tokens collected as fees, converted to cycles, to power the dApp.\n ability for users to migrate to less utilized (and therefore faster) shards/brokers.\n move a lot of the state to an archive canister that uses a distributed big-map to store data. And add transaction history for the token (using PubSub mechanism).\n for the our sharded token, establish paid priority shards, for example for the exchange and liquidity pools.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "enoki dex#@#@#rust#@#@#react#@#@#internet-computer#@#@#completely async and scalable dex: swap, earn, and be a market maker",
    "tags": [
      "rust",
      "react",
      "internet-computer"
    ],
    "winner": "4th place"
  },
  {
    "id": "icmaps",
    "name": "ICMaps",
    "description": "ICMaps brings maps to the internet computer. With the ICMaps frontend you can install your own map server provided by ICMaps on Canister and integrate maps into Web3, Web2 and even desktop GIS apps.",
    "image": "icmaps.png",
    "links": {
      "github": "https://github.com/stumpigit/icmaps",
      "livePreview": "https://discord.gg/PruV4RxD9S",
      "external": "https://supernova.devpost.com/submissions/326804-icmaps",
      "otherLinks": [
        "https://icmaps.org"
      ]
    },
    "submitterFirstName": "Christoph",
    "submitterLastName": "Suter",
    "about": "Inspiration\n \n\n Maps are needed everywhere, for leisure, for research and for information exchange. Large tech companies recognized the value of maps long ago and earn money with them. Many maps are available as opendata and can be used freely. It's time for maps to be truly free. Time that maps can be made available as a Web3 Dapp and offered as a scalable, decentralized map server on the Internet computer.\n \n\n Maps can be used to clearly visualize many facts that are important for society. That is why maps have been an important means of communication since time immemorial. It is therefore all the more important that maps can also be offered with Web3 and are thus free from censorship and privatization.\n \n\n In order to show that Web3 can contribute a lot to Public Good, special examples for natural hazards and climate change were set up with ICMaps. Further very useful examples will surely follow through the community.\n \n\n What it does\n \n\n With ICMaps you can create your own map servers and thus integrate map layers into Web3 Dapps, Web2 applications and even desktop GIS. ICMaps is on the one hand the software that can be installed on own canisters and enables a decentralized, scalable map server that is fully compatible with the standard WMTS. On the other hand, the ICMaps.org frontend provides a user-friendly interface to create custom map servers and load map tiles from existing maps into the blockchain. This allows maps to be created with just a few clicks. Many examples show the potential of Web3 maps. One example impressively shows the effects of climate change by directly comparing two glacier levels.\n \n\n How we built it\n \n\n The first step was to write the WMTS software. Can a canister support the WMTS specifications. For this, all WMTS requests had to be implemented. Additionally, a decentralized image storage was implemented based on the open source project Motoko-CDN. When the first Web3 map could be displayed it was clear that ICMaps will close an important gap in Internet computing.\n \n\n Afterwards the frontend was developed. Based on the Motoko Svelte Starter project and the open source Notus Svelte template a functional and professional frontend was developed, which allows to create map servers and to upload map data in a user friendly way. On the one hand, XYZ map layers like Open Street Map or existing WMTS map servers can be parsed and map tiles can be seeded.\n As a last step, examples were provided to show the potential of the maps.\n \n\n Challenges we ran into\n \n\n In order for the map server to support all requirements of the OGC standard, various Http requests had to be supported. The Mini BigMap project was integrated so that the maps can be stored in a scalable way. So as many maps can be stored as Cycles are available.\n \n\n The frontend had to understand existing map sources like XYZ Server or WMTS Server and had to be presented in a user-friendly interface.\n \n\n To keep the map data under control of the creator, the idea of the Managed Canister was invented: The user provides the canister and ICMaps makes sure that the right software is installed on it. This way the user always has the rights to the canister and the associated map data, but always has the latest software available.\n \n\n Accomplishments that we're proud of\n \n\n \n\n Implementation of a fully OGC-compliant WMTS server in Motoko\n Introducing the idea of managed canisters: the user retains full control over his canister, ICMaps ensures that the latest software is installed\n Create a professional frontend in Svelte for map server management.\n Impressive examples show that Web3 Maps are very important to show facts, for example to show the effect of climate change.\n To show that the connection of Internet Computer and professional desktop GIS systems works.\n Everything is open source\n \n\n \n\n What we learned\n \n\n \n\n How to build a scalable map server so that canisters can create new canisters, store images in them, and manage the cycles\n Interaction of Motoko, Svelte and Openlayers\n How to optimize the speed of queries in Motoko\n \n\n \n\n What's next for ICMaps\n \n\n \n\n Create more examples\n Improved error handling\n Further speed optimizations\n Integration of further data sources",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icmaps#@#@#motoko#@#@#svelte#@#@#openlayers#@#@#wmts#@#@#ogc#@#@#openstreetmap#@#@#icmaps brings maps to the internet computer. with the icmaps frontend you can install your own map server provided by icmaps on canister and integrate maps into web3, web2 and even desktop gis apps.",
    "tags": [
      "motoko",
      "svelte",
      "openlayers",
      "wmts",
      "ogc",
      "openstreetmap"
    ],
    "winner": "3rd place"
  },
  {
    "id": "candb",
    "name": "CanDB",
    "description": "Meet CanDB, the first flexible and truly horizontally scalable NoSQL database built for the Internet Computer.\n\nhttps://www.canscale.dev",
    "image": "candb.jpeg",
    "links": {
      "github": "https://github.com/canscale/supernova-candb-demo",
      "livePreview": "https://pliqr-fqaaa-aaaan-qalpq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/327567-candb",
      "otherLinks": []
    },
    "submitterFirstName": "Byron",
    "submitterLastName": "Becker",
    "about": "Inspiration\n \n\n CanScale is an initiative to build scalable distributed infrastructure for the Internet Computer (IC) blockchain. CanScale’s first project, CanDB, is non-relational, performant, and horizontally scalable multi-canister database. CanDB provides a familiar and flexible NoSQL API that abstracts and automates multi-canister spin up & auto-scaling, data partitioning, and data persistence and stability. This enables developers to focus more on application development and less on IC specific distributed data storage design.\n \n\n At Genesis launch, the IC was not released with a pre-built data-storage solution allowing developers to seamlessly scale storage past a single 4GB canister. For most simple applications, 4GB of canister memory is sufficient. However, developers who later need to scale past that limit will soon find great difficulty refactoring and appropriately partitioning their initial data model and data structures while ensuring that partitioned data is persisted and stable across canister upgrades. Without a readily available scalable storage solution such as CanDB, data storage on the IC becomes a major roadblock for development and consequently slows IC adoption by developers and entrepreneurs. By building CanDB, the CanScale initiative aims to empower creators by removing these barriers, acting as a catalyst to increase the rate of development on the IC.\n \n\n What is this demo\n \n\n The demo video is almost 16 minutes, and covers the following topics:\n \n\n \n\n Why the IC needs a generic and scalable solution for data storage\n How CanDB Works ⚙️\n Reddit on the IC? A live demo hosted on the Internet Computer\n CanDB & Microservices 💜…a match made on the IC\n Currently supported features\n The CanDB Roadmap 📆\n A special announcement\n \n\n \n\n The live on-chain demo application showcases a completely on-chain demo application backed by CanDB that can flexibly query 4 million comments from Reddit.\n \n\n The backend application is holding roughly 8GB of comment data split amongst a cluster of 149 canisters.\n \n\n How can I interact with the application?\n \n\n Great question, the \"Comments\" and \"Monitoring\" tabs at the top point to different applications that demonstrate how a developer might both utilize CanDB to build an application for their users, as well as monitor that application.\n \n\n End-User persona (\"Comments\" tab)\n \n\n You can query the comments by:\n \n\n \n\n Top score overall\n Latest comments with a subreddit (lowercase)\n Latest comments overall\n \n\n \n\n You can also change the date range to filter the comments received.\n \n\n Use the \"Next Page\" button to query the next page of results (which under the hood uses the nextKey directly below this button as the Sort Key for the upper bound of the next query request).\n \n\n Engineer persona (\"Monitoring\" tab)\n \n\n Navigate to the \"Monitoring\" tab, and query your fleet of canisters. Use column ordering to see which canisters have scaled, as well as other metrics such as other canister metrics like entities (rows) inserted, heap size, and cycles remaining.\n \n\n How it was built\n \n\n The code for the demo is publicly available at https://github.com/canscale/supernova-candb-demo. The demo has a Motoko backend, and a TypeScript + React frontend. The backend utilizes the CanDB Motoko library, and the frontend utilizes the candb-client-typescript TypeScript library.\n \n\n For those without repository access, you can view the publicly available documentation:\n \n\n \n\n CanDB - https://www.candb.canscale.dev\n candb-client-typescript -> https://www.candb.canscale.dev/client-typescript\n \n\n \n\n Data for the demo comes from the publicly available Kaggle Reddit Covid Dataset, which contains 12.65GB of comment data mentioning Covid-19 up until October 25th, 2021 (10-25-21). This demo uses 2.85GB of that data, in comments ranging from 7-14-21 to 10-25-21. On the backend, CanDB's equivalent of local secondary indexes are used to replicate the data in order to support different data access patterns, resulting in roughly 8GB of data storage across > 100 canisters.\n \n\n The data was preprocessed and chunked into 500 comment row csv file chunks all grouped by the comment date using Python. \n \n\n A series NodeJS backfill scripts included with the submitted assets in supernova-candb-demo/backfill was assembled using the candb-client-typescript library to interact with the CanDB index canister and batch update calls to the appropriate backend CanDB storage partitions. Additional upgrade and delete scripts (using the candb-client-typescript and CanDB index canister backend) were used as well to perform rolling canister upgrades and targeted canister deletion in case it was needed during the backfill process.\n \n\n Challenges faced\n \n\n The IC has a 2MB upload limit, so data needed to be pre-processed into small update chunks, which greatly slowed down the backfill process. Luckily, by parallelizing the backfill process job, I was able to speed up the data backfill significantly. In fact, I was impressed by the IC and my subnet's ability to handle the sustained load ~1300 transactions per second I was giving it (see attached screenshots).\n \n\n Several errors and performance issues cropped up when testing on the main network that I was unable to reproduce locally. Debugging production errors on the IC can be difficult, and while I was able to work around these issues one of the top priorities for the CanDB project going forward will be to stress test the IC and CanDB, in order to further improve performance and provide developers with predictable cost and performance metrics.\n \n\n Is there more to CanDB than what was shown in the Demo Video?\n \n\n Yes! What was shown in the demo video is just a brief snippet of the features that CanDB currently provides. For example:\n \n\n \n\n Performant and Rich CRUD + scan APIs (not just scans like shown in the demo). Here is the endpoint that was used to backfill millions of comments into the demo application via a CanDB data structure on the Comment Actor\n Canister cluster management features:\n \n\n a. Support for rolling upgrades Code from the demo application deployed to the main net\n \n\n b. Support for targeted canister deletion by partition key Code from the demo application deployed to the main net\n Abstracted and easy to set-up auto-scaling\n \n\n a. Set user-defined auto-scaling limits for your canisters, but don't fear the responsibility, as CanDB will eventually auto-scale for you if your limits are too high. \n \n\n b. Use the [createAdditionalCanisterForPK hook] in your canister responsible for auto-scaling to scale out your canisters when they fill up.\n Stable and persistent data through upgrades - CanDB keeps you safe by providing a flexible range of stable data types to store as attributes\n An easy-to-use typescript client sdk - Set up client interactions with your Index Canister, your Actor Canisters, and then performing query and targeted update calls to the specific canister where the update should take place.\n \n\n \n\n Accomplishments that we're proud of\n \n\n Just during the time period of the hackathon, entire multi-canister CanDB backend, the frontend client, and the demo were built - turning what was previously Single Canister POC and a design into a full-fledged working multi-canister solution with a working demo.\n \n\n As of this demo, CanDB is the first scalable NoSQL database on the IC.\n \n\n What we learned\n \n\n Too many things...if you want to follow my herd of questions on the developer forums, you can find me @icme on forum.dfinity.org. You can also reach out to me with any questions @can_scale on Twitter or @CanScale#1607 on the DFINITY developer discord.\n \n\n What's next for CanDB\n \n\n Q2-Q3 2022 (Closed Alpha)\n \n\n \n\n Start alpha testing with 10-20 dedicated teams (reach out to the handles listed above if interested)\n Stress/Chaos Testing\n Performance & Metrics iteration and publish developer expectations report\n CanDB Migration Guide (for existing applications)\n \n\n \n\n Q3-Q4 2022 (Open Beta)\n \n\n \n\n End alpha-testing phase\n Secondary indexes\n Role based access control\n CanDB Logger (using CanDB)\n Start open beta",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "candb#@#@#motoko#@#@#typescript#@#@#react#@#@#meet candb, the first flexible and truly horizontally scalable nosql database built for the internet computer.\n\nhttps://www.canscale.dev",
    "tags": [
      "motoko",
      "typescript",
      "react"
    ],
    "winner": "2nd place"
  },
  {
    "id": "stkrs",
    "name": "STKRS",
    "description": "Stkrs is the social identity app for Web 3.0. Users can express themselves, trust others online, and revolutionize our governance, all while being anon and maintaining privacy.",
    "image": "stkrs.png",
    "links": {
      "github": "https://github.com/arjunpat/stkrs.me",
      "livePreview": "https://priqv-iqaaa-aaaak-ab4rq-cai.ic0.app/#/",
      "external": "https://supernova.devpost.com/submissions/333208-stkrs",
      "otherLinks": []
    },
    "submitterFirstName": "Jonathan",
    "submitterLastName": "Liu",
    "about": "Inspiration\n \n\n Vitalik Buterin wrote a paper a few weeks about a concept he dubbed Soul Bound Tokens, and we were inspired by the impact the concept could have and immediately started iterating. We believe there’s a lot of problems facing the industry today, with lack of trust online being the biggest cause. We want to solve this problem, and through the presentation we talk about how our product solves the issue of trust, improving the whole Web 3 experience along the way.\n \n\n What it does\n \n\n Each user is granted a “stkr wall” upon signup, where they can showcase NFTs in the form of “stkrs” that highlight their professional experience, communities they’re a part of, or fun activities that they like to engage in. “stkrs” are minted by organizations which get approved for stkr minting by the stkr DAO, verifying that organizations issuing stkrs are legitimate. \n \n\n How we built it\n \n\n We built Stkrs using the Motoko programming language and Vue.js. We chose Motoko because it was specifically designed for ICP and is significantly more succinct in comparison to the primary alternative, Rust. Our team has significant experience building PWAs with Vue.js and have been extremely happy with its reliability, ease-of-use, and ergonomics.\n \n\n Challenges we ran into\n \n\n We encountered technical challenges primarily on the backend side, writing canisters in Motoko. None of us had experience with Motoko, and there did not exist many Stack Overflow answers to help us with our frustrations. We spent a lot of time reading the documentation for Motoko, and sometimes had to take a peek into the implementation of certain data structures because the documentation was not fully comprehensive. It was quite rewarding to work on something like this, however; it tested our problem solving skills and gave us a challenge. We spent more time than normal solving trivial bugs, but we have gained a stronger understanding of Motoko as a result. We are incredibly excited to continue building with it, and have enjoyed using the language!\n \n\n Accomplishments that we're proud of\n \n\n \n\n Creating a custom STKRs protocol enabling non-transferrable NFTs on our platform\n Integrating with Internet Identity, allowing users to login and create their own profiles on STKRs\n Building a completely functional, connected ICP-powered service that allows for users to comment, collect stickers, and browse other profiles\n Creating a thematic, engaging & animated UX for exciting User Experience\n \n\n \n\n What we learned\n \n\n Through this whole process of both brainstorming and development, we learnt so much about the technologies that are currently powering the push forward with blockchain. Each one of us watched hours of videos and read a variety of articles so that we were well-versed in the three main issues we sought to solve and ready to create a solution.\n \n\n Development-wise, none of us had experience with ICP beforehand, so jumping into developing a full-stack application that integrates the authentication and the transfer/ownership of NFT’s was a tall task for us. Only after hours on end of reading documentation, stack overflow pages, and even source code, we were able to test and deploy our application. \n \n\n What's next for STKRS\n \n\n Short-term, we plan to clean up the backend, patch up potential security vulnerabilities, and start talking to organizations to see if issuing stkrs interests them. We also need to set up a DAO and a clear pipeline for organizations to issue stkrs. We’re really passionate about this project, and really want to see the product in the hands of real users and organizations. \n \n\n In the grand scheme of things, we believe that there is immense potential with STKRS. From uncollateralized loans to job applications, there are many ways in which STKRS can be used that we haven’t explored as much and could change the way we use and interact with services we’ve taken for granted for so long. For example, currently, there is no way to take an uncollateralized loan in DeFi, limiting the potential of borrowing significantly. However, if we can start “verifying” identities through stkr walls (you would be more likely to loan to someone with a job, or maybe someone with a college degree), we can start small scale lending and as loan history is recorded through our app, bigger and bigger loans can be issued. What this means is we can eventually have a system to reliably gauge users' trustworthiness, recording positive and negative behaviors (creating a new stkrs wallet would mean starting your identity all over from scratch).\n \n\n We see our application becoming THE OAuth application for Web 3, akin to Facebook or Google.\n \n\n Check out our STKR walls!\n \n\n Erik's Wall\n \n\n Tony's Wall\n \n\n Jonathan's Wall\n \n\n Arjun's Wall\n \n\n Jason's Wall",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "stkrs#@#@#vue.js#@#@#vuetify#@#@#motoko#@#@#icp#@#@#internet-computer#@#@#stkrs is the social identity app for web 3.0. users can express themselves, trust others online, and revolutionize our governance, all while being anon and maintaining privacy.",
    "tags": [
      "vue.js",
      "vuetify",
      "motoko",
      "icp",
      "internet-computer"
    ],
    "winner": "4th place"
  },
  {
    "id": "paws-arena-multiplayer-pvp-play-to-earn",
    "name": "Paws Arena - Multiplayer PVP Play to Earn",
    "description": "This is the cutest, most fun and competitive turn-based play to earn multiplayer game on the ICP. Players will fight in the arena and earn $PAW Tokens which will be used to buy in-game items.",
    "image": "paws-arena-multiplayer-pvp-play-to-earn.jpg",
    "links": {
      "github": "https://github.com/icla692/paws_arena_ickitties",
      "livePreview": "https://knbkj-fiaaa-aaaan-qaadq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333263-paws-arena-multiplayer-pvp-play-to-earn",
      "otherLinks": [
        "https://linktr.ee/ickitties",
        "https://twitter.com/ICKitties/status/1469684414359683077?s=20&t=4ES-GxYs0keCC_mjVCGWVA"
      ]
    },
    "submitterFirstName": "Andrei",
    "submitterLastName": "Goinea",
    "about": "1. For the best experience please use the Google Chrome browser; you can use the Full Screen button beneath the game window. Mobile devices are not supported yet.\n Please note that for this submission we haven't included the wallet connect function. We wanted to make sure that the Juries will be able to play Paws Arena without the need of owning an ICKitty. This way we avoid any kind of incident that may not allow you to buy an ICKitty from the marketplace, etc. Thank you.\n \n\n Inspiration\n \n\n We first started our project in September of 2021 in the form of an NFT collection, named ICKitties. In order to make it easier for our audience to follow our story, we created a 90 second animated video showcasing the background of each kitty race in a fun and easy to follow way. Now, our NFT collection will find a new home in Paws Arena, our upcoming game. The inspiration for our game came from games created years or even decades ago (like Worms Armageddon or Shellshock Live).\n \n\n The idea of our game is simple, yet very powerful because it's challenging and engaging for the users, making them fight against other players in order to get in the top positions in our Leaderboard and win bi-monthly or monthly prizes.\n \n\n What it does\n \n\n We noticed that no other project on the Internet Computer had a challenging multiplayer feature or any system that would give players a reason to come back and play again. That is why we created Paws Arena to allow users to connect in multiplayer PVP fights and get rewards every time they win a match.\n \n\n How we built it\n \n\n We built our game in Unity. We used React to integrate @dfinity, dab-js and plug-connect (for the wallet connect function), Fleek for CI/CD pipeline (staging environment) and then we used dfx for production environment.\n \n\n Animations are mostly done with the help of spritesheet animations, combined with well-placed linear animations, camera shakes, particles and post processing effects.\n \n\n Our NFT collection (ICKitties) is the central pillar in Paws Arena. Choosing your favorite Kitty from your wallet, you not only choose your skin theme, you will also have access to a specific set of items that will give a nice flavour to your game experience and can even decide your fate in a duel.\n \n\n Challenges we ran into\n \n\n The most challenging parts were:\n \n\n \n\n Integrating the wallet connect function, because from the dab-js library we had to specifically implement only the ICKitties canister, without calling all the other NFT canisters;\n Deploying Paws Arena in a canister\n We had to host our assets on Amazon S3 because of the 15 Mb limit on the canisters. We learned too late that we can overcome this limitation by using a Motoko/Rust canister that is able to serve bigger files via implementation of http_request method. We will use this method in our future development.\n \n\n \n\n Accomplishments that we're proud of\n \n\n We are really happy with the advancements that we have made so far; we have a working first version of PawsArena which can be tested and we can gather feedback from our users, which will allow us to improve it continuously.\n \n\n What we learned\n \n\n It was a journey that allowed us to learn how to create and deploy canisters and how Dfinity Agent interacts with wallets, canisters and NFT tokens.\n \n\n What's next for Paws Arena - Multiplayer PVP Play to Earn\n \n\n After the Supernova Hackathon is over we will only allow ICKitties NFT holders to play Paws Arena. We will gather our community's feedback on our Discord server and continue developing our game.\n \n\n We will implement the missing functions of our game (leaderboards, weapon attachments, new maps, a levelling system, daily challenges), with the working version following to be launched in Q4 2022.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "paws arena - multiplayer pvp play to earn#@#@#unity#@#@#react#@#@#javascript#@#@#this is the cutest, most fun and competitive turn-based play to earn multiplayer game on the icp. players will fight in the arena and earn $paw tokens which will be used to buy in-game items.",
    "tags": [
      "unity",
      "react",
      "javascript"
    ],
    "winner": "4th place"
  },
  {
    "id": "ic-avatar-creator",
    "name": "IC Avatar Creator",
    "description": "The IC Avatar Creator allows users to create and manage avatars for the open metaverse. The project includes GLB avatars that are minted to the Internet Computer using the DIP721v2 token standard.",
    "image": "ic-avatar-creator.jpg",
    "links": {
      "github": "https://github.com/AtlasFoundation/AvatarCreator-IC-Project",
      "external": "https://supernova.devpost.com/submissions/331595-ic-avatar-creator",
      "otherLinks": [
        "https://www.npmjs.com/package/avatarcreator"
      ]
    },
    "submitterFirstName": "James",
    "submitterLastName": "Harbeck",
    "about": "Inspiration\n \n\n The aim of this project is to provide newcomers to the open metaverse with a way to express their identity through a 3D avatar that they can own and use on a wide variety of platforms. Hosted entirely on-chain via IC, users are able to create their avatars as NFTs and secure or trade them using a crypto wallet and decentralized identity. Users can view their avatar from the same canister the assets are stored in, and even inspect it interactively in Plug wallet. This provides a unique and powerful solution for users who wish to have greater control over and connection to their online identity.\n \n\n What it does\n \n\n The IC Avatar Creator is a project that enables users to mint their own Avatars for the metaverse and store them fully on-chain. The project is 100% on-chain and leverages the power of the canister architecture to provide a seamless experience for users. The project consists of the following features:\n \n\n Front-end hosted directly on a canister\n This allows for a fast and responsive user experience that is directly integrated with the canister architecture.\n \n\n Plug & DAB integrations\n This allows users to easily mint their Avatars as DIP721v2 NFTs.\n \n\n GLB Avatars minted as DIP721v2 NFTs \n This allows for a high degree of interoperability for users when minting their Avatars.\n \n\n Assets stored in asset canister\n This ensures that all user data is stored securely on-chain.\n \n\n How we built it\n \n\n This project was a team effort, with all members collaborating inside the Outpost. The smart contracts used by the program are written in Rust and Motoko, and hosted on the Internet Computer. We used React and TypeScript for the front-end, which is also hosted on the Internet Computer. We used the DIP721v2 canister for the NFT, as well as a Motoko-based storage canister for receiving and storing the static assets. We used Psychedelic Plug and DAB functions for handling the core actor/agent based logic. The NFT canister was registered to the DAB registry for full functionality when using Plug and DAB.\n \n\n Challenges we ran into\n \n\n 1) Chunking large assets into a storage or assets canister prior to running the mint function.\n \n\n 2) Creating and designing good-looking 3D models and assets for the project.\n \n\n Accomplishments that we're proud of\n \n\n We are proud to have accomplished the following:\n \n\n \n\n DIP721v2 integration and minting functions working from the UI\n Canister asset storage working for storing assets fully on-chain\n Interoperable 3D NFTs using the GLB model standard\n \n\n \n\n What we learned\n \n\n We learned that the Internet Computer has some limitations that will require further development to solve. Delivering large static files from a canister was not well documented, and required digging deep into other open-source projects to figure out how they were solving certain aspects of the batching and chunking of files. Through our work together, we were able to identify these limitations and develop strategies to overcome them. This experience has taught us the value of collaboration in problem-solving and we will carry this lesson forward into future endeavors.\n \n\n What's next for IC Avatar Creator\n \n\n The IC Avatar Creator has seen great progress so far, and we plan to continue growing it. It will aim to become the base repository used by the Outpost for minting open-metaverse avatars on the IC. This will allow us to apply for grant work around the IC Avatar Creator and have multiple projects use it. The code will become open source, so anyone will be able to contribute.\n \n\n We are really excited to offer engine integrations and enable communities to have their own avatar sets. Right now, 3D tools are just too complicated for most users, but the default avatars that come with any engine rarely represent them. Most communities have a few strong creators, but they aren’t able to make custom assets for everyone. Avatar creators like this simplify the number of options and meet both users and creators where they are. We foresee a shift from high-value, exclusive random generations to much less expensive and inclusive sets that offer customization, and we hope that future NFT projects will fork this one and build toward the open metaverse with it.\n \n\n From our Supernova hackathon, we packaged a standalone avatar creator React component, as well as a Plug wallet provider for making interacting with the IC less complicated. Both of these projects are now available on npm – we’ve added links to these packages in the links section",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ic avatar creator#@#@#internet-computer#@#@#node.js#@#@#react#@#@#three.js#@#@#react-three-fiber#@#@#typescript#@#@#rust#@#@#motoko#@#@#the ic avatar creator allows users to create and manage avatars for the open metaverse. the project includes glb avatars that are minted to the internet computer using the dip721v2 token standard.",
    "tags": [
      "internet-computer",
      "node.js",
      "react",
      "three.js",
      "react-three-fiber",
      "typescript",
      "rust",
      "motoko"
    ],
    "winner": "4th place"
  },
  {
    "id": "metamob",
    "name": "metamob",
    "description": "Create, donate, vote, sign and fund extraordinary mobilizations!",
    "image": "metamob.png",
    "links": {
      "github": "https://github.com/av1ctor/metamob",
      "livePreview": "https://wbpm2-ciaaa-aaaan-qajta-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/327261-metamob",
      "otherLinks": [
        "https://github.com/av1ctor/mo-table"
      ]
    },
    "submitterFirstName": "André",
    "submitterLastName": "Vicentini",
    "about": "Inspiration\n \n\n Our inspiration was helping people change the world they live in. Be it a campaign targeted at tens of million users or just changing something that has to be fixed on their school, Metamob can help them accomplish their plans and dreams!\n \n\n What it does\n \n\n Metamob is a decentralized web3 app, running on the Internet Computer, that lets any user start mobilizations by creating campaigns of four different kinds: donations, votes, signatures and fundraising.\n \n\n Using metamob users can create campaigns to face real world problems like climate change, wars, oppression, inequality, or even to fix specific issues on his school or his condo, for example.\n \n\n Thanks to the Internet Computer and its 100% on-chain apps, metamob doesn’t depend on web hosts and can’t be controlled or censured by governments.\n \n\n In later stages, the app will be released as open-source and a DAO (Decentralized Autonomous Organization) will be created to decide how its treasury will be allocated, who should be the moderators, etc. No single individual should own the app.\n \n\n How we built it\n \n\n The backend is 100% Motoko and depends on the Internet Identity and Ledger canisters. It also support querying canisters that implement the DIP20 and DIP721 interfaces.\n \n\n The front-end was developed in Typescript with React 18, SASS, Bulma, YUP and the React components React Context, react-router, react-query, react-markdown, react-globe.gl, etc. \n \n\n Challenges we ran into\n \n\n To be able to do free searches and complex ordering and filtering on the data stored, I had to implement a B+tree and Suffix tree algorithms in pure Motoko.\n \n\n Accomplishments that we're proud of\n \n\n \n\n Authentication & authorization\n \n\n \n\n Users only have to authenticate on the Internet Identity to have full access to the app\n There are three user roles: administrator, moderator and ordinary user\n \n\n Multiple kinds of campaigns\n \n\n \n\n Four kind of campaigns are supported: signatures, donations, votes and fundraising\n Donations and fundraising will automatically transfer funds to the creator’s wallet. Vote campaigns can invoke external canister methods, allowing them to be used by DAO’s\n \n\n User defined places/spaces\n \n\n \n\n Users can create their own places to better organize campaigns\n Places can be restricted by email lists, DIP20 (tokens) and DIP721 (NFT) balances\n \n\n Rewards\n \n\n \n\n Users that help moderating abusive content are rewarded with the metamob token (MMT)\n \n\n The internal DB (called mo-table) \n \n\n \n\n Implemented using B+Tree and Suffix tree to allow complex queries with fast retrieving\n Source-code at: https://github.com/av1ctor/mo-table\n \n\n \n\n \n\n What we learned\n \n\n \n\n Motoko in general and its core libraries.\n How to use the Internet Identity, both on localhost and in production. \n How to transfer ICP's and DIP20 tokens between users.\n How to interact with DIP20 (tokens) and DIP721 (NFT's) interfaces.\n \n\n \n\n What has been done\n \n\n \n\n Users\n \n\n \n\n Users can sign in, log in, logout, edit their profiles, see the lists of campaigns, places, signatures, donations, votes and fundings they created\n User roles are checked on every update action on entities\n Update actions on places/spaces are checked when there is a restriction like email lists, DIP20 or DIP721 balances\n \n\n Campaigns\n \n\n \n\n Users can search (by partial name, by category, by place or any combination of them), sort by what is hot or by date, create, edit and delete campaigns\n Users can create, update and delete updates to their campaigns, closing them manually if desired\n Campaigns that reach goals are automatically finished and, depending on the kind, the funds are transferred to the creator or an external canister method is invoked\n Expired campaigns are automatically closed and the users are refunded when the goal is not reached\n Users can promote campaigns, boosting them with ICP's\n \n\n Places/spaces\n \n\n \n\n Users can search (by partial name, by kind or by both), sort by name or be date, create, edit and delete places\n Votes, signatures, donations and fundings\n Users can create, edit and delete their votes, signatures, donations and fundings\n \n\n Administration/moderation\n \n\n \n\n Admins and moderators can ban users, view and assign reports, edit any campaign, place, vote, signature, donation, funding and update reported by users\n Admins can create, edit and delete categories and places\n \n\n \n\n \n\n What's next for metamob\n \n\n \n\n DAO (Decentralized Autonomous Organization)\n \n\n \n\n Assign all control to a DAO that will decide how the treasury will be allocated, who will be the moderators, etc\n Users will have to stake the metamob token (MMT) to be able to vote\n All propositions will be posted on the DAO’s place created in metamob\n \n\n Token rewards\n \n\n \n\n Moderators, creators and users should be rewarded too with MMT’s depending on their participation\n \n\n POAP NFT (Proof of Attendance Protocol)\n \n\n \n\n Users that participated on a campaign should receive a POAP NFT when it finished\n \n\n Multiple languages\n \n\n \n\n The app should support multiple languages to allow users from non English-speaking countries to participate\n \n\n Logs\n \n\n \n\n Logs of any update action done by any user should be stored for at least 30 days to allow audits\n \n\n Image uploading\n \n\n \n\n Users should be able to upload images to be used as avatars and as campaign covers\n \n\n Places tree\n \n\n \n\n Places should be organized as a tree, allowing fast retrieving of all campaigns created on child places\n \n\n Missing pages\n \n\n \n\n Create the missing pages, including the Categories page and the ones displayed at the footer section\n \n\n Tests\n \n\n \n\n Create integration and unit tests\n \n\n \n\n \n\n Please try it out: https://wbpm2-ciaaa-aaaan-qajta-cai.ic0.app/",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "metamob#@#@#motoko#@#@#react#@#@#typescript#@#@#bulma#@#@#create, donate, vote, sign and fund extraordinary mobilizations!",
    "tags": [
      "motoko",
      "react",
      "typescript",
      "bulma"
    ],
    "winner": "5th place"
  },
  {
    "id": "foxic",
    "name": "FoxIC",
    "description": "A tool allowing MetaMask users to enter IC ecosystem",
    "image": "foxic.jpg",
    "links": {
      "github": "https://github.com/AstroxNetwork/FoxIC",
      "livePreview": "https://ip5qp-gaaaa-aaaah-ablla-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334321-foxic",
      "otherLinks": [
        "https://github.com/AstroxNetwork/ICSnap"
      ]
    },
    "submitterFirstName": "neeboo",
    "submitterLastName": "icp",
    "about": "Inspiration\n \n\n We love and hate MetaMask.\n \n\n While some MetaMask problems such as its security issues have been long known, it is still very popular with a tremendous user base. \n \n\n There is Internet Identity on IC, as well as a few wallets. However, none of them get close to a fraction of the popularity of this little fox on the browser toolbar.\n \n\n Therefore we are building FoxIC, a tool that will allow users to use their most familiar wallet MetaMask to interact with Internet Computer. \n \n\n What it does\n \n\n \n\n FoxIC allows users to use MetaMask to sign IC messages and interact/control a wallet canister to send ICP transactions, and display ICP balance inside MetaMask, as well as transaction history. \n IC messages are signed inside MetaMask, not within a WebApp's frontend page. So it's more secure and the same usage pattern that users are already familiar with.\n The user's private/public key pair i.e. identity, stored in MetaMask, is used directly for the signing function, just like any extension crypto wallet.\n The identity then can be used to interact with canisters, and even control the user's own canisters.\n With this MetaMask/IC signing integration, building a frontend IC wallet app becomes straightforward, allowing MetaMask users to own and control their canister wallets. \n \n\n \n\n How we built it\n \n\n We use MetaMask Flask, a MetaMask developer distribution, to build FoxIC.\n \n\n \n\n We developed a separate package called ICSnap which is used to interact with the MetaMask Flask environment and provide APIs to the adapter.\n We have an adapter installed in the FoxIC frontend and combine it with a wrapped identity, which is used to interact with canisters.\n We have a factory canister to provide registry service and install wallet canister for users.\n We have a standard wallet canister for every user, and set users to be controllers/owners.\n We use HTTP response and heartbeat features.\n \n\n \n\n Challenges we ran into\n \n\n \n\n Learning MetaMask Flask development took some effort.\n To confirm window pop-ups each time when signing, we have to find a way to authorize once and allow signing without pop-ups.\n Building canisters is fun, but managing them needs to be careful. \n Users would expect MetaMask to display and refresh ICP balance. Many blockchain projects have some configuration methods, but it doesn't work for IC. So we do not use RPC calls. \n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Signing with MetaMask Flask works.\n Build a wallet factory canister and every user can adopt one.\n Simulate RPC call (mainly Ethereum RPC request/response) and get correct results according to ICP definitions.\n Heartbeat function works correctly to refresh balance in time.\n \n\n \n\n What we learned\n \n\n \n\n Canisters are powerful, really pushing the boundary of blockchain technology. \n Users controlling and owning their canisters (Self-Sovereign Canister) is a very powerful design pattern. FoxIC won't be possible to send ICP transaction without it.\n Security comes first, usability is important too, and mass adoption is the catalyst. Keep BUIDLing.\n \n\n \n\n What's next for FoxIC\n \n\n \n\n Make ICP transaction happen inside MetaMask.\n Display transaction history and contact books for the user (one option is to store them in the canister and sync from it). \n Support IC tokens and NFTs.\n Upon the BTC/ETH integration, extend the ECDSA signing feature to the FoxIC wallet canister. So BTC/ETH will be supported, as well as transaction on other EVM-compatible chains. \n \n\n \n\n Instructions on how to use FoxIC\n \n\n \n\n Install MetaMask Flask\n \n\n \n\n If MetaMask is installed in the same browser, please disable MetaMask first (turn off at the extension control panel)\n \n\n Visit FoxIC and click \"Connect to FoxIC\" to see the magic.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "foxic#@#@#typescript#@#@#rust#@#@#metamask#@#@#love#@#@#a tool allowing metamask users to enter ic ecosystem",
    "tags": [
      "typescript",
      "rust",
      "metamask",
      "love"
    ],
    "winner": "3rd place"
  },
  {
    "id": "galacticwar",
    "name": "GalacticWar",
    "description": "GalacticWar is a novel protocol that mixes NFT, Gaming and DEFI .",
    "image": "galacticwar.png",
    "links": {
      "github": "https://github.com/harshu4/GalacticWar",
      "livePreview": "https://rlx5r-ziaaa-aaaal-qa7qq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334597-galacticwar",
      "otherLinks": [
        "https://uqnba-7yaaa-aaaal-qa7pq-cai.raw.ic0.app/",
        "https://a4gq6-oaaaa-aaaab-qaa4q-cai.raw.ic0.app/?id=tdja5-gyaaa-aaaag-aaoeq-cai"
      ]
    },
    "submitterFirstName": "Harsh",
    "submitterLastName": "Gandhi",
    "about": "Brief\n \n\n Game Link : Click Here\n \n\n Market Place link : Click Here\n \n\n Github Link : Click Here\n \n\n GalacticWar is a novel protocol that mixes NFT, Gaming and DEFI . At the core GalacticWar is a play to earn game which is powered by ICP blockchain. Community can contribute and earn in a variety of ways, including but not limited to Playing Game , Live streaming gameplay, staking weapons as well as selling on secondary market places.\n \n\n We strongly believe that a good game is an amalgamation of Scarcity, Thrill , Realtime and Sharing. We have combined various elements to bring these properties.\n \n\n \n\n \n\n Why\n \n\n Gamers have recently understood that centralized institutions are fragile. Many game servers are shut down and users are enable to retain there assets which took them years to earn. We can make asset ownership more transparent and trusted with Blockchain. With the influx of new gamers around the world due to various reasons like cheap internet and compute devices. The blockchain gaming industry is still very nascent and there is a huge potential for growth. GalacticWar a realtime strategy game with alluring graphics and play to earn mechanics will onboard games from web2 world as well as webWe specifically chose ICP as it is a one stop solution from frontend to Smart contract execution.\n \n\n Gameplay\n \n\n \n\n \n\n Build the most powerful kingdom and army\n The core of the game lies in creating your own base and looting other bases to earn Aureus (in game DIP20 token). All the elements in your base are DIP20 tokens which can also be sold on DEX.You own your assets. This essentially provides liquidity to the players who wishes to sell there assets. There are special purpose miners which help players to mine in game currencies at a certain rate. There are attackers which players can buy to loot other bases.\n \n\n To give a more detail overview of the Tokenomics\n \n\n \n\n Aureus : This is the main currency of the game which can be used to buy all the assets like cannon/xbow/archer/valkyrie. Players cannot buy Miners with Aureus miners can only be bought with ICP.\n Miners: Miners are locked when a player adds them to there base. Once locked miners start producing aureus every block and after certain amount of blocks the storage is filled so players have to keep collecting. On upgrading miner level the storage capacity and per block output increases\n DIP20 Assets : This are in-game assets that include defenders and attackers. Once a player places them in there base the assets get locked and when a player removes them from there base the assets are unlocked and can be sold in the secondary market place. Currently we have 6 such assets.\n \n\n \n\n  Cannon\n  Xbox\n  Tesla\n  Archer\n  Valkyrie\n  RoboDriller\n \n\n \n\n \n\n The contract is dynamic and allows the addition of assets so we can add more building and asset to the game without redeploying the contract\n \n\n Beside depending on secondary market place we have our own marketplace in which user can buy/sell various assets.\n \n\n \n\n  3D Marketplace : We have our own marketplace in which users can buy/sell there assets. The best part about the marketplace is that players can visualize the asset in 3D before buying it. This gives them the overview of how they will look in the game.\n \n\n \n\n Architecture\n \n\n Usually Gamers spend a lot of there time and effort to advance in a game and when online games shut down or there servers are compromised there is a significant amount of value loss here. Some of the rare assets even take years of hardwork to earn. But when this efforts are spent on centralized games there is a high chance that in future you might not be able to retain ownership of your assets. We aim to solve this by creating a game in which all assets are stored as NFT so that owner can retain full ownership of there assets. We have devised our architecture to resolve this shortfalls of traditional games.\n \n\n Assets as NFT and Logic : Our game logic is transparent and verifiable as we are using canisters for our backend logics. We have deployed our canisters on the ICP . ICP provides free faster transactions to users and it improve the user experience of the game.\n \n\n Backend Canisters : To deliver the most decentralized experience from the events happening in the contract for updating the UI we have deployed our backend as canister\n \n\n Attractions\n \n\n Guilds : People always like playing games together and allowing players to form guilds increases the interaction and active users. Guilds will be a core part of the game and the membership will be tokenized by utilizing DIP-721 standard to show proof of ownership \n \n\n Liquid Assets : All the assets in the game are DIP-20 and hence provides the players opportunity to trade them whenever they want. The concept of liquid assets not only guarantee users that they belong to them but also can be used to arbitrage trade allowing more trading volume in the platform\n \n\n Mystery Boxes : Players will be able to buy and earn mystery boxes for their proof of contribution. Creating organic growth and demand. \n \n\n Decentralized : The goal is to transition towards a decentralized DAO in the longterm to be sustainable and keep the product development as decentralized as possible. A proper documentation will be provided for governance and contributions \n \n\n Why ICP ?\n \n\n ICP provides a wonderful way to deploy and manage your application with robust and decentralized architecture the Canister based architecture of ICP allows applications to be grow and allows sufficient rights to upgrade the code with time. Even the users don't have to pay a fee in order to use the app. \n \n\n Ease of Management : By allowing upgradation of backend smoothly ICP provides great support for the agile paradigm which leads to smoother development process.\n \n\n Cost Efficient : ICP provides very competitive pricing for hosting and executing backend code which makes ICP very attractive \n \n\n Easy Learning Curve : We really liked how detailed the documentations are which accounts for faster development from team. Motoko itself is fairly easy to learn with the documentations provided.\n \n\n Challenges we ran into\n \n\n \n\n  Art Work : Beautiful Art requires time we have been working on this game for more than two months and are very proud to present our 3D assets. We currently have 8 3D assets which we plan to increase over time\n Game Logic : Writing the whole game logic on the blockchain requires multiple contracts we ended up deploying 4 contracts.\n Making Assets Generic: It's easy to make a niche asset that only works on your platform but our NFT Assets support secondary marketplaces.\n \n\n \n\n Future Updates\n \n\n We truly feel that NFT , Gaming and Streaming are interconnected. We want to take this project to it's full potential. Future updates that we have planned are :\n \n\n Marketplace Outreach : Contacting Market place and listing our contracts to provide liquidity to players\n \n\n Providing Liquidity on Swap : Aureus token will be paired with ICP so users can buy/sell there rewards\n \n\n Bringing Tournaments : Users will be able to fight in the tournaments for rare assets\n \n\n Forming Guild : Players will be able to form guild/clan so during an attack they can send some help to fellow guild member.\n \n\n Stream Liquidity Mining : Users whose streams get the most views will be able to mine aureus from it so essentially a stream will become a miner which yields on people watching it\n \n\n Adding more Assets : We want to increase our library of assets such as defense assets and attacker assets",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "galacticwar#@#@#motoko#@#@#icp#@#@#react#@#@#three.js#@#@#unity#@#@#internet-identity#@#@#galacticwar is a novel protocol that mixes nft, gaming and defi .",
    "tags": [
      "motoko",
      "icp",
      "react",
      "three.js",
      "unity",
      "internet-identity"
    ],
    "winner": "5th place"
  },
  {
    "id": "deti:-decentralized-time-travel",
    "name": "DeTi: Decentralized Time Travel",
    "description": "Run code on your canister in the future!",
    "image": "deti:-decentralized-time-travel.png",
    "links": {
      "github": "https://github.com/akshay-rakheja/supernova2022",
      "livePreview": "https://fl5mh-daaaa-aaaap-qalja-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/332847-deti-decentralized-time-travel",
      "otherLinks": [
        "https://d7hzd-wiaaa-aaaap-qamba-cai.ic0.app/",
        "https://npmjs.com/package/@raydeck/useplug"
      ]
    },
    "submitterFirstName": "Ray",
    "submitterLastName": "Deck",
    "about": "Trigger your canister to run periodically, on a schedule, or at any time you designate in the future! Built front to back in Typescript.\n \n\n Inspiration\n \n\n Internet Computer, by being compute-first, allows functionality that is outside the boundaries of what a data-first blockchain like EVM is capable of. The idea of being self-running - literally unstoppable - is unique and possible through the heartbeat core function. But that function is expensive and kinda hard to use!\n \n\n At the same time, we were blown away by Azle. This lets one build with all the speed and familiarity of Typescript while compiling to the WASM that IC requires for its code.\n \n\n There was an opportunity to make a unique IC capability uniquely easy as a service to people making dynamic, decentralized apps. We can imagine use cases across many categories:\n \n\n \n\n SocialFi: DAO governance that acts on the common will after votes by using a time certain for the election. Then the autonomous organization can execute without requiring human intervention.\n GameFi: Multiplayer games that move their common world forward independent of individual player actions. For example, a battle royale style gameplay could keep changing the map on a regular basis to keep the intensity of gameplay.\n Metaverse: Autonmous Metaverse NFTs that \"behave\" even when the user is not around, perhaps even reacting to special events (birthdays, holidays etc)\n DeFi: Time-limited asynchronous market orders that execute or expire a certain period after going in\n Public Good: Dead-man-switches that activate certain actions when a user does not otherwise specify \"stop\" beforehand, releasing information or executing actions to protect protesters. (Messages are cancellable).\n Blue Sky: Skynet's origin from Terminator 3\n \n\n \n\n What it does\n \n\n DeTi makes Internet Computers autonomous. DeTi is a decentralized cron scheduling service that will fire off a message to a designated canister on a specific function endpoint on a schedule or at a time designated by the user. We wrangled the date work so you would not have to: run your function every day at 5pm. Or every Tuesday at 9:23pm. Maybe just once next Saturday at 11. No matter your scheduling needs, you can compose them using DeTi.\n \n\n With DeTi, unstoppable canisters become unstoppable robots. Come try it out. We are offering free DeTi tokens during Supernova. You can check out DeTi out here: https://fl5mh-daaaa-aaaap-qalja-cai.ic0.app/ and its reference implementation here: https://d7hzd-wiaaa-aaaap-qamba-cai.ic0.app/\n \n\n How we built it\n \n\n We used the experimental Azle TypeScript-based WASM compiler. We learned a ton about how this transpilation works and where the limits are for expressing one's intent using Typescript. We implemented stable storage, pre/post upgrade continuity for dynamically keyed mappings, and a whole new library for figuring out dates and time based on the IC timestamp. Finally, we implemented the internal accounting token as a DIP20-compatible interface to make it easy to operate and store value for future use.\n \n\n We made our front-end using React (via create-react-app), Tailwind CSS, and React Router. These tools let us build the whole sophisticated app using one language. We think this will be much easier for other people to understand as they look for references on their IC development journey.\n \n\n Challenges and Accomplishments\n \n\n The IC Factor We wanted to focus on an aspect of IC that is different from other blockchain technologies. The focus on unstoppability and advancing to autonomy is very IC and very much unlike other distributed ledger systems. IC can not just record - it can behave.\n \n\n Social Utility: We're proud of figuring out a path to make the heartbeat more economical as a means of activating IC Canisters. Slowing the main check allows us to manage the vast majority of scheduling use cases while keeping cycle usage in check.\n \n\n Technical Accomplishment: We are also proud of making Azle work in a nontrivial application. The system is wonderful but, like the whole IC ecosystem, very much in development, and figuring out where the quirks were was a technical challenge. But a worthwhile one!\n \n\n Giving Back Finally, being able to leave behind tools for the community furthers our own idea of how we want to contribute to the blockchain community. We've spun out a couple of tools to help the community that are based on the work we did here:\n \n\n \n\n usePlug makes it easy to integrate the plug wallet into a React App. It exposes a simple provider pattern and is implemented completely in Typescript to make it easy to work with. This repository now uses this tool, so it can be a reference implementation. \n [azle-react-template](https://github.com/rhdeck/azle-react-template`] is a GitHub template repository designed to make it easy for people to The NPM package and template are a start and we hope that they will allow others to make progress more quickly.\n \n\n \n\n And we hope they do it with Azle!\n \n\n What we learned\n \n\n We learned that Internet Computer is very different from the other blockchain work we have done! The many chains involved, the semi-private way data is handled, and the complexity of working with a WASM runtime were all new to the team.\n \n\n We learned to be patient with Azle - the opportunities are enormous, but it rewards careful, try-build-deploy approaches to extension as we learn how it interacts with the underlying Rust systems.\n \n\n And we learned that the potential of these technologies is ahead of us. We're excited about the future of Internet Computer. DeTi can send us a reminder to celebrate that progress down the road.\n \n\n What's next for DeTi: Decentralized Time Travel\n \n\n We would love to continue to work on this project, which we think would be helpful to a number of projects that are about the unique capabilities of IC.\n \n\n \n\n Putting on SNS when it is available\n Passing custom arguments to the scheduled messages\n Allow agents - make a canister able to self-schedule using another's pulse account, all from code\n Add DETI to a DEX for easier liquidity\n Support identification and wallet software beyond Plug (as cool as it is!)\n Add payment-based DETI minting\n Increase the robustness of DETI to handle scale and be more unstoppable by moving across subnets.\n \n\n \n\n We're looking forward to making DETI the best way for internet computers to reach into the future. \n \n\n Thanks\n \n\n We are grateful to the DFINITY Foundation, Demergent Labs, Psychedelic Studios, and Jordan Last personally for the amazing resources they've published and helpful answers on the DFINITY discord. This hackathon exposed us to this very cool and different blockchain technology, and we are grateful for it.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "deti: decentralized time travel#@#@#typescript#@#@#azle#@#@#tailwindcss#@#@#react#@#@#run code on your canister in the future!",
    "tags": [
      "typescript",
      "azle",
      "tailwindcss",
      "react"
    ],
    "winner": "4th place"
  },
  {
    "id": "nft-exchange",
    "name": "NFT Exchange",
    "description": "The NFT Exchange for Web 3.0",
    "image": "nft-exchange.jpg",
    "links": {
      "github": "https://github.com/IC-Difinity-Project",
      "livePreview": "https://eytcp-gaaaa-aaaap-aagna-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333058-nft-exchange",
      "otherLinks": [
        "https://docs.google.com/presentation/d/104xr9WEgrpsZqwqPxQBZA-PNJUYNMei3kbQ7aqJz16I/edit?usp=sharing"
      ]
    },
    "submitterFirstName": "Vladyslav",
    "submitterLastName": "Stoianov",
    "about": "Inspiration\n \n\n Inspiration came from where we didn’t expect, having collected different collections of NFTs, we realized that there is no service that will act as a guarantor of an equivalent exchange between the participants in the transaction.\n \n\n What it does\n \n\n The idea of the service - The NFT exchange at the moment has a market character in the buy-sell style, therefore, looking back at the cryptocurrency market, we understand that we are missing something important for the growing NFT market and this is the exchange opportunity (swap). \n Having chosen the best blockchain with infinite potential, we got to work. The service will allow you to exchange your NFT collections between participants, put up for exchange, as well as its condition. \n The ability to pay extra for an equal exchange and collect Super Collections (Silver -Gold - Diamond) that can be staked and receive an exchanger token as soon as the SNS internet computer is available.\n \n\n How we built it\n \n\n With sweat on our foreheads.\n \n\n Challenges we ran into\n \n\n -At the stage of forming a team from Ukraine, the biggest challenge is the War, the project was frozen for a month, as the hostilities forced us to urgently leave the city and seek temporary shelter.\n \n\n Accomplishments that we're proud of\n \n\n -Our team is proud that in the most difficult time we continue to follow the idea around which we have gathered.\n \n\n What we learned\n \n\n Working in a well-coordinated team will help achieve incredible breakthroughs.\n \n\n What's next for NFT Exchange\n \n\n -In order for the team to release an exchange service and bring the best ideas there, and with them a stream of new users. \n -The best collections by rarity will receive % of the entire commission on the service for a month, provided that the collection is staked on the exchange service. It will also be displayed in the gallery of collections from 1st to 3rd place.\n -We are also developing animated NFTs for the exchange service,\n (https://devpost.com/software/icplanets-9r16lx) \n which will be both an art collection and a tool for staking on the service for additional bonuses in the exchange process between users. \n With a support, tools will be available to us that will help NFT planets evolve into the metaverse.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "nft exchange#@#@#motoko#@#@#internet-identity#@#@#nextjs#@#@#the nft exchange for web 3.0",
    "tags": [
      "motoko",
      "internet-identity",
      "nextjs"
    ]
  },
  {
    "id": "ilearnx-beyond-web3-(by-yaruhito-project)",
    "name": "iLearnX Beyond Web3 (By Yaruhito Project)",
    "description": "We offer all-in-one Web3developer learning platform: roadmap, course materials, learning community, support system&hackathon opportunity hosted on ICP for aspired Web3 developers/challengers.",
    "image": "ilearnx-beyond-web3-(by-yaruhito-project).png",
    "links": {
      "github": "https://github.com/AcmeGamer/IPEX",
      "livePreview": "https://aac5l-aiaaa-aaaam-qaqla-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334237-ilearnx-beyond-web3-by-yaruhito-project",
      "otherLinks": []
    },
    "submitterFirstName": "Mis311",
    "submitterLastName": "Hanamura",
    "about": "Application\n \n\n Inspiration\n \n\n We were inspired by Learnweb3.io and Web3.university in terms of philosophy, PlaytoEarn model represented by Axie (especially its demography of the main users) and Caveday.org in terms of productivity and co-working. We are also (anti) inspired by Student Loans and Dramamine chasing social media business model.\n \n\n What it does\n \n\n iLearnX BeyondWeb3 provide users with free online library and co-working networks in order to complete Web3 development/designer course. It generally offers open-source/free programming summary and roadmaps to become a key player in the industry, and where you learn it, you also have an opportunity to teach others and get a job.\n \n\n How we built it\n \n\n Internet Computer is a single source of iLearnX BeyondWeb3 (storing courses and data of users: progress in the course). Using ICP native language Motoko, React and Solidity, the entire database is fully on chain and ready to expand.\n \n\n Challenges we ran into\n \n\n It was the first time for our team to build project on ICP, and when we tried to deploy our site on ICP canister it kept giving errors we have never seen before. We hope that there will be more chances to become familiar with the protocol in the future. \n \n\n Accomplishments that we're proud of\n \n\n We are proud that we managed to build a e-learning website that can be used by Web3 curious from today, that is easy to scale up. We mapped entire backbone structure and blueprint of the ecosystem and set up new milestones for next development.\n \n\n What we learned\n \n\n We learned how to launch an entire open-education platform on one of the most advanced blockchain project in the sphere. \n \n\n What's next for iLearnX Beyond Web3 (By Yaruhito Project)\n \n\n We will continue to build a new cross-platform application to automate learning process. We are looking for blockchain partners to build our project upon/with, and possibly look into EdTech accelerator programs from some database site. Simultaneously, we will build strong community of aspired developers and start iteration of our app in a few months.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ilearnx beyond web3 (by yaruhito project)#@#@#react#@#@#vite#@#@#motoko#@#@#javascript#@#@#html#@#@#css#@#@#we offer all-in-one web3developer learning platform: roadmap, course materials, learning community, support system&hackathon opportunity hosted on icp for aspired web3 developers/challengers.",
    "tags": [
      "react",
      "vite",
      "motoko",
      "javascript",
      "html",
      "css"
    ]
  },
  {
    "id": "cronacle-+-freeos:-a-cross-chain-oracle-for-a-democratic-ubi",
    "name": "Cronacle + Freeos: A cross-chain oracle for a democratic UBI",
    "description": "Freeos, a democratic UBI—where participants steer the economy through a democratically elected monetary policy each week—connects to a novel type of decentralised, cross-chain oracle called Cronacle",
    "image": "cronacle-+-freeos:-a-cross-chain-oracle-for-a-democratic-ubi.jpg",
    "links": {
      "github": "https://github.com/orgs/FreeosDAO/repositories",
      "livePreview": "https://xwqat-7aaaa-aaaad-qafaq-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/329755-cronacle-freeos-a-cross-chain-oracle-for-a-democratic-ubi",
      "otherLinks": [
        "https://medium.com/freedao/freeos-supernova-guide-2577d747b423",
        "https://www.protonscan.io/account/cronacle?loadContract=true&tab=Tables&account=cronacle&scope=cronacle&limit=100&table=prices"
      ]
    },
    "submitterFirstName": "Jerome",
    "submitterLastName": "Kelsey",
    "about": "Synopsis\n \n\n The Freeos DAO is a type of democratic Universal Basic Income where participants vote on the monetary policy each week for an equal share of the \"mint\" for participating.  \n \n\n The vote on the monetary supply is important because it gives the system a fighting chance to help manage the supply, demand, liquidity and volume aspects of the economy—which requires a strong need for trusted oracles.\n \n\n Our team has started a working proof-of-concept on an oracle system—powered by the Internet Computer and triggered by the activity of the Freeos participants—that we call Cronacle.  \n \n\n This oracle helps Freeos DAO with our needs for oracle services that tie into this important monetary policy vote, and we also aspire to extend this into a cross-chain solution to bring the Freeos DAO to be a cross-chain DAO to be anti-fragile and more resistant.\n \n\n Our further aspirations are to build Cronacle as a DAO and open oracle service for other, third-party dApps that need oracle—or cross-chain—solutions. The Internet Computer Protocol allows for such aspirations to be achieved—with its focus on bridging Web2 with Web3, as well as signing cross-chain transactions securely on many other blockchain platforms.\n \n\n Inspiration\n \n\n Cronacle came about to address a number of needs in the development of the Freeos Economic System—both immediate and long-term.\n \n\n One of the design principles of Freeos was to create an unstoppable financial system governed by the people, for the people. Without decentralized oracles, a decentralized user interface and being on more truly decentralized blockchain platforms—we would be reliant on centralized services.\n \n\n We initially explored the Dfinity Internet Computer’s (IC) decentralized frontend hosting and launched our Open Beta's static web frontend using an IC container. The goal was to establish a decentralized and unstoppable frontend to help ensure our dApp was more authentically decentralized.\n \n\n We then noticed upcoming features of Dfinity that might be used to drive a decentralized oracle and way for Freeos to be cross-chain—utilizing Dfinity’s HTTP Requests and ECDSA Threshold signing—allowing a secure way to read and write to most of the major blockchains.\n \n\n Additionally, knowing how many frequent transactions that our Freeos system was generating—even in the Open Beta—we surmised that this activity could piggyback the initialisation of our oracle and cross-chain processes. Similar to how Augur leveraged prediction markets to create a crowd-initiated oracle in the Ethereum ecosystem.\n \n\n The architecture of the Freeos system already included a function we called \"tick\" that bundled any \"automated\" processes we needed to kick off, and piggybacked the tick action to our commonly called actions—knowing the incentives of our tokenomics design drove the activity volume to make the system work.\n \n\n If we could utilize the Freeos participants to drive our own oracle and cross-chain needs—in a similar way to our tick function—then the same activity could be leveraged to drive an open, decentralized, blockchain-native, trustless oracle system.\n \n\n Thus the concept of Cronacle—a decentralised, blockchain-native oracle—was born and we successfully received a 25K Dfinity Foundation Grant for our primary explorations and proof-of-concept.\n \n\n Add some of the security features pioneered by other oracles—with the already secure qualities of native ECDSA signing and HTTP Requests provided by Dfinity, then a very valuable service could be built off the back of our proof-of-concept.\n \n\n What it does\n \n\n In its proof-of-concept form, Cronacle piggybacks on the high-volume transactions of the Freeos DAO and leverages the front-end hosting features of an Internet Computer cannister to fetch CoinGecko and Protonchain's price data through their APIs and then stamps the price of Bitcoin and the price of FREEOS at the moment the participant signs a transaction (Claim, Unlock, Mint) on the Proton blockchain.\n \n\n The current way it is doing this is by getting API calls and parsing the JSON in the frontend.\n \n\n We are very aware that this method is not secure and data could be intercepted and altered, but this technique was used in substitute for the upcoming HTTP Request feature that was not yet available. At the moment, no system relies on this data for anything mission-critical, so this proof-of-concept is merely a placeholder.\n \n\n Since the Proton blockchain includes an easily accessible, free, KYC service, there could conceivably be a way to have data stamped by verified individuals—with reputation and/or slashing penalties to help mitigate the risk—in addition to the more secure, native HTTP Request feature that is upcoming that would move this logic from the frontend to be directly within the canister.\n \n\n How we built it\n \n\n We leveraged the fact that the Proton SDK allowed us to sign transactions within an IC-hosted static web application and allowed us to inject data received from APIs into a Proton transaction.\n \n\n Having a gas-free blockchain combined with the Freeos DAO that incentivises transactions meant that could have many opportunities to stamp this data on the Proton blockchain.\n \n\n We experimented with an early NFT oracle bidding system that accepted the freely earned FREEOS tokens to bid on hundreds of NFTs. In this experiment, we noticed that the focus on winning an NFT meant no users were motivated to try to modify the oracle data—despite how insecure it actually was.\n \n\n We also modified this oracle to also update the price within an IC canister and was able to have the same data available on the Internet Computer.\n \n\n We also explored allowing users to tie their Proton account with their Internet Identity—since Proton includes KYC—this verification could be utilised by IC dApps.\n \n\n Challenges we ran into\n \n\n At first, one of the main challenges we ran into was deployment. We would often come across errors in deploying our code that we could not find any documentation support that clearly explained what the issue might be.\n \n\n Our next challenge was not progressing further past our early proof-of-concept as we were waiting for the native HTTP Request feature that would have replaced our frontend solution with a more secure, canister-driven solution.\n \n\n That being said, other than those challenges, the Internet Computer has been amazingly robust and well architected. It feels like a technology of the future, and we are excited to be developing within it as one of the early projects in the ecosystem.\n \n\n Of note, one challenge that we had concerns about—integrating with the Proton SDK and getting transactions signed in a canister-hosted frontend—was not a concern at all. Everything worked perfectly in our first try, which was an extremely pleasant surprise for the team.\n \n\n Accomplishments that we're proud of\n \n\n We received hundreds of community-driven transactions by building an NFT auction that used the FREEOS token where each bid action would simultaneously update the price of BTC in our Proton tables. This history can be seen here: https://www.protonscan.io/account/cronacle?loadContract=true&tab=Tables&account=cronacle&scope=cronacle&limit=100&table=btcprice\n \n\n We were proud that a proof-of-concept showed that sufficient transaction activity could drive a prototype of an oracle system. We felt assured that migrating to the upcoming HTTP Request feature would allow this to be more secure and the upcoming ECDSA Threshold Signing feature could pave the way to being a cross-chain dApp.\n \n\n What we learned\n \n\n As we were new to the Internet Computer, we learned the nuances of deployment, how to fund a canister with cycles, how to structure a project's folder for deployment, how to save data, and call methods, and integrate Internet Identity into a dApp (as our earlier grant milestones included Internet Identity and canister functionality).\n \n\n What's next for Cronacle + Freeos\n \n\n We would migrate our proof-of-concept to use HTTP Requests and ECDSA Threshold Signing to make Freeos a true cross-chain dApp, and to bring in the oracle data we need to support the monetary policy voting that the Freeos DAO participants require to make the system work effectively.  \n \n\n The key elements that need to be cross-chain are the supply (we have a unique logic for supply called \"Conditionally Limited Supply\") and the result of the three stages: Survey, Vote and Ratify. All other logic can be native in the dApp on the other chain. To help ensure reliability, we would incentivise beyond just being purely driven by the Freeos participant's daily actions and reward CRON tokens to Validators, and those helping support the needs of the data Feeds.\n \n\n Once we have demonstrated this, in our own project, we would extend this service so third-party dApps could subscribe to the service of this cross-chain oracle system, again using CRON tokens.\n \n\n Problem\n \n\n Oracles are so fundamental to the future of Web 3 that this problem is widely referred to as “The Oracle Problem” within the ecosystem. Without a trusted, and decentralized way to validate off-chain data sources onto the blockchain, robust, mission-critical applications that take in rich data cannot be securely built. Essentially a blockchain can be likened to a PC without the internet—still powerful and useful but severely limited and hampered in its potential.\n \n\n Oracles are not only a decentralization problem—it’s also a problem of governance and ownership. Not only can a corrupted data source—whether malicious or malfunctioning—can put a smart contract at serious risk, so can a corrupted oracle provider.\n \n\n Additionally, many of the current oracles are expensive, difficult to use and manage, and require cozy relationships to work with to bring their APIs and services to a developer’s blockchain platform of choice.\n \n\n Solution\n \n\n A DAO managing the governance of the protocol, the API sources, the Validators, and incentive structures can mitigate many of the problems with current oracles\n \n\n Cronacle DAO is a truly decentralized, blockchain-native oracle which is community-owned and managed.\n \n\n It is low-cost, due to the Internet Computer’s low costs + piggybacking on Freeos Economic System’s high transaction throughput as a base layer, with CRON Feeds and Validators to provide extra assurance that the data is secure and consistent.\n \n\n It is trustless and permissionless, allowing any API call to be submitted by developers—without asking node providers for permission via the Internet Comptuer’s native HTTP Requests feature.\n \n\n It is cross-chain and blockchain-native, signing transactions directly on-chain via the Intenet Comptuer’s native ECDSA threshold signing feature.\n \n\n A base level of cheap transactions are automatically signed for simple, non-mission critical applications via the crowd—piggybacking off the incentivised transactions occurring using the mass-market Freeos Economic System, a high-transactionDAO that democratically mines and manages a currency and economy as a democratic UBI. Cheap transactions allow small-scale developers to have a way to start building their solutions.\n \n\n Mission-critical transactions are validated and secured by the Validators and Witnesses to ensure extra reliability and security for dApps that manage or hold more significant amounts of value.\n \n\n The development of this oracle will first be used to help build a version of the Freeos DAO native on the Internet Computer that is synchronised with the version on the Proton blockchain. Additionally, Proton's KYC will allow Internet Identities to be assigned to verified, KYC'd Proton account names.\n \n\n \n\n To experience our proof-of-concept live, we recommend reading this article\n And then going to our canister address here: https://xwqat-7aaaa-aaaad-qafaq-cai.raw.ic0.app/\n Claiming, Voting and Minting will use the oracle to update BTC and FREEOS prices, with the results seen on the Proton block explorer\n \n\n \n\n Tokenomics\n \n\n Holders of the native tokens (CRON) can stake their tokens to be Validators for reaching consensus on API data sources and its validity stamped onto the blockchain.\n \n\n APIs are submitted and subscribed to also using CRON tokens by developers—allowing developers to choose the APIs they wish to utilize, opening up the protocol to build any conceivable dApp. Later, this can apply to allowing customers to easily trigger cross-chain applications and to offer bridges for their native tokens to various chains—as a service.\n \n\n Vision\n \n\n The Freeos DAO needs reliable oracle services that are truly decentralised and secure to be an effective democratic UBI where the participants can truly have some tangible say in their own economic system.  \n \n\n Additionally our vision is that the Freeos DAO is available on multiple blockchains—to allow more participants to benefit from this democratic UBI solution. Our first endeavours will be to build a native version of the Freeos dApp on the Internet Computer that is synchronised with the Proton-native Freeos dApp—and then move on to other blockchains.\n \n\n But our ultimate vision is that the future of Web3 is cross-chain, and if we build this service for our own needs, it can be useful as a service for others. We forsee this as being increasingly valuable as the industry moves towards a truly cross-chain future.\n \n\n The amazing, alien-like-tech of the Internet Computer can be this cross-chain hub as well as a secure and trusted connection to the Web2 world. Through attempting to solve our own needs, we now envision a valuable service that we can provide to help facilitate the arrival of this interconnected, interoperable future and—through our existing Freeos DAO—provide a more truly \"universal\" basic income where each person has a say in their own economy.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "cronacle + freeos: a cross-chain oracle for a democratic ubi#@#@#c++#@#@#protonsdk#@#@#motoko#@#@#vue#@#@#quasar#@#@#svelte#@#@#freeos, a democratic ubi—where participants steer the economy through a democratically elected monetary policy each week—connects to a novel type of decentralised, cross-chain oracle called cronacle",
    "tags": [
      "c++",
      "protonsdk",
      "motoko",
      "vue",
      "quasar",
      "svelte"
    ]
  },
  {
    "id": "hashmix-icp",
    "name": "HashMix ICP",
    "description": "HashMix ICP - Boosted Internet Computer Blockchain Staking, Governance & DeFi Infrastructures",
    "image": "hashmix-icp.jpeg",
    "links": {
      "github": "https://github.com/HashMixProject",
      "livePreview": "http://app.supernova.hashmix.org/",
      "external": "https://supernova.devpost.com/submissions/329835-hashmix-icp",
      "otherLinks": [
        "http://supernova.hashmix.org/"
      ]
    },
    "submitterFirstName": "Stephen",
    "submitterLastName": "M",
    "about": "Inspiration\n \n\n Internet Computer brings a new paradigm to the Web3 and crypto world, which enables a seamless development and user experience for both application developers and end users. As decentralized applications are booming in the IC ecosystem, we see a huge demand for an integrated infrastructure for ICP holders to take one step further in the IC world, to be an investor and builder in staking, governance, GameFi, DeFi, etc. That's what HashMix ICP will provide, a one-stop terminal for staking, voting, and anything else ICP holders need.\n \n\n What it does\n \n\n \n\n On-demand NNS Staking pool deployed on IC canisters with high APY and great liquidity (stToken called hsmICP issued), user-friendly to every ICP holders, who can get reward, withdraw, vote and even trade directly with their hsmICPs.\n Decentralized governance protocol for every HashMix ICP stake holders to join in NNS. Users with hsmICPs will work as a DAO to determine HashMix Neurons’ governance activities.\n HashMix ICP DAO to provide DeFi incentive toolkits and other voting power support for other DApps/infrastructure providers in the ecosystem.\n \n\n \n\n How we built it\n \n\n We deployed part of our service on a canister thanks to IC. The whole application follows a Web3 application code of design, users can connect their wallet to interact with the application and control their own assets.\n \n\n Challenges we ran into\n \n\n The major challenge we met is that the IC ecosystem is still premature, not much documentation, libs, frames or tools can be used. Luckily the developer community and dev team is very supportive.\n \n\n Another big challenge is that canisters can’t create or own a neuron because of the limitation of IC. That means the staking and voting operations can't be completed by the canister itself; some steps have to be operated centrally. We’ll iterate this as the IC system improves.\n \n\n Accomplishments that we're proud of\n \n\n We’ve finished the application we designed with key functionality, that’s the most accomplishment for us in the past weeks. \n \n\n We successfully integrated the NNS staking with our reward distribution system and governance system. HashMix ICP is completely based on IC, and is the first decentralized NNS staking application. We’re proud to be the bridge between ICP holders, IC ecosystem, and IC infrastructures.\n \n\n We’re also very lucky to meet a lot of IC developers and partners in the ecosystem, working together on the way of building.\n \n\n What we learned\n \n\n During the product design and development, we revisited the mechanism of IC, especially canister, learned a lot about developing rules on IC and how to work with the system.\n \n\n What's next for HashMix\n \n\n \n\n HashMix ICP is a long-term project, here are some milestones we’re going to hit.\n HashMix ICP Staking pool on IC\n HashMix ICP governance system on IC\n Audit and Launch\n Decentralized Node provider program\n Interact with other DApps in IC ecosystem\n HashMix ICP DAO ignition\n More assets supported (both IC and other mainstream assets like BTC, ETH, etc.)\n \n\n \n\n Community:\n \n\n \n\n Twitter\n Telegram",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "hashmix icp#@#@#ic#@#@#canister#@#@#react#@#@#plugwallet#@#@#hashmix icp - boosted internet computer blockchain staking, governance & defi infrastructures",
    "tags": [
      "ic",
      "canister",
      "react",
      "plugwallet"
    ]
  },
  {
    "id": "nnsdao-protocol",
    "name": "NnsDAO Protocol",
    "description": "NnsDAO is a boundaryless autonomous organization, which provides some basic modular programmable services for building the world of DAOn.",
    "image": "nnsdao-protocol.png",
    "links": {
      "github": "https://github.com/NnsDao/nnsdao_sdk",
      "livePreview": "https://h637e-ziaaa-aaaaj-aaeaa-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326858-nnsdao-protocol",
      "otherLinks": [
        "https://github.com/NnsDao/nomos-v1"
      ]
    },
    "submitterFirstName": "NnsDAO",
    "submitterLastName": "Protocol",
    "about": "Inspiration\n \n\n Before designing the NnsDAO protocol, many different ideas emerged, such as what form a team should be created in a more suitable way. business job, but you want to do something interesting outside of your job, at this time, you need to find groups in different fields and get to know people For a programmer or a worker in another profession, the social skills and Under the circumstances, it is difficult to find people with common values or ideas. Based on this scenario and demand, we propose the NnsDAO protocol, an IC-based virtual identity system that allows everyone to have unique exclusive skills and credit values, and through the Identity, while showing one's own skills and credit values, and through the continuous accumulation of time, they can form their own unique virtual reality in the WEB3.0 era. Perhaps under this trend, it's easier to find a like-minded person. Therefore, it will become possible to create DAOs based on such a scene, guided by a catalyst Therefore, it will become possible to create DAOs based on such a scene, guided by a catalyst character and form a decentralized organization. \n \n\n What it does\n \n\n We designed the NnsDAO protocol as a programmable and intelligent modular protocol, which includes but is not limited to the following basic protocol functions: Nomos Core, DAOn domain rules, DAOs service functions and rules, virtual passport system, governance module and other functions.\n \n\n How we built it\n \n\n We use Rust, Motoko for contract development, React, Typescript to build better UI interaction, and IDL and Actor for business interaction, users can use our Nomos platform for voting, governance, joining DAOs, initiating DAOs and DAOn, etc., and also provide SDK and We also provide SDKs and external Actors that different web3 applications can access through SDKs or actor models to achieve their business needs.\n \n\n Challenges we ran into\n \n\n We encountered language bottlenecks when building the application, such as Motoko's storage performance and GC issues, so we moved part of the technology stack after implementing some of the contracts, and are now using Rust.\n \n\n When exploring the application and practice of DAO, we also encountered the problems of how to collaborate and how to attract more contributors, how to vote, etc. For this, NnsDAO is building its own on-chain reputation system to govern and develop the whole protocol by weakening the Token and Giant Whale issues, in different scenarios, DAOs and DAOn are governed by the members of the organization, and let everyone have the rights of DAO. DAO's rights and interests, we are trying to make users have a better experience through this form, and at the same time to promote products and applications have more help.\n \n\n Accomplishments that we're proud of\n \n\n In developing the NnsDAO protocol, we first built the product, accumulated users, and expanded our technical experience in the field, and explored to find a more suitable DAO on IC to develop a more complete NnsDAO architecture, while we are adhering to the technology-driven product iterative route, in the second quarter of the DSCVR hackathon in 2021, our team achieved the second place. At the same time, we are building more applications in the IC ecosystem, such as Texas, Dlotto, Icpscan, Icptree, ICmarket, etc. We have been awarded four grants from Dfinity.\n \n\n What we learned\n \n\n By building different products and trying different dapp applications, we are figuring out more applications suitable for IC, and also laying out more application scenarios that are more suitable in the web3 era. Through the application practice, we found that IC has absolute advantages in operation and cost, which can save the development cost and operation cost for the startup team.\n \n\n What's next for NnsDAO Protocol\n \n\n Phase I( Q2-2022) Realization of nomos infrastructure(done)\n \n\n Complete prototype diagram and design plan of nomos.\n \n\n Connect to NnsDAO's Starfish NFT, badge and base reputation value.\n \n\n Add identity layer mapping, prepare for later NnsDAO Identity.\n \n\n Build the basic DAO SDK to implement the basic architecture and model of DAO, including voting, proposal, governance and other basic functions.\n \n\n Phase II( Q3-2022): DAO core services and reputation system\n \n\n Implement the business functions of NnsDAO Protocol through basic DAO, such as create, join, leave, vote, initiate proposal, and create the basic rules, roadmap, and vision of each DAO when instantiated.\n Connected to Nomos management platform, users and BUIDL can independently establish the basic DAOs, DAOn.\n \n\n Implement the basic version of the reputation system and DID model.\n \n\n Connect to neuron and SNS services, improve the ecological weight and account interaction, and add more data dimensions to NnsDAO identity and reputation system.\n \n\n Implement the NDP Staking, and use the protocol pass, NFT, badge, etc. as weights for voting and proposal before the reputation system is improved.\n \n\n Phase III( Q4-2022): NnsDAO will add more services, promote the application era, and access to more existing IC ecology.\n \n\n Upgrade Nomos prototype and add new extensions to the design.\n \n\n Extend more underlying services of DAOs, access to reputation, add Task management and bounty mode, chat services, all users joining DAOs can do integrated services through Nomos, without the need to use traditional chat tools and project management tools.\n \n\n By building typescript SDK / javascript SDK, access to Texas, ICmarket, and other NnsDAO's own ecology, through a standard to allow more projects can be directly through the SDK access, to provide more language SDK, such as Rust, Motoko, Go, Python version of the SDK can allow different The service can be accessed by different language groups.\n \n\n Based on the SDK of NnsDAO Protocol, we implement and access subDAO to the ICmarket, so that NFT can buy and hold through the form of DAO.\n \n\n Through the identity of NnsDAO protocol to build personal PFPs, to achieve a simple implementation of the product.\n \n\n The current idea is: an on-chain web3 homepage composed of identity attributes, which include address DID, NFTs held, dao joined, governance participated, contribution in the community, and contribution in the IC ecology, which we will embed in the NnsDAO protocol through a proxy layer of Canister, and realize this through the index of data dApp, etc.\n \n\n We will find more projects in the IC ecosystem to access the NnsDAO Protocol to realize the dApp built with community governance and buidl, and continuously improve the governance model and reputation service.\n \n\n Expand the size of NnsDAO's fund, accumulate capital and incubate dApp to join the NDP while the NDP continues to achieve profitability.\n \n\n NnsDAO fund will go to the NnsDAO's fund, which will be used to build the dApp, and to improve the governance model and reputation service. NnsDAO fund will incubate more DPOs and help them to realize Token issuance, NFTs casting, and eventually achieve our milestone \"Moon Landing Plan\".\n \n\n Phase IV( Q1-2023): Combination of reputation system and DAO, open sponsor\n \n\n We will continue to improve the reputation of SDK and DID, build more applicable models to the reputation and DID scenarios, and open the NnsDAO protocol and reputation system combination, an immutable soul reputation is developing rapidly.\n \n\n After the DAO access, creation and voting are gradually improved, the controller of Canister is removed and returned to the community, and the Canister model is controlled by Canister for later iterations and updates.\n \n\n Extending the DAO sponsorship service to give BUIDL and the project more income sources, some real BUIDL can get income by joining DAOs, but also a kind of recognition for the creators.\n \n\n Phase Future: \n \n\n DAO projects can be managed, expanded, and upgraded autonomously, such as DAOn, infinite splitting of DAOs, and management of DAOs.\n \n\n Reputation and DID-based expansion scenarios, Defi and lending based on DID and reputation.\n Let more all in web3 and DAO contributors can develop freely, everything is DAO.\n \n\n We hope that NnsDAO can create a real user and community DAO, which can automatically scale up and down, and run in a flat form, each DAO member can realize their own value, so that more BUIDL can create their own brand and improve products and services through collaboration, and for users and BUIDL they can join one or It is foreseeable that a variety of DAOs and subDAO will further explore open, interoperable and combinable new features, and gradually solve the problem of \"DAO silos\", slowly adapt to the various needs of existing or future projects, and become a true \"organizational Lego\" and \"organizational Lego\". \"Organizational Lego\" and Web3.0 infrastructure. We believe that the future of web3 must be a combination of DAO, NFT, reputation for collaboration, and everyone is working for themselves, they are investors and a BUIDL.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "nnsdao protocol#@#@#rust#@#@#motoko#@#@#react#@#@#typescript#@#@#go#@#@#nnsdao is a boundaryless autonomous organization, which provides some basic modular programmable services for building the world of daon.",
    "tags": [
      "rust",
      "motoko",
      "react",
      "typescript",
      "go"
    ]
  },
  {
    "id": "bazahei:-the-first-icp-xrp-cross-chain-nft",
    "name": "པ་ཀྲ་ཧེ་། Bazahei: The first ICP-XRP cross-chain NFT",
    "description": "We pioneer a general cross-chain NFT solution from IC to XRP to promote the regional and under-represented culture.",
    "image": "bazahei:-the-first-icp-xrp-cross-chain-nft.png",
    "links": {
      "github": "https://github.com/Itoka-DAO/IC-XRP",
      "livePreview": "https://aack7-jaaaa-aaaai-acl6a-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329724-bazahei-the-first-icp-xrp-cross-chain-nft",
      "otherLinks": [
        "https://github.com/Itoka-DAO/xrp_server",
        "https://github.com/Itoka-DAO/icxrp"
      ]
    },
    "submitterFirstName": "Malcolm",
    "submitterLastName": "Yang",
    "about": "པ་ཀྲ་ཧེ་། Bazahei: The first ICP-XRP cross-chain NFT\n \n\n Building for Dfinity Supernova Hackthon in 2022\n \n\n Introduction\n \n\n The Internet Computer Protocol (ICP) is the fastest and most scalable general-purpose blockchain. It extends the Internet with computation: ICP allows Dapps to run 100% on-chain as it can serve web contents directly on browsers. Compared to Ethereum, the ICP is cheaper, faster, upgradable and fall-stack development friendly. Since the ICP community has established one of the strongest GameFi&SocialFi ecologies in the world, the NFT digital assets based on ICP are rising due to the straight path to the ecology. In 2022, the NFT projects launched on ICP are exponentially growing, but the value of the total assets is suppressed by the bear market of ICP native tokens. \n \n\n XRP, one of the most renowned blockchain networks since 2012, focusing on cross-border payments and central bank digital currency solutions, just launched NFT R&D in 2021 to leverage the success from fungible token to non-fungible. According to the article Utility-Based NFTs: Solving Real-World Problems in Media & Entertainment” by Ripple labs by Ripple labs, the NFT development will focus on utility-based NFT to solve the real problems in Media & Entertainment such as licensing and ownership, which align with the Itoka team's vision to solve current issues in the music industry via decentralization. If the XRP establishes the NFT ecosystem in the near future, this multi-billion dollar crypto market will be active as NFT will be the only few assets for XRP current holders to invest within its ecosystem.  \n \n\n It would be very interesting and impactful to bring ICP and XRP together to talk about NFT. If we can bring the ICP NFT value to the Tuhao (meaning financially independent in Chinese) XRP community who cannot enjoy smart contracts and NFT yet, the infrastructure development would be greatly appreciated by both communities and end up with a win-win situation for everyone. Therefore, Our Itoka team build the cross-chain framework and issue a collection of image NFTs called Ba-Za-Hei(པ་ཀྲ་ཧེ་།, 巴扎嘿) to prove the concept, along with our ICP-XRP cross-chain canister implemented by Motoko. Bazahei NFTs is the first NFT collection that can freely migrate between ICP and XRP. It is in honor of nomad singers from the Tibetan area in Sichuan, China. It revitalizes the long-forgotten art through a decentralized web and symbolizes the beginning of the amalgamation of two once-insulated communities.\n \n\n Background\n \n\n Tibet remains isolated and untouched for decades. This virgin land of Buddhism has delivered its spiritual and mysterious impression to people around the world, yet few truly understand the culture there. \n \n\n Luckily, Itoka team members had a chance to go deep into the Tibetan plateau and spend days with local tribes. We were warmly welcomed and presented a Hadag, a silk-made white scarf as a symbol of Buddha's blessing. During our stay, we surprisingly discovered the rarely known talent of people there: music and art. Tibetan people are born to be musicians and dancers. Every single one of them can dance and sing, even for small kids. They sing and dance for grazing, for ritual events, for celebrations, or just for normal daily matters. After years their euphonious voice, rhythmic body movements, and genuine smiles are still vivid in our heads. Our Itoka team would like to take this chance in supernova to connect Tibetan culture with everyone beyond the Himalayas using Web3 technology. We hope to break the isolation barrier of all great art and music in the world. \n \n\n Thus, we present our “པ་ཀྲ་ཧེ་། Bazahei” NFT collection – 78 NFTs each containing a pair of mirrored images. All of the NFTs have the same character: a Tibetan nomad singer presenting you with the holy Hadag and giving you their most sincere blessing. Each NFT has a different color scheme and contemporary art style as a modern interpretation of traditional Tibetan culture. \n \n\n Challenges\n \n\n As XRP just expanded the utilities of their ledger, many crucial parts are missing for NFTs to shine on their chain. Many challenges are thus introduced. Firstly, based on our research, there is no decentralized wallet like II for ICP and Metamask for ETH, to authenticate XRP users for the NFT ledger. Users need to possess both a public key and a private key to be authenticated, while this process can be tedious and insecure. Secondly, there is no stable smart contract for the XRP network and no NFT minting/trading infrastructure either. XRP NFT standard development is still at a very early stage.  \n \n\n Moreover, we did not find promising “chain key cryptography” materials to enable direct interaction with XRPL. There are some relevant features such as “direct bitcoin integration” and “threshold ECDSA sign” coming very soon but very few sources can be stably applied. XRPL provides javascript SDK but since “HTTP request from canisters” is not currently available, we must establish an XRP server to boldly pioneer the cross-chain solution so later we can quickly migrate to direct integration after those functionalities are available in IC.\n \n\n Key features\n \n\n [1] IC-wrapped Authentication to XRP users.\n \n\n We built a manager canister wrapping up the XRP keys to serve as a wallet for XRP users. When XRP users want to mint, transfer, or initiate a cross-chain request for their NFTs, they can simply log in with Internet Identity or other IC wallets on the front end and then gain the access to the XRPL network. \n \n\n [2] Standardized NFT Implementation\n \n\n The NFT implementation follows the EXT standard from Toniq Labs, which is also the standard for Entrepot, the biggest NFT marketplace on IC. The phase on XRPL is a formatting record following XRPL’s NonFungibleTokensV1 amendment with standardized trading functionalities included.\n \n\n [3] Serverless XRPL NFT Issuer Server\n \n\n To ensure the XRP NFT issuer’s safety and rights to collect transaction royalty while minimizing migration effort for later integration, we set up a serverless XRPL NFT issuer server to handle the request for the XRP side. After Dfinity enables the HTTP request feature for the canister, we start to reverse engineer XRPL javascript SDK and implement the Motoko library so that we can quickly complete the direct integration. \n \n\n [4] Chain-dependent Art Piece\n \n\n Our team believes that the future of Web3 is about unity and integration. We see the potential of cross-chain entertainment and the future of cross-chain applications. We also understand that different web3 communication holds different visions, cultures, and demands. Current static NFT assets are not enough to highlight the ownership, recognition, and metadata status in a multi-chain ecosystem. \n \n\n Thus introduce the chain-dependent NFT artwork Bazahei NFTs to connect and unite while preserving distinguishable identification elements. We demonstrate the chain-dependency as follows: \n \n\n While the NFT is on ICP, the character will point his Hadag to the right and say “What’s up ICP”. If the is on XRP, the character will point to the left and say “What’s up XRP”. The direction and text are the indicators showing which chain this NFT is on. \n \n\n All metadata is hosted in IC canisters. By doing this we ensure the permanency and follow the vision of “blockchain singularity” from Dfinity and IC. \n \n\n Key contribution\n \n\n \n\n Pioneer a general cross-chain NFT solution from IC to XRP\n Provide foundations for IC NFT projects to expand\n Demonstrate the fundamental scheme of chain-dependent NFT artworks\n Bring IC NFT values to XRP\n Introduce XRP liquidity to the IC ecosystem\n Promote the regional and under-represented culture\n \n\n \n\n Development overview\n \n\n The project is developed by 6 components: \n \n\n [1] An NFT canister following the fashion of EXT-NFT. The NFT is portable to 3rd party marketplace to freely trade. Since we enable the inter-canister calls, we need to hard code the canister controller as NFT minter when initializing the actor.  \n \n\n [2] An assets canister to host all metadata. \n \n\n [3] An account manager canister to manage users’ XRP NFT accounts. This canister stores the user’s XRP public and private key and only the authenticated user can query his/her keys. Meanwhile, only the serverless XRP issuer can verify if the inputting principal ID and XRP keys are correctly associated to prevent brute force attacks.\n \n\n [4] A bridge-like canister to stake cross-chain NFT and bound IC NFT token identifier and XRP NFTokenId. This canister also serves as custodian to stake IC NFT when it lives on the XRP network. The two core methods of {ic2xrp} and {xrp2ic} methods make records to the cross-chain ledger and only serverless XRP issuer can call those methods. The {xrp2ic} will also invoke an inter-canister call to release NFT back to users. \n \n\n [5] A serverless XRP issuer with its own IC identity to handle XRP mining and burning operations. The issuer can verify the user’s principal and XRP keys, token ownership from the IC NFT canister, state of which blockchain and call {ic2xrp} and {xrp2ic} from the bridge canister.\n \n\n [6] A frontend for showcase gallery and verify if the cross-chain transaction is successful.  \n \n\n Transaction flow\n \n\n IC2XRP\n \n\n \n\n Request staking and transferring. In this step the user shall request to transfer the underlying NFT to the bridge.  \n Query the XRP keys by IC authentication. If the user is new, pass a valid XRP account setXRPAccount from the XRP manager canister to set up the bounding of principal and XRP keys. To seamlessly authenticate the new users, we call XRPL API to generate an account and store it in a canister in our frontend. \n POST request to mint a XRP NFT with {principal, XRP keys, and tokenIdx} payload. Then serverless starts the serial tests. (1) verify the principal and keys and a correct mapping from the XRP manager canister[IC2XRP #5]. (2) verify token staking if it has been pledged on a bridge[IC2XRP #6]. (3) verify the underlying NFT if the state is still on IC. [IC2XRP #7] If all tests pass, query the metadata and call {ic2xrp} from bridge canister to update the cross-chain ledger to switch the state [IC2XRP #8] and mint the XRP NFT to user’s XRP account. \n \n\n \n\n XRP2IC\n \n\n \n\n Query the XRP keys by IC authentication. Similarly to above.\n POST request to burn XRP NFT with {principal, XRP keys, and NFTokenID} payload and start the serial tests. (1) verify the principal and keys and a correct mapping from the XRP manager canister. [XRP2IC #3]. (2) verify token ownership if the user is the owner. [XRP2IC #4]. (3) verify the underlying NFT if the state is still on IC[XRP2IC #5] . (could be omitted since ownership applied). If all tests pass, burn the NFT on XRPL [XRP2IC #6] and call {xrp2ic} from bridge canister to update the cross-chain ledger to switch the state [XRP2IC #7], which invokes following a transaction operation to release NFT to the users[XRP2IC #8].\n \n\n \n\n Security analysis\n \n\n [1] Problem : Suppose a user is trying ic2xrp and completed staking on the bridge but failed POST to the serverless. Does the user lose the NFT? \n \n\n Solution: No. Users still can send a POST request to the serverless until the XRP minting is successful.\n \n\n [2] Problem : Suppose user1 is trying ic2xrp and completed staking on the bridge, but steal user2 XRP keys or generate a new keys and send a POST request with payload {user1_principal, user2_xrpKeys, tokenIdx}. Who would get the XRP NFT?\n \n\n Solution: None. The POST request will fail since cannot past the [IC2XRP #5]. It is impossible to steal the user2 keys from XRP manager only if user1 can hack the internet identity :)\n \n\n [3] Problem : Suppose user1 is trying ic2xrp and completed staking token1 on the bridge, but user1 found there is token2 also staking on bridge by users2, so he send a POST request with payload {user1_principal, user1_xrpKeys, token2_tokenIdx}. Can he mint the token2 on XRP?\n \n\n Solution: No. The POST request will fail and cannot pass the [IC2XRP #6] by tracing previous staking history from the NFT ledger.\n \n\n [4] Problem : Suppose a user is trying ic2xrp and sends POST requests twice to mint 2 NFTs on the XRP side. Does the user receive 2 XRP NFTs?\n \n\n Solution: No. The [IC2XRP #7] will prevent the second minting request. \n \n\n [5] Problem : Suppose a user listed the token1 in a marketplace and then tries ic2xrp cross-chain transaction. Can he still sell the NFT while receiving XRP NFT.\n \n\n Solution: No. The [IC2XRP #1#2] will clear the allowance or the NFT’s operator authorization, so the token will automatically be delisted from the marketplace if staked on the bridge. \n \n\n [6] Problem : Suppose a user has got the XRP NFT token1 and trades it to user2, can this person transfer the NFT to IC?\n \n\n Solution: Yes if the user2 signed up for an IC account by XRP manager. If not, transfer the NFT to a registered account and then perform the cross-chain transaction. \n \n\n [7] Problem : Suppose a user completed the ic2xrp and burned the token on XRPL manually. Can he still perform xrp2ic transactions flow to get the IC NFT?\n \n\n Solution: No. The [XRP2IC #4] will prevent the operations. In fact, if the user manually burns NFT on the XRP side, the token will be permanently lost and stuck on the bridge. \n \n\n [8] Problem : Why is the IC NFT staking on the bridge while XRP NFT is burnt if it is crossed?\n \n\n Solution: The EXT NFT standard does not support a burning mechanism, but XRPL supports. We adopt the EXT standard in this project since it is one of the most recognizable and easy to port on Entrepot marketplace. The developers can add the burning mechanism on NFT canister by sending the NFT to a “black hole” if needed. \n \n\n [9] Problem : Suppose a user1 steals user2’s XRP keys and their NFT token1 and tries to do xrp2ic. Can they perform the transaction?\n \n\n Solution: No. [XRP2IC #1] will not pass unless user1 has user2 IC authentication. \n \n\n Application tooling\n \n\n The IC-XRP cross-chain framework can provide a lot more value for developers in a long run. For example, developers can implement a UI frontend for the XRP manager to create a decentralized XRP wallet application to help XRP users release the pain of username and password. They can also create a minting portal with the serverless to create an NFT minting tool for the XRP community or add more whitelist IC NFT projects to the serverless to build a cross-chain API service for the entire IC ecosystem etc. \n \n\n For our itoka team, a team devoted to creating a decentralized music ecosystem, this prototype has a special meaning: it can be the foundation to solve many real-life problems in the entertainment industry. As an example, a multi-chain digital rights management application can allow musicians to easily manage their royalties from NFTs across chains without middlemen. Once the Bazahei runs stably on IC and XRP, the Itoka music NFT will follow the scheme to scale the ownership/licensing transferring and trustless royalty collection to the rest of the web3 world.\n \n\n Explore Itoka music NFT and Muxive\n \n\n Try Bazahei now\n \n\n The Itoka team will airdrop all bazahei NFTs to communities for free. To evaluate the project quality in the Supernova hackathon, we reserve a few amounts of tokens and invite Dfinity and Supernova judges to join the beta testing. Please contact the team via this link if you are a Supernova judge.\n \n\n Future work\n \n\n There will be an upgrade for Bazahei when XRPL NFT-Dev merges to the main net. Besides, we are excited to wait for Dfinity to enable the “HTTP request from canister” and “threshold ECDSA sign” so we can approach a fully decentralized cross-chain protocol. Please check the following flowchart for our future system design(the final upgrade might be different). \n \n\n Additionally, the marketplace is extremely important for secondary market trading. Due to the time limitation and project complexity, we would like to propose it as another independent project. The expected marketplace could be the extension of the frontend gallery with payment functions. The sellers can list their NFT in the marketplace by offering both prices of ICP and XRP. The buyers can authenticate by IC wallet and bid either price of IC or XRP. As a result, the trade should be seamless and the marketplace is expected to handle all cross-chain activity. \n \n\n Disclaimer\n \n\n [Notice on 6/20/2022] The Itoka IC-XRP cross-chain project is for R&D purposes only. Since the XRPL NFT-Dev net is still under development and will be reset and merged to the main net in the future, we highly recommend storing NFT assets on the Internet Computer network. Please pay attention to the Ripple Labs announcement. Itoka and OctAI Inc. do not accept any responsibility or liability for any loss of assets caused by XRPL updates.\n \n\n The Itoka team airdropped the Bazahei NFTs to the community for free. \n \n\n Investors must conduct their own research before trading. Itoka and OctAI Inc. do not accept any responsibility or liability for any loss of assets or investments.\n \n\n Reference\n \n\n EXT Motoko implementation from Toniq-Labs(Stoic & Entrepot market place): https://github.com/Toniq-Labs/extendable-token/blob/main/examples/erc721.mo\n \n\n XRPL NonFungibleTokensV1 amendment standard on NFT-Devnet by Ripple Labs: https://xrpl.org/non-fungible-tokens.html\n \n\n BiMap: A Motoko module for bijective maps fomr Aviate labs: https://github.com/aviate-labs/bimap.mo\n \n\n Internet Identity authentication by frontend: https://github.com/krpeacock/auth-client-demo.git",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "པ་ཀྲ་ཧེ་། bazahei: the first icp-xrp cross-chain nft#@#@#motoko#@#@#typescript#@#@#react#@#@#serverless#@#@#ripple#@#@#node.js#@#@#next.js#@#@#chakra#@#@#we pioneer a general cross-chain nft solution from ic to xrp to promote the regional and under-represented culture.",
    "tags": [
      "motoko",
      "typescript",
      "react",
      "serverless",
      "ripple",
      "node.js",
      "next.js",
      "chakra"
    ]
  },
  {
    "id": "sigma-defi",
    "name": "SIGMA DEFI",
    "description": "SIGMA DEFI is a DeFi service and tool for developers and investors interested in IC,providing services without coding1. Multi sender2. Create DIP 203. Generate NFT and mint4. Fiat Gateways",
    "image": "sigma-defi.png",
    "links": {
      "github": "https://github.com/TheVanquiser/SIGMADEFI",
      "external": "https://supernova.devpost.com/submissions/329753-sigma-defi",
      "otherLinks": []
    },
    "submitterFirstName": "The",
    "submitterLastName": "Vanquiser",
    "about": "Inspiration\n \n\n because my parents are stuck in debt which motivates me to be enthusiastic, while the idea I got after seeing very few developers who understand internet computers and difficulties in developing things on internet computers, I thought to make it easier for them to make projects on internet computers and see sigma as a formula that helps scientists and engineers solve their problems, I named this project sigmadefi\n \n\n What it does\n \n\n sigma defi serves to facilitate users or developers in building a project on the internet computer,\n \n\n \n\n Multisender can be used by developers or other users to transfer airdrops or their relatives\n create dip20\n can be used to create dip20 tokens on internet computers without having to do coding\n generate nft\n can be used to generate many images from 1 source image to be minted into NFT on the internet computer\n buy icp\n With the integration of fiat on ramp in Transak https://transak.com/ , users can easily buy ICP using a credit card or other payment\n \n\n \n\n How i built it\n \n\n by coding in vscode writing typescript language and framework react\n I built the frontend first, then learned the Motoko language and started writing commands with Mototo for interaction with the blockchain internet computer.\n \n\n Challenges we ran into\n \n\n because i'm working alone this makes it difficult for me where time is short and other problems like faucet cycles run out and some bugs in dfx sdk and it's hard to understand motoko language fast and this by making time out\n \n\n Accomplishments that we're proud of\n \n\n I can enter this competition honestly and fairly, and can learn new things such as blockchain internet computer, dfx sdk, motoko language,\n i can hardly believe i can do this myself thanks devpost, dfinity team, internet computer team\n \n\n What i learned\n \n\n I learned a lot from this hackathon, especially what is persistence, enthusiasm and respect for one's own performance, and useful knowledge of technology in internet computers such as dfx sdk, motoko, candid, idl\n \n\n What's next for SIGMA DEFI\n \n\n I will continue the work progress of the sigma defi project because it is not fully ready yet,\n and additional features to exchange icp tokens to cycle tokens",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "sigma defi#@#@#motoko#@#@#typescript#@#@#javascript#@#@#html#@#@#css#@#@#react#@#@#candid#@#@#idl#@#@#plug#@#@#sigma defi is a defi service and tool for developers and investors interested in ic,providing services without coding1. multi sender2. create dip 203. generate nft and mint4. fiat gateways",
    "tags": [
      "motoko",
      "typescript",
      "javascript",
      "html",
      "css",
      "react",
      "candid",
      "idl",
      "plug"
    ]
  },
  {
    "id": "ic-web3d-engine",
    "name": "IC Web3D Engine",
    "description": "A lightweight game engine fully deployed on the IC.Users can easily create their own decentralized games or other 3D application scenarios on the IC with some simple operations",
    "image": "ic-web3d-engine.png",
    "links": {
      "github": "https://github.com/IC-Web3D-Engine",
      "livePreview": "https://q7vk3-myaaa-aaaak-qarcq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334588-ic-web3d-engine",
      "otherLinks": []
    },
    "submitterFirstName": "Kevin",
    "submitterLastName": "RUM",
    "about": "IC Web3D Engine\n \n\n Inspiration 🔮\n \n\n I am an indie game developer.One of the work I'm most proud of has 400,000 players in a matter of months without promotion.So, at the time I was tempted to deploy my indie game on IC.\n \n\n However, the huge and complex system of IC made me, an outsider, daunted at that time.Because of the complexity of the program, in the past it was difficult for me to port the previously developed games to the IC.\n \n\n So, IC Web3D Engine was born!\n \n\n Users can easily develop and deploy their own game on IC without knowing DFINITY DFK. Of course, other 3D application scenarios are also possible.\n \n\n This is a lightweight game engine fully deployed on IC!!\n \n\n What it does 🎡\n \n\n Users can use this product like any other game engine.\n \n\n Users can create scenes, create items, render lights or write scripts in this game engine, and can also preview the current work in real time. When the work is completed, users can click 【Deploy】>【Deploy to IC】to deploy their work to the IC.The whole process won't involve anything about the SDK.\n \n\n It makes everything so easy.\n \n\n No gas required! Store forever! Decentralized!\n \n\n This product can allow more friends to join the construction of IC web3D, even if you don't know how to write code, you can make games or other 3D and VR scenes.\n \n\n How we built it 🔨\n \n\n \n\n We developed a simple static file server using motoko.\n We use Javascript to read and shard the cache of game deployments and deploy them to our development static file server.\n We have connected Internet Identity at the front end for authentication, protecting the privacy of game creators.\n Creators can view all their deployed works and share them with friends via private links.\n This game engine editor is based on Three.js, thanks to Three.js!\n \n\n \n\n How to Play it 🎮\n \n\n \n\n Login using Internet Identity.\n If you are more familiar with game engines, you can get started directly.\n If you are unfamiliar with game engines, you can click the 【Examples】button, and then select one of the examples to try.You can try changing the color of objects or backgrounds, or the angle of the camera.It's easy!\n You can click the 【Play】button to perform a real-time demonstration, and click the 【Stop】 button to close the real-time demonstration.\n When the work is completed, you can click【Deploy】->【Deploy to IC】to deploy your work with one click\n After deployment, you can click【Deploy】->【My Assets】to view all your works.\n Finally, have a good time!\n \n\n \n\n Challenges we ran into 🎢\n \n\n \n\n Developed simple server using motoko to host deployed works. It took a lot of time.\n Solve the problem of file storage and fragmented transfer in the front end, making large file transfer so easy.\n Having some difficulty accessing Internet Identity because I don't have a hardware device like Yubikey.\n I encountered a problem with cycles when deploying the entire project to the IC mainnet\n so on....\n \n\n \n\n Accomplishments that we're proud of 👏\n \n\n \n\n The entire product has been successfully deployed to the IC and can be used normally.\n I solved a lot of interesting problems in a week and it gave me a great sense of achievement.\n I hope this product can help you in the development of Internet Computer Ecosystem.\n \n\n \n\n What we learned 🎉\n \n\n \n\n independent thinking and problem solving. \n how to use motoko.\n \n\n \n\n What's next for IC Web3D Engine 🧾\n \n\n \n\n Improve the motoko server and establish a canister management system.\n Write detailed documentation to tell everyone how to get started quickly.\n Looking for partners to reconstruct the architecture of front-end products\n Ask people where there is room for improvement.\n ......\n \n\n \n\n Play it 🎮\n \n\n online demo: https://q7vk3-myaaa-aaaak-qarcq-cai.ic0.app\n \n\n Who I am 👦\n \n\n My name is Kevin and I worked in the Full-Stack development.\n And I developed this game independently during the period of this hackathon.\n \n\n I hope you like my work！Thanks~\n \n\n e-mail: catmi9944@gmail.com",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ic web3d engine#@#@#javascript#@#@#motoko#@#@#typescript#@#@#a lightweight game engine fully deployed on the ic.users can easily create their own decentralized games or other 3d application scenarios on the ic with some simple operations",
    "tags": [
      "javascript",
      "motoko",
      "typescript"
    ]
  },
  {
    "id": "texas-hold'em",
    "name": "Texas Hold'em",
    "description": "There is a famous saying in Texas Hold'em: \"Victory comes not from your opponent making more mistakes, but from you making fewer\".",
    "image": "texas-hold'em.png",
    "links": {
      "github": "https://github.com/NnsDao/ICTexas-UI",
      "livePreview": "https://lm5fh-ayaaa-aaaah-aafua-cai.raw.ic0.app/#/",
      "external": "https://supernova.devpost.com/submissions/334184-texas-hold-em",
      "otherLinks": []
    },
    "submitterFirstName": "NnsDAO",
    "submitterLastName": "Protocol",
    "about": "Inspiration\n \n\n As children we all have a dream of magic, dreaming of being a great wizard in the future, just like Harry Potter described, meeting wizard partners with different personalities, learning spells and magical knowledge, and experiencing a colorful wizard life in a wonderful magic campus. Different experiences and lives are realized with a different magic, yet the best practice for all this may be to create a virtual game, that is, a virtual life, or call it a meta-universe.\n \n\n After the release of Ready Player One, it seems to feel a stronger response to the magic with the future world, in the future, we can also interact with the virtual world like in the movies, whether in the form of VR, AR, etc. to survive in a virtual world and realize their own virtual value. And the pursuit of the game is like raising a new realm, for the current meta-universe may be closer and closer to the realization, the team’s partners are also studying a new game, it is called: “universe”, perhaps this is a way of expression that wants to achieve freedom, the whole game will revolve around virtual, user freedom to create as the main body in so that The ability to create is led by the user.\n \n\n For the game, we are a group of partners with a love for the same in the creation of Texas Hold’em, as the designer of the game, perhaps just a concept to achieve, that is, POC, also known as proof of principle, is a realization of a certain method or idea in order to demonstrate its feasibility or a demonstration in principle with the aim of verifying that some concept or theory has practical potential.\n \n\n Based on this idea, first, he identified the demand market, and in the poker market, chose Texas, Texas Hold’em is a very skillful game that combines luck, patience, perseverance, and intelligence. It tests the character and ability of each person and the ultimate winner is determined by the chips.\n \n\n What it does\n \n\n A game built entirely on the blockchain, a Texas that no one can control and no one can manipulate. So based on ICP, we came up with a solution that controls all settlements through the Motoko Actor smart contract, where all code, contracts and algorithms are publicly visible, using a new model and public shuffle algorithm to make the game fair, just and open. Every fan of Texas Hold'em can play happy big poker.\n \n\n How we built it\n \n\n We used Motoko and Vue to build the code, interacted with the DID and Actor models to give Texas a more complete scenario, and made a lot of optimizations to the shuffle algorithm and contract, if that's fair, which I think we did.\n \n\n Challenges we ran into\n \n\n When we first built Texas, we had experience with Texas, but with a new language, Motoko, and no heartbeat, it was hard to guarantee speed and consensus at the same time, so we ended up using a rotation call to get each game started quickly, and also optimizing the deal and table assignment scheme.\n \n\n Accomplishments that we're proud of\n \n\n We made the first game built entirely on IC, without any centralized servers, using Motoko and Vue and built on IC's canister, and in the earliest days of the game we attracted thousands of fans, with a cumulative game count of 61,000 and over 16,000 users.\n \n\n What we learned\n \n\n Through the practice of Texas game, we tried the beginning of the game, and also became more and more proficient in the development of Motoko, and gradually built the core functions of NnsDAO, and slowly built the ecological reputation system through the combination of the project and DAO.\n \n\n What's next for Texas Hold'em\n \n\n We are currently preparing to develop NFT based on IC and implement it in Texas Hold'em, and add animations and sounds to optimize the game experience, and increase the diversity of poker, so that the rarity of the game can be better shown through NFT.\n \n\n In the future, the props and NFT generated in the game can be traded through the ICmarket, we are planning the whole structure plan, play the game to win NFT, and trade through the market, P2E game is being built.\n \n\n In the fourth quarter of 2022, we are going to try the development of the app, so that we can better optimize the game, but also allow more people to play Texas anytime, anywhere.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "texas hold'em#@#@#motoko#@#@#vue#@#@#there is a famous saying in texas hold'em: \"victory comes not from your opponent making more mistakes, but from you making fewer\".",
    "tags": [
      "motoko",
      "vue"
    ]
  },
  {
    "id": "musall",
    "name": "MUSALL",
    "description": "Music ownership is broken! At MUSALL we aim to change ownership to a shared model. Musicians create a contract that is fair and transparent. Fans purchase said contracts. All earn through royalties.",
    "image": "musall.png",
    "links": {
      "github": "https://github.com/fowlerlee/musall",
      "external": "https://supernova.devpost.com/submissions/334192-musall",
      "otherLinks": []
    },
    "submitterFirstName": "lee",
    "submitterLastName": "fowler",
    "about": "Inspiration\n \n\n The unique features of the IC (permissionless, censorship-resistance, public governance, recursive incentives and capture-resistance) allowed the idea of shared ownership to take form. Without the IC, it's not possible for a truly democratic ownership model to be developed with such ease. As a result we decided to take on the most broken system of all, the music industry, which is ready for a disruptive technology. This lead to the formation of MUSALL. Our aim is to lower the barrier to entry for musicians to create art, as well as for fans to become investors. We also wish to incentivise engagement in the arts. Thus through shared ownership in art, consumers and musicians share in profits, which practically means fans will play music on repeat. Our hope at MUSALL is to see a flattened structure in our society, and we believe smart contracts on the IC, and shared-ownership is the fastest way to our vision.\n \n\n What it does\n \n\n Musicians who access MUSALL are able to see other contracts they might like to investment in. They may also create a contract on the platform. The requirement is that the contract is well specified and includes fields for \"Description of work\", \"Scope of work\", \"Terms of ownership\" and cost of shared ownership. These fields provide enough information to ascertain whether the contract is a good investment; and as we grow at MUSALL we hope to develop our contracts to be binding for all parties concerned. \n Fans may also access MUSALL and provided they have a wallet attached to their account they may also buy a part of the shared contract. In this way ownership and royalties is shared between fans and musicians.\n \n\n How we built it\n \n\n First we built the contract on the backend using Motoko. We needed to figure out what a legally binding contract is in the \"real-world\" and try to translate that to a smart contract. Once we had this definition we made the contract canister in code and called it MUSALL. Then we made the FileLoader, a separate canister to store and retrieve files on chain using a url. We pass the url to MUSALL when we create a contract. The result is that every contract is self-contained and associated files can be easily retrieved. This also means that larger files can be uploaded while not risk lose of associated contract data. The front end UI we did in ReactJS and where needed we used the didc bind command to build and subsequently call backend services from the frontend.\n \n\n Challenges we ran into\n \n\n We found that .wasm files would not build without an error code 5 on some machines and so we learned how to use didc bind to build TS and JS definitions to call external canisters locally. We successfully deployed all three canisters (MUSALL, FileLoader, MUSALL_ASSETS) to the main net, but our frontend did not display and so we had to do adjustments on the frontend to render correctly.\n \n\n Accomplishments that we're proud of\n \n\n We are two guys who were new to Motoko, and learned it very fast. This is a testimony to how well the language is designed, but we also feel proud that we could produce this product in such short time. We are happy with this, but as you can tell from our presentation pitch, we are keen to keep developing and implementing more features to extend MUSALL to a streaming service and ultimately develop shared-ownership into a model for a wide range of contract types: especially those not traditionally done on chain.\n \n\n What we learned\n \n\n We learned the IC and it's benefits: governance model, privacy and security features, borderless, global access properties, and crypto-economics. We learned what both of us were best at doing and we executed on this. We taught each other whatever the other did not know, and gave feedback regularly with the aim of improving MUSALL. In addition we learned how to write Motoko and Rust, learned how to use the Ledger and II. Finally we learned how to scope a project and iterate fast between testing, so that we can deliver a coherent prototype, but also design our prototype to scale to fit more extensive features that are planned.\n \n\n What's next for MUSALL\n \n\n First up is the completion of in app-purchases of contracts using the nns-Ledger, which we aim to complete 26 June 202Then we will refine the UI and improve it. We plan our next big feature of music file uploading and streaming on MUSALL for the 20th July 202Followed by the feature of paid royalties to our contract owners via the nns-Ledger. We will then market MUSALL and might outsource this part, as well as leverage the IC community to encourage use of the Dapp. Finally we will extend the MUSALL contract to include other types of contracts, notably in Film and Media.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "musall#@#@#react#@#@#scss#@#@#motoko#@#@#javascript#@#@#typescript#@#@#music ownership is broken! at musall we aim to change ownership to a shared model. musicians create a contract that is fair and transparent. fans purchase said contracts. all earn through royalties.",
    "tags": [
      "react",
      "scss",
      "motoko",
      "javascript",
      "typescript"
    ]
  },
  {
    "id": "news-bias-check",
    "name": "News Bias Check",
    "description": "Decentralised application to help combat fake news and reduce bias in information consumption. Chrome extension that uses backend on IC network shows bias/accuracy info about all news articles online.",
    "image": "news-bias-check.jpeg",
    "links": {
      "github": "https://github.com/jayshreeanand/news-bias-check",
      "livePreview": "https://77oii-eaaaa-aaaal-aaydq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334583-news-bias-check",
      "otherLinks": []
    },
    "submitterFirstName": "Jayshree",
    "submitterLastName": "Anandakumar",
    "about": "News BiasCheck\n \n\n BiasCheck is a Decentralised application to help combat fake news and reduce bias in information consumption. It has a chrome extension that uses APIs on a backend canister deployed on IC network which shows bias/accuracy info about all news articles online. \n \n\n The chrome extension works across various social media and news sites and shows information about bias and accuracy of the article.\n \n\n Inspiration\n \n\n Disinformation — that is, content that intentionally misleads for political or financial gain — is nothing new. But as we’ve seen over the last year in particular, digital platforms have made it significantly easier to spread dangerous conspiracy theories\n \n\n Decentralized aps offer a potential solution to combat the growing threat of digital disinformation.Blockchain systems use a decentralized, immutable ledger to record information in a way that’s constantly verified and re-verified by every party that uses it, making it nearly impossible to alter information after it’s been created. \n \n\n Blockchain’s ability to provide decentralized validation and a clear chain of custody makes it potentially effective as a tool to track disinformation and biases in news.\n \n\n Architechture\n \n\n \n\n \n\n Tech Stack\n \n\n \n\n Backend canister and UI canister deployed on IC network\n API exposed on backened canister using JSON/HTTP mokoto contracts.\n Chrome extension that consumes API on IC and runs across all social media sites (twitter, facebook, google and reddit)\n \n\n \n\n Challenges we ran into\n \n\n \n\n Learning Mokoto was challenging but it was equally rewarding deploying an app on the IC network\n Getting chrome extension work across multiple social media sites\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Building a functional chrome extension which works on a dfinity canister backend. \n Smart contracts for inserting, looking up and validating news sources\n \n\n \n\n What we learned\n \n\n \n\n Learnt building apps on the Internet computer network\n Also learnt about various news APIs and\n \n\n \n\n What's next for News Bias Check\n \n\n \n\n Adding Internet identity, tokenized rewards for users reporting fake news\n \n\n \n\n Import news from sources like Newscatcher API and classify them using data on the IC backend canister\n \n\n \n\n \n\n References\n \n\n \n\n https://hbr.org/2021/07/how-blockchain-can-help-combat-disinformation\n -Pariser, E. (2017). The Filter Bubble: How the New Personalized Web Is Changing What We Read and How We Think.\n Pariser: https://medium.com/@10797952/the-causes-and-effects-of-filter-bubbles-and-how-to-break-free-df6c5cbf919f",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "news bias check#@#@#motoko#@#@#internetcomputer#@#@#dfinity#@#@#react#@#@#chromeextension#@#@#node.js#@#@#candid#@#@#decentralised application to help combat fake news and reduce bias in information consumption. chrome extension that uses backend on ic network shows bias/accuracy info about all news articles online.",
    "tags": [
      "motoko",
      "internetcomputer",
      "dfinity",
      "react",
      "chromeextension",
      "node.js",
      "candid"
    ]
  },
  {
    "id": "dfinity-ddos-defender",
    "name": "Dfinity DDoS Defender",
    "description": "A configurable tool for monitoring cycle's value and protecting canister from DDoS attack.",
    "image": "dfinity-ddos-defender.png",
    "links": {
      "github": "https://github.com/DfinityDDoSDefender",
      "external": "https://supernova.devpost.com/submissions/326894-dfinity-ddos-defender",
      "otherLinks": []
    },
    "submitterFirstName": "惠栋",
    "submitterLastName": "章",
    "about": "Inspiration\n \n\n When we see the reverse gas model in Dfinity, we think it will keep consuming Canister's cycles balance if it suffers malicious calls from attackers. So based on this thought, we consider developers have the need to monitor Cycles balance and prevent from DDoS attack. Inspired by this, we decided to develop the product.\n \n\n What it does\n \n\n The purpose of this product is to protect developers from DDoS attacks and notify them when DDoS attack happened.\n \n\n How we built it\n \n\n A DDoS attack's feature is that a rapid decrease in the cycle balance of the canister. If this feature is detected, we will trigger improve diffculty of target canister, and then request have to do prove of work to enter that canister. User can import rust library to build prove of work part.  \n \n\n IC provides the [canister_inspect_message] C interface, which will let the request do some judgment before entering the canister, accepting the request into the canister if it meets the conditions, discarding the request if it does not, which not consuming the cycle. we generate a random number on chain, user generate a random number off chain, and then we require Hash(random_on_chain,random_off_chain) to meet certain conditions. Once they meet the conditoin, [canister_inspect_message] will accept this request. otherwise, it will discard it.\n \n\n Challenges we ran into\n \n\n It is hard to distinguish between users and attackers when DDoS attacks occur, the developer's front-end should also implement the logic to produce random numbers to request again when the call fails, otherwise it will reduce the user experience to let users request the front-end interface multiple times.\n \n\n Accomplishments that we're proud of\n \n\n We are glad to find out the solution that establish the connection between DDoS attack and prove of work.\n \n\n What we learned\n \n\n By participating in the hackathon, we learned the advantages of IC's blockchain architecture over previous generations of blockchains. It makes us more confident to build new projects on IC.\n \n\n What's next for Dfinity DDoS Defender\n \n\n We will integrate our notification service with Dmail.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "dfinity ddos defender#@#@#rust#@#@#javascript#@#@#react.js#@#@#a configurable tool for monitoring cycle's value and protecting canister from ddos attack.",
    "tags": [
      "rust",
      "javascript",
      "react.js"
    ]
  },
  {
    "id": "questions-and-answers",
    "name": "Questions & Answers",
    "description": "Ask Questions.. Share Answers.. Earn Coins..",
    "image": "questions-and-answers.jpg",
    "links": {
      "github": "https://github.com/7flash/internet-computer-dapp",
      "livePreview": "https://u75p2-siaaa-aaaap-aafaq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/327670-questions-answers",
      "otherLinks": [
        "https://youtu.be/lBz4g-gow2E"
      ]
    },
    "submitterFirstName": "Gur",
    "submitterLastName": "Berlian",
    "about": "Full Video Demo: https://youtu.be/lBz4g-gow2E\n \n\n Inspiration\n \n\n Askfm inspired questions and answers..\n Stackoverflow inspired Upvote button..\n Twitter inspired text limit of 33 symbols..\n Steemit inspired tokenomics..\n \n\n What it does\n \n\n It allows users to ask questions and share answers..\n \n\n How we built it\n \n\n Motoko for database canister and Vanilla JS for frontend canister\n \n\n Challenges we ran into\n \n\n The biggest challenge was to define application constraints.. focus on core features and avoid distractions..\n \n\n It's been decided to limit question/answer length to 33 symbols, avoid \"right answer\" choice and instead to incentivize users expressing their honest opinions through tokenomics..\n \n\n Accomplishments that we're proud of\n \n\n proud of completing a full journey.. from learning a new concepts.. discovering ideas.. into launching a working product.. polishing user experience.. deploying to mainnet..\n \n\n What we learned\n \n\n learned finally how actually Lists work underhood.. what's the difference between HashMap and TrieMap.. motoko libraries source code are well documented and incredibly useful for learning..\n \n\n What's next for Questions & Answers\n \n\n forming a DAO to manage next features and protect database immutability.. SNS governance..",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "questions & answers#@#@#motoko#@#@#javascript#@#@#ask questions.. share answers.. earn coins..",
    "tags": [
      "motoko",
      "javascript"
    ]
  },
  {
    "id": "cratch",
    "name": "Cratch",
    "description": "The Future of Content Creation",
    "image": "cratch.png",
    "links": {
      "github": "https://github.com/skidrow8852/Cratch_Platform_V1",
      "livePreview": "https://cratch.io/",
      "external": "https://supernova.devpost.com/submissions/330315-cratch",
      "otherLinks": []
    },
    "submitterFirstName": "Rais",
    "submitterLastName": "Youssef",
    "about": "Inspiration\n \n\n All of us use Youtube or Twitch from time to time, and all we can agree that the amount of ads in these platforms are a lot, without mentioning the data these platforms collect everyday from its users to benefit only one side, so we decided to create a solution that favors all parties included in the video sharing/ live streaming platform and make sure it's decentralized and fun to use. \n \n\n What it does\n \n\n Imagine that there is a platform where you can watch your favorite streamer, interact and communicate directly with him/her and getting paid along the way, not just that but also experiencing live & video streams in the Metaverse.\n Well that's exactly what Cratch is for, making sure both content creators and viewers benefit from the platform, and therefore we are building a virtuous ecosystem that includes :\n \n\n \n\n An online video sharing, live streaming and social media platform\n Metaverse world for content creation & live interaction with the community\n Mobile app to watch content on the run\n NFTS for in game assets & Videos \n \n\n \n\n How we built it\n \n\n At the first stage, we decided which features we want to implement first, and where to start. Starting from that point, it was not hard to decide which technologies to use.\n On the backend side we used Node, Express and MongoDB and for storing data we used IPFS technology. We built the frontend using React with dfx generated boilerplate and Chakra UI as a UI library.\n \n\n Challenges we ran into\n \n\n At the beginning we had to pass through all the steps of creating a fully functioning product: user research, to know what how much the average user spend on the streaming platforms, sort out and assemble all the ideas we had and find the best solution. From this step we started to think about the best way of creating the user interface for the platform to be intuitive and easy-to-use, and therefore we made and tested a lot of different prototypes before we decided to keep the actual interface of the platform. \n \n\n Accomplishments that we're proud of\n \n\n \n\n Being able to work on an impactful project that will positively impact the community\n Team members took this opportunity to practice with technologies and platforms they have rarely or never used before\n We are proud of the minimal simplistic design which provides a smooth user experience\n \n\n \n\n What we learned\n \n\n \n\n Starting your solution with building a prototype helps to cover several aspects simultaneously: working with user expectations, parallelizing the development and design of UX, creating a solution architecture\n The result can be achieved in a short time, even if you do not have processes, but you have a problem and an idea that solves it.\n \n\n \n\n What's next for Cratch\n \n\n To confirm our project, we started with the implementation of one platform and several functions. So, our plans include support for a full range of features such as NFT video creation, voting system, staking & rewards system, also building in game NFT assets marketplace which will allow users to customize their virtual lands & studios.\n Also our plans include creating our own decentralized RTMP server for both\n the streaming platform and the metaverse.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "cratch#@#@#node.js#@#@#react#@#@#mongodb#@#@#express.js#@#@#ipfs#@#@#icp#@#@#livepeer#@#@#javascript#@#@#the future of content creation",
    "tags": [
      "node.js",
      "react",
      "mongodb",
      "express.js",
      "ipfs",
      "icp",
      "livepeer",
      "javascript"
    ]
  },
  {
    "id": "leap",
    "name": "Leap",
    "description": "Leap is a market for information. Existing online forums have little incentives for users to provide high-quality answers. Leap allows users to reward others financially to get great answers quickly.",
    "image": "leap.gif",
    "links": {
      "github": "https://github.com/Matlor/Information-Market",
      "external": "https://supernova.devpost.com/submissions/334221-leap",
      "otherLinks": []
    },
    "submitterFirstName": "Mathias",
    "submitterLastName": "Lorenceau",
    "about": "Inspiration\n \n\n Finding the right information online can be surprisingly difficult. From personal experience as both developers and more generally, it can be very frustrating not to find the answer to a problem online. Existing online forums do not offer sufficient guarantees to get an answer quickly. \n \n\n What it does\n \n\n A web application where users can ask questions with a financial incentive for participants to quickly answer! \n \n\n How we built it\n \n\n Our entire application is running on the ICP, the backend consisting of four different canisters:\n \n\n \n\n The ledger and invoice canisters are used to conduct payments on the platform. We used the invoice canister implementation provided by the foundation (not officially released yet).\n We have instantiated a graphql canister (see https://github.com/sudograph/sudograph) with our own schema. We have extended the default rust interface to prevent mutations from unauthorized callers. Only the market canister specifically is allowed to perform updates on the graphql database. \n The market canister is written in Motoko. It updates the graphql database and interacts with the invoice canister. The heartbeat function is used internally to update the status of questions regularly. \n The frontend canister interacts with the ledger, graphql, and the market canister. It uses Plug to authenticate calls to the ICP.\n \n\n \n\n Challenges we ran into\n \n\n Making graphql work was a bit fastidious at the beginning, especially because we wanted to have the backend logic written in Motoko, so we had to come up with an extra set of functions in the graphql canister that performs the JSON deserialization in rust. Writing tests and simulating scenarios was very challenging as well, especially when interacting with the ledger canister. We lost a lot of time on basic conversion issues, we ended up converting a (text) address to a blob manually by copying the output of a terminal command. Building the frontend was very time-consuming as well because we simply had little to no experience with it. \n \n\n Accomplishments that we're proud of\n \n\n Tackling all of the challenges! We're pretty proud of the final rendering of our application, but also of the code that is behind it. Using sudograph allowed us to build a solid backend that divides responsibilities, makes the code expandable, and allows for every kind of CRUD operation. This will allow us to quickly build new features! \n \n\n What we learned\n \n\n Coding for the internet computer is most of the time quite easy but can get very challenging from time to tie. But having overcome the challenges it feels great to have a product that we built on our own and that actually runs on a blockchain! \n \n\n What's next for Leap\n \n\n We want to keep working on the project implementing the next features we have in mind. We want to make the payment flow more robust, add a real arbitration mechanism with a proper incentive structure, be able to edit questions and answers, and polish the incentives and the user interface. Then we will officially launch it on mainnet!",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "leap#@#@#motoko#@#@#sudograph#@#@#react#@#@#tailwind#@#@#heartbeat#@#@#invoice-canister#@#@#leap is a market for information. existing online forums have little incentives for users to provide high-quality answers. leap allows users to reward others financially to get great answers quickly.",
    "tags": [
      "motoko",
      "sudograph",
      "react",
      "tailwind",
      "heartbeat",
      "invoice-canister"
    ]
  },
  {
    "id": "metabio",
    "name": "MetaBio",
    "description": "MetaBio is a Web3 application to connect gardeners, farmers to crypto world. We aim to be the leading Web3 application for gardening communities and their data to enterprise or biology experts.",
    "image": "metabio.png",
    "links": {
      "github": "https://github.com/viefam/metabio-ic",
      "livePreview": "https://testflight.apple.com/join/M6DTlUAc",
      "external": "https://supernova.devpost.com/submissions/329759-metabio",
      "otherLinks": [
        "https://drive.google.com/file/d/1Ky1aIM3PbbabwFdjyUjXSkz2edAbHbKc/view"
      ]
    },
    "submitterFirstName": "Thinh",
    "submitterLastName": "Nguyen",
    "about": "Vision\n \n\n MetaBio is a Web3 application to connect gardeners, farmers to crypto world. We aim to be the leading Web3 application for gardening/farming communities, inspire gardeners/farmers, and connect them and their data to enterprise and biology experts eventually\n \n\n Description\n \n\n Motivation MetaBio is a Web3 application to connect gardeners, farmers to crypto world. We aim to be the leading Web3 application for gardening/farming communities, inspire gardeners/farmers, and connect them and their data to enterprise and biology experts eventually. Users as farmers could capture the growth of their plants, mint respective NTF(s) and sell on our marketplace. They can also earn some rewards on MetaBio by joining our gamification (namely plant-2-earn) and providing metadata.\n \n\n Which all above will result in:\n \n\n 📌 Keep developing good habits\n \n\n 📌 Earn and learn (non-crypto natives especially in specific field such as gardening/farming can earn and learn about blockchain/decentralization)\n \n\n 📌 Reduce gaps to connect to other peoples around the world and in different areas\n \n\n 📌 Preparing data for our future (metaverse, biodiversity on-chain database...)\n \n\n Features\n \n\n 🌱 Gardeners could mint the interactive NFPlant backed by their plants.\n \n\n 🪴 In order to mint NFPlant, they need to purchase the plant pot. Each plant pot will have these attributes:\n \n\n plant: NFPlant belonged to the pot.\n \n\n minGrowthRate: Plant minimum growth rate. To receive the reward, the plant needs to reach the minimum growth rate (eg: 5cm/month).\n \n\n tokenEarning: The token earning when the plant reaches the minGrowthRate each month\n \n\n 🏅 After planting and updating their real plants metadata, they can earn the reward if the plant meets the minimum growth rate.\n \n\n ✅ The BioDAO (biology expert) would review and audit the NFT metadata. Their expertise will help to improve the quality and gain the transparency of biology metadata on-chain.\n \n\n 🚀 MetaBio also supports metaverses, gamefi, defi, and socialfi builders to consume and reuse NFT backed by real plant’s metadata that enhances user experiences.\n \n\n 🌎 Users can earn carbon credit and save the Earth.\n \n\n Vision\n \n\n If humankind moves to the another planets, they can use MetaBio as the valuable data to grow and plant the biodiversity. Interesting? Please join our social channel for more information.\n \n\n Our Social Channel\n \n\n Telegram: https://t.me/metab10",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "metabio#@#@#react-native#@#@#dfinity#@#@#bnb#@#@#parse#@#@#mongodb#@#@#metabio is a web3 application to connect gardeners, farmers to crypto world. we aim to be the leading web3 application for gardening communities and their data to enterprise or biology experts.",
    "tags": [
      "react-native",
      "dfinity",
      "bnb",
      "parse",
      "mongodb"
    ]
  },
  {
    "id": "donainvest",
    "name": "Donainvest",
    "description": "Donainvest is a donation-investment platform on which the market cap is in proportion to the social impact and social workers are able to continuously fundraise without crypto-related licenses.",
    "image": "donainvest.gif",
    "links": {
      "github": "https://github.com/kentomisawa/donainvest",
      "livePreview": "https://xd.adobe.com/view/da9964cd-a5e2-4ee0-bd15-c4898d792175-8fca/",
      "external": "https://supernova.devpost.com/submissions/334181-donainvest",
      "otherLinks": []
    },
    "submitterFirstName": "kento",
    "submitterLastName": "tomisawa",
    "about": "Inspiration\n \n\n Investments make the world better. Capitalism is pretty sophisticated. But, social work doesn't benefit from it because capitalism doesn't work well, even though there are strong needs. If capitalism works, those needs are automatically satisfied. However, that doesn't happen in some areas of markets. That's why social workers try to meet those needs somehow as non-profit entities. Donainvest is one way to solve this issue.\n \n\n What It Does\n \n\n Fundraising Without a Crypto-Related License\n \n\n Social workers can raise funds with this protocol, therefore everyone can easily offer tokens without any license. \n \n\n Donation And Investment\n \n\n Integrating donation and investment is a great way for social organizations to fundraise. Users pay and invest money not only for social organizations but also for themselves. The combination of self-oriented investment and altruistic donation is exponentially powerful.\n \n\n Connecting To Capitalism\n \n\n Social workers work in a market where capitalism doesn't work well; that means it is hard for social organizations to get sophisticated as the invisible hand works. Donainvest integrates social works and capitalism. Then, that visualizes the needs of what the society really desires and how social projects make social impact.\n \n\n The Relation Between Social Impact and A Market Cap\n \n\n A market cap is in proportion to how much people want to support the project. Because there are no other incentives like dividends or ownerships. Although there is another incentive which is expectations of token value increases in the future, it comes from the social impact that the project makes. \n \n\n How It Works\n \n\n Token Offering\n \n\n It's confusing but there is no concept of the \"price\" of offered tokens. It's about value change. The value of each token would be different, though the tokens are issued by the same project.\n \n\n Donation\n \n\n Users choose what percentage of tokens to donate when they buy. It's like an exchange fee but how much users pay is up to them. The more donation, the more bonus value the purchased token will get if the market cap gets bigger. Project owners set the Donation Bonus Power; it is a variable to determine how much bonuses users receive from their donations. There is a tradeoff between the market cap and the amount of donation. If a project owner wants to earn more income from donations, the Donation Bonus Power should be set higher. On the other hand, if the project owner wants users to get profits more, they should set the Donation Bonus Power lower. Project owners can change it anytime later. This is a little like capital increase as companies do.\n \n\n Risk Hedging\n \n\n Project owners have to hedge risks for users because unexpected asset loss causes restrictions on the purchase of the tokens. To prevent that, project owners set the Value Guarantee Rate. It is the rate of the values that users never lose related to the purchased values. Users also determine the rate to guarantee the part of held token values, but users cannot set the Value Guarantee Rate less than the project owner sets. This rate might be different from jurisdictions in which target users exist. Project owners must consider the Value Guarantee Rate is safe enough not to be regulated and to protect users from huge asset loss. Those values are quoted by Universal Static Price which is static over time, moreover, better to quote by than any fiat currency. Therefore, token values are stably backed in the pool and guaranteed by the Value Guarantee Rate against fluctuation.\n \n\n Investment\n \n\n The issued tokens are a kind of NFTs. Because amounts of donations and Value Guarantee Rate are different for individuals; the more donation the more bonus value and the higher Value Guarantee Rate the less volatility. If tokens are purchased by the same amount of donations and at the same Value Guarantee Rate, every issued token is at the same volatility. Investment returns are differentiated by donation and Value Guarantee Rate. That seems hard to use those tokens, however, it is easy to use because they are coupled with the DEX; that is token agnostic for many use cases.\n \n\n Donation Bonuses and Investment Returns\n \n\n There are two factors that users get values with, which are Donation Bonuses and Investment Returns. Donation Bonuses are derived from the amount of donation and Donation Bonus Power, Investment Returns are derived from the amount of purchased tokens and Value Guarantee Rate (and Donation Bonus Power). If a user earns profits by 10% of tokens, another may earn 5% or 15% of profits. It is various to users.\n \n\n KYC, AML/CFT, etc\n \n\n Due to the exemption of crypto-related licenses for project owners, it's not able for anonymous users to transfer or exchange tokens. Users have to get permission from regulated organizations. If any exchanges don't allow a user to exchange, the user may not able to get an investment return, but still, offering tokens are feasible without any licenses because that is completely the same as selling a dynamic pricing product at the moment of the \"offering\" in this case. Although, whether users can exchange with what currencies without permission is what project owners decide respective to each jurisdiction. In many jurisdictions, it may be possible to exchange only with their own fiat currencies without permission because that is just purchase and payback of dynamic pricing products.\n \n\n How we built it\n \n\n It works with this project and canisters serving frontend.\n \n\n Challenges we ran into\n \n\n The time limit\n \n\n Accomplishments that we're proud of\n \n\n Capitalismizing social organizations\n \n\n What we learned\n \n\n Neo-capitalism is feasible.\n \n\n What's next for Donainvest\n \n\n Integration with payment apps to bridge to the real world.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "donainvest#@#@#rust#@#@#donainvest is a donation-investment platform on which the market cap is in proportion to the social impact and social workers are able to continuously fundraise without crypto-related licenses.",
    "tags": [
      "rust"
    ]
  },
  {
    "id": "ic1101-iusd",
    "name": "IC1101 iUSD",
    "description": "MakerDAO with no jokes.",
    "image": "ic1101-iusd.jpeg",
    "links": {
      "github": "https://github.com/ic1101-iusd",
      "livePreview": "https://mk2a2-miaaa-aaaak-aavra-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329970-ic1101-iusd",
      "otherLinks": [
        "https://docs.google.com/presentation/d/1cHaNDOccipyeUVnzGdDNQi1p8BO2KupqpuSSfZJRJaE/edit?usp=sharing"
      ]
    },
    "submitterFirstName": "Ihor",
    "submitterLastName": "Verkhohliad",
    "about": "Inspiration\n \n\n We learned about ICP from the simple Instagram ad, and it made us crazy. Technology deep-dive videos are amazing. The best experience of writing asynchronous smart-contracts we ever had ( yes, we tried NEAR too :) ) AND! The first REALLY decentralized Bitcoin integration, this one is actually AWESOME. There is so much liquidity potential hamsters haven't used yet. We understood – we should help utilize this liquidity.\n \n\n What it does\n \n\n So, we got the goal – to utilize Bitcoin liquidity in the best way possible. But how can we proceed, if there are so many Bitcoin HODLERs, who don't want to sell their BTC ever, or at least for millions? So, the best solution is not to sell Bitcoin, but to mortgage it!! The classical lending protocol Compound offers really big percentages for USDT about 4-5% per year. It is not the case, if you have a lot of BTC, and wait for the next bull run in 5 years. That's why we decided to proceed with the MakerDAO approach to creating our own overcollateralized stable coin, but make it much better by removing Maker's disadvantages: still high borrow percent, auction-based liquidation, strong dependence on the centralized assets(USDC, WBTC, etc.), DAO controlled by whales.\n \n\n How we built it\n \n\n Supernova Workshops and other video material help a lot in deep diving into the Internet Computer.\n DApp is built with motoko and reactjs utilizing four canisters roles: web-part, Bitcoin token, stable token, minter. Also, we use Java icp client - IC4J for the liquidator bot. We still waiting for the Bitcoin <--> ICP bridge and big liquidity market running on the ICP to bring our project to life. \n \n\n Challenges we ran into\n \n\n Asynchronous code requires a different way of thinking in terms of smart-contract development and security audits. We need to create really robust protocol against market volatility, front-run attacks, etc. Also, some parts of the infrastructure is pretty fresh, and buggy (like Plug wallet), but we still are moving on 💪. \n \n\n What's next for IC1101 iUSD\n \n\n \n\n Bitcoin ICP integration\n Upgrade liquidation flow \n Next-generation DAO\n Integrate Oracle for BTC price",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ic1101 iusd#@#@#react#@#@#motoko#@#@#java#@#@#javascript#@#@#internetcomputer#@#@#dfinity#@#@#docker#@#@#bash#@#@#heroku#@#@#spring#@#@#makerdao with no jokes.",
    "tags": [
      "react",
      "motoko",
      "java",
      "javascript",
      "internetcomputer",
      "dfinity",
      "docker",
      "bash",
      "heroku",
      "spring"
    ]
  },
  {
    "id": "secure-canister-communication-on-the-ic-blockchain",
    "name": "Secure Canister Communication on the IC Blockchain",
    "description": "We provide a framework where sensitive messages can be securely passed between canisters, i.e to avoid man-in-the-middle attacks. Our solution allows secrets to be securely communicated.",
    "image": "secure-canister-communication-on-the-ic-blockchain.png",
    "links": {
      "github": "https://github.com/MaithreyaSitaraman/secure_canister_communication_IC_blockchain",
      "external": "https://supernova.devpost.com/submissions/333088-secure-canister-communication-on-the-ic-blockchain",
      "otherLinks": []
    },
    "submitterFirstName": "Maithreya",
    "submitterLastName": "Sitaraman",
    "about": "Inspiration\n \n\n We have previously developed on the IC and our overall Dapp is one that contains sensitive information (personal emails). Data security is of the utmost importance and we have developed several modules on the IC to create the most secure environment possible given the characteristics of the IC. Secure canister communication is part of our security infrastructure and necessary for our business needs. We isolated the security framework for this hackathon submission to make them public as we know other developers and businesses would benefit. \n \n\n What it does\n \n\n We provide a framework where sensitive messages (such as PII) can be securely passed between canisters, i.e to avoid man-in-the-middle attacks. Our solution allows secrets to be securely communicated between canisters without being compromised by eavesdroppers.\n Our solution comprises of a sender and a receiver. The sender and receiver perform a public key exchange to independently arrive at a secret AES key which cannot be known to an eavesdropper. The sender then sends AES encrypted data to the receiver which is then decrypted on the receiver's side. \n \n\n How we built it\n \n\n We use the Diffie-Hellman key exchange together with AES-128. In order to implement our solution, we needed to build several original encryption modules in motoko: \n \n\n \n\n aes128.mo -- Implementation of the Symmetric encryption algorithm AES-128\n polynomial_handling.mo -- Mathematics module that handles Addition and Multiplication in Polynomial rings k[X]/(f). This is required for AES implementation. \n diffiehellman.mo -- Helper functions to perform the Diffie Hellman Key Exchange \n converter.mo -- Handles conversions between binary, Nat8, hex, unicode etc.. \n \n\n \n\n The first three modules above are the first such modules implemented in Motoko. The fourth is a compilation of convenient conversion functions, most of which have not been implemented yet elsewhere. We believe we are making a significant contribution to the IC developer community by making these encryption modules public, since they are the first of their kind that has been implemented. \n \n\n Challenges we ran into\n \n\n \n\n Since encryption modules for Motoko did not yet exist, we had to build them from scratch. This was challenging and for example, we initially had bugs in our AES implementation, which were difficult to track considering the multitude of operations and steps. We got around this by printing out step by step and manually doing the computation to check against, thereby identifying the step that went wrong. \n For Principal ID screening, it took us a little of time to figure out that we could invoke Principal.fromActor()\n We needed to figure out that we needed to use switch and cases to obtain Text rather than ?Text from a Hashmap, which we could then feed into other functions. \n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n We have built the first ever motoko modules that handle AES symmetric encryption, the Diffie-Hellman key exchange, and multiplication in the polynomial ring k[X]/(f). \n We are coming close to storing secrets securely on chain which is critical to our business objective.\n \n\n \n\n What we learned\n \n\n Because most mainstream languages have encryption support, we did not prior have the opportunity to build such fundamental encryption modules from scratch. Motoko gave us this opportunity and we learnt a lot about the inner workings of these encryption algorithms. It was also satisfying and a learning process to witness Diffie-Hellman on chain, which somehow has a different flavor from off chain applications.\n \n\n What's next for Secure Canister Communication on the IC Blockchain\n \n\n We will closely follow the DFINITY roadmap and provide recommendations for further security architecture. There are product features already planned (e.g enclaves) that will support comprehensive security. \n \n\n Additionally, we will constantly improve and maintain the encryption modules for the community's benefit. One of the first few improvements would make is changing the function to convert Diffie-Hellman keys to AES keys -- we will change it to a SHA hashing method. Note that a DFINITY team has already created a SHA-256 module (maintained by Enzo Haussecker).",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "secure canister communication on the ic blockchain#@#@#motoko#@#@#we provide a framework where sensitive messages can be securely passed between canisters, i.e to avoid man-in-the-middle attacks. our solution allows secrets to be securely communicated.",
    "tags": [
      "motoko"
    ]
  },
  {
    "id": "exponent",
    "name": "Exponent",
    "description": "Exponent is a suite of products that make NFTs easy for creators and game developers. Exponent currently consists of an NFT canister standard (next gen. EXT standard) and a CLI tool for developers.",
    "image": "exponent.gif",
    "links": {
      "github": "https://github.com/Toniq-Labs/exponent-cli",
      "external": "https://supernova.devpost.com/submissions/334153-exponent",
      "otherLinks": []
    },
    "submitterFirstName": "Bob",
    "submitterLastName": "Bodily",
    "about": "Inspiration\n \n\n Launching NFTs on the Internet Computer is not a trivial process. You have to handle the upload and view of many different types of assets, mint the actual NFTs, configure marketplace methods on the canister (or multiple marketplaces if you want native functionality across many), ensure you have methods needed to interface with ecosystem wallets, and configure launch and marketplace settings to ensure the launch goes according to plan. This makes a custom NFT launch fairly difficult.\n \n\n To address this problem, we have created Exponent. Exponent is a suite of tools that enable anyone to do awesome work with NFTs. Non-technical folks can use frontends built on standards, and developers can leverage our open API for creating collections/launches and minting NFTs.\n \n\n What it does\n \n\n Exponent consists of:\n An NFT standard (EXT V2) that handles launch settings, collection settings, pricing group settings, and marketplace methods. These can all be easily configured in the canister and this canister can be whitelisted directly to Entrepot (or other marketplaces in the future)\n An Exponent creation canister that will add a principal as controller to your new canister and can spin up canisters with EXT V2 installed and ready to go.\n A CLI tool to make it ridiculously easy to interact with the Exponent tooling\n \n\n The simplest way to describe Exponent is it will let anyone create and configure NFT collections and launches seamlessly integrated with Entrepot directly from icscan.io. No coding required.\n \n\n We have already had discussions with providers, such as Nuance, Catalyze, and DSCVR, that are interested in building custom frontend features to leverage Exponent in their tools.\n \n\n How we built it\n \n\n Exponent took a lot of inspiration from existing Entrepot marketplace methods and the EXT non-fungible standard. To be clear, while Exponent improves on existing methods, it is a completely new set of tools and standards, built from the ground up as part of the hackathon. Our main goal was to allow any developer or any non-technical person to be able to create collections/launches and mint NFTs on the Internet Computer, which is now possible using this Exponent tooling.\n \n\n Challenges we ran into\n \n\n There are many challenges associated with minting NFTs. For example, where do assets get uploaded? Do you upload straight to the NFT canister (tricky because of size limits)? Or do you upload to asset canisters (tricky because you have to spin up asset canisters with CDN-type approach)? And then how do you configure your http_request methods to facilitate fast download and viewing of your NFTs in the browser? And what about thumbnails for faster viewing? Do you build a service for thumbnails?\n \n\n Exponent is a suite of tools to help people with NFTs, but we can’t tackle all tooling at the same time. So we have started with asset uploading, creating and configuring collections and launches, and minting NFTs. This is the first stage of Exponent, and will subsequently grow into many more tools in the future.\n \n\n Accomplishments that we're proud of\n \n\n Our most significant accomplishment is that users can go to the right canisters in icscan.io and can mint an entire collection and whitelist it on Entrepot using ONLY icscan.io. This means you can easily interact with a canister or two to easily mint NFTs. We hope that this enables anyone to create an NFT collection and we hope to remove ourselves as gatekeepers in the ecosystem to determine who gets to launch and when.\n \n\n What we learned\n \n\n Standards and security are hard. With our initial launch of EXT last summer we weren’t ready to build in all of the things that we have now, so the standard is more simple and not as robust as now. We’ve also found bugs and security concerns along the way that we have patched and fixed up for future standards.\n \n\n Another key learning is the importance of extensibility with NFTs. NFTs are essentially just data stored on the blockchain, which means there will be many NFT standards for different types of data. Using an extensions approach, you can easily support additional data types or methods with your NFTs. Just drop in the appropriate extension and you are good to go.\n \n\n What's next for Exponent\n \n\n Exponent is a suite of tooling that enables non-technical folks and developers to use NFTs in their applications more prominently. We have tackled the minting and setup of the process, but there are so many tools left to build to extend what we have started with Exponent.\n \n\n Future tooling could include supporting new launch types (auctions, dutch auction), better video support (range requests and distributed storage to support faster downloading of content), adding additional whitelist options (ModClub verified human, NFID phone number verification), wearables NFTs, or interactive NFTs that change based on 3rd party data (piped into the IC via an IC oracle).",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "exponent#@#@#motoko#@#@#react#@#@#exponent is a suite of products that make nfts easy for creators and game developers. exponent currently consists of an nft canister standard (next gen. ext standard) and a cli tool for developers.",
    "tags": [
      "motoko",
      "react"
    ]
  },
  {
    "id": "4everland",
    "name": "4EVERLAND",
    "description": "4EVERLAND is a Web 3.0 cloud computing platform that integrates storage, computing, and network core capabilities.",
    "image": "4everland.png",
    "links": {
      "github": "https://github.com/4everland/dashboard-website/tree/test",
      "livePreview": "https://hb.4everland.app/index.html#/overview",
      "external": "https://supernova.devpost.com/submissions/326853-4everland",
      "otherLinks": []
    },
    "submitterFirstName": "4EVERLAND",
    "submitterLastName": "Org",
    "about": "Inspiration\n \n\n With the development of technology and network infrastructure, the Internet, which started with Web 1.0 era of reading and writing, has managed to make a huge revolutionary leap with a transition to Web 2.0 era of content creation.\n \n\n Today's Internet generates and distributes unprecedented amount of data every day. Centralized institutions serve as gatekeepers to provide services to a large number of users . There is no doubt that they make too much money from the value created by users and developers. However, due to the situation today, various centers of Web2 faced a series of problems ralevent with the unfairness, deceit, and censorship problems exposed by the design are increasing seriously.\n \n\n That's why we need to move forward into the next generation of the Internet - Web.3.0.\n \n\n 4EVERLAND is a Web.3.0 cloud computing platform. We integrate excellent blockchain protocols and network underlying capabilities to make it easier for developers to develop on the blockchain with Web3 network and technology. Under the complete development supporting provided by 4EVERLAND, everyone can enjoy working in Web.3.0 with the fun of development.\n \n\n Now developers can complete the front-end deployment of IPFS and complete file hosting and access based on IPFS or Arweave through 4EVERLAND. At the same time, 4EVERLAND provides developers with a one-stop global acceleration gateway compatible with Web2.\n \n\n Dfinity, as a network with powerful decentralized storage, network and computing capabilities, 4EVERLAND will integrate Dfinity to provide users with comprehensive Web.3.0 cloud computing services.\n \n\n Thanks to SuperNova, offer us this opportunity to stand on the stage, we glad to demonstrate the first step of our integration of Dfinity—“IC-hosting”.🙏\n \n\n What it does\n \n\n 4EVERLAND provides users with one-stop website deployment and access services in Dfinity. Users can directly host the front-end on the Dfinity network through github authorization or local Cli on 4EVERLAND. \n \n\n At the same time, in order to motivate our users to migrate the front-end from the centralized server to Dfinity, 4EVERLAND will provide users with the free version of the basic service, and allows all the developers hosted on IPFS through 4EVERLAND to sync the front end to Dfinity.\n \n\n How we built it\n \n\n Our server will call the Dfinity interface to create a container for the project. \n \n\n When the project is packaged and constructed in Hosting, it will transfer the packaged files to the corresponding container of Dfinity. \n \n\n When it finish, Dfinity will back for us with corresponding project hash, we will use the IC public gateway to access this hash to realize the whole process of construction, deployment and access. \n \n\n Allow projects quickly deploy to Dfinity through 4EVERLAND Hosting service with \"One-Click\".\n \n\n Challenges we ran into\n \n\n Through the Dfinity's detailed documentation, we haven't found too many challenges at this stage, but we will face many challenges in the future:\n \n\n We will start the development of Dfinity's dedicated gateway as soon as possible after the integration. We try to find various sloutions in specific way. \n \n\n For instance, how to make the gateway's global acceleration experience better? How to return container ownership to the user? How to provide users with more payment methods? Meanwhile, we have integrated IPFS and Arweave. How to connect and empower Dfinity with IPFS or Arweave? \n These all will face challenges.\n \n\n Accomplishments that we're proud of\n \n\n With the development of 4EVERLAND today, we have more than 35K DApps which choose to use 4EVERLAND to host websites or data in a decentralized network, among which there are many well-known DeFI projects such as Uniswap community and FstSwap.\n https://twitter.com/FstSwapbright/status/1530109546810683393；\n We also become the ecological infrastructure of Polygon, zkSync, Near and other ecosystems due to our excellent functions and service experience;\n https://twitter.com/zksync/status/1528738817909440515?cxt=HHwWhoC-vd72lbcqAAAA\n \n\n We have many advanced innovations, such as the first storage aggregator compatible with both IPFS and Arweave, the only provider of SNS (Solana Name Service) IPFS public gateway; \n We believe that integrating Dfinity will be an important milestone for us to become \"the best solution\" on the market;\n \n\n 4EVERLAND has a strong community and developer base today, and we believe that in the future we will be very much proud that we have helped countless developers to enjoy the experience of developing in Dfinity through 4EVERLAND.\n \n\n What we learned\n \n\n We have fully understood how to integrate Dfinity in front-end deployment to provide users with convenient and stable hosting services. \n \n\n Furthermore, we have been exploring Dfinity as the underlying architecture in an all-round way . We are thinking about how to expand and establish available Web3 PaaS and SaaS services, and link with more protocols on the chain and off the chain to achieve data storage, network and computing capabilities, which will help us serve users in the future and providing comprehensive Web.3.0 cloud computing services has laid the foundation.\n \n\n What's next for 4EVERLAND\n \n\n For the integration of Dfinity, we will take IC hosting as our first step, and we will ebhance the development of the following integrated Dfinity in the future;\n \n\n \n\n Develop and maintain a dedicated Dfinity gateway to ensure the stability and friendly experience of access;\n Associating ENS, SNS, DNS with the front-end hosted on Dfinity;\n Return the ownership of the container to the user;\n Achieve multi-currency payment of resources, and integrate Dfinity's login method to provide one-stop service experience for Dfinity ecological users;\n Linking Dfinity to our IPFS Swarm network \n We already have a feasible solution. As you know, we have completed the synchronization of IPFS and Arweave files. So that Dfinity will also be linked with Arweave;\n https://supernova.4everland.store/Dfinity%3C%3EIPFS%20connection.jpg",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "4everland#@#@#java#@#@#github#@#@#dfinity#@#@#vue#@#@#mysql#@#@#cloudflare#@#@#4everland is a web 3.0 cloud computing platform that integrates storage, computing, and network core capabilities.",
    "tags": [
      "java",
      "github",
      "dfinity",
      "vue",
      "mysql",
      "cloudflare"
    ]
  },
  {
    "id": "ontics",
    "name": "Ontics",
    "description": "Authoritative source of release images of all blockchain technologies",
    "image": "ontics.png",
    "links": {
      "github": "https://github.com/KOSASIH/Ontics",
      "external": "https://supernova.devpost.com/submissions/326882-ontics",
      "otherLinks": []
    },
    "submitterFirstName": "KOSASIH",
    "submitterLastName": ".",
    "about": "Inspiration\n \n\n The development of blockchain technology is very rapid, providing changes in all aspects of life. This of course requires a lot of special research and also creates other supporting technologies, so that it will be able to provide many benefits.\n \n\n What it does\n \n\n Ontics is the authoritative source of release images of all blockchain technologies. Whether you are building a blockchain product or are simply interested in learning more about the technology, Ontics is here to provide you with an easy-to-use and trustworthy source of data. The Ontics team has been working diligently to develop a comprehensive list of all blockchain-related software, services, and user interfaces. Our goal is to provide an easy way for users to find images related to their projects, allowing them to quickly and easily add new images that are relevant to their work.\n \n\n How we built\n \n\n Ontics: The Go-To Image Source for All Blockchain Technologies: Images have the power to drive action. We provide an effective and simple way to deliver relevant images to the right audience, through Ontics. Created by the team at Ontology, Ontics provides a comprehensive image database of blockchains and cryptocurrency technologies to enable the next generation of digital businesses. Available on both mobile and desktop, Ontics enables seamless browsing of its collection of images while also giving users the ability to filter based on different categories, tags, types and more. it\n \n\n Challenges we ran into\n \n\n To build an authoritative, interactive and brand-centric software solution for the cryptocurrency community.\n \n\n Accomplishments that we're proud of\n \n\n The first and only directory of blockchain technologies: Ontics is an expert registry for the global blockchain community. It provides a comprehensive catalog of companies and smart contract codes in response to the growing demand for reliable standards and wide-scale blockchain adoption. The Ontics platform includes a rich set of features supporting end-to-end transaction lifecycle management, which is fundamental in establishing trust and transparency in the emerging decentralized world.\n \n\n What we learned\n \n\n Blockchain Technology Images, Blockchain Technology Releases, Ontics Images, Blockchain Technology Release Images, Ontics Release Images: Ontics is the first and only provider of blockchain technology images. Our mission is to help Knowledge Economy to revolutionize their business model using visualized images that depict how each blockchain product and technology is designed. Detailed release images enable companies to improve understanding of complex technology, cut IT development costs by more than 15% and accelerate go-to-market time from three months to three weeks.\n \n\n What's next for Ontics\n \n\n Our vision is to make it easy for users to find what they need in order for their projects to succeed. We believe this will enable us to help individuals and companies alike achieve success with their projects by providing a simple solution that allows them to access the information they need quickly and easily.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ontics#@#@#html#@#@#javascript#@#@#css#@#@#github#@#@#windows#@#@#authoritative source of release images of all blockchain technologies",
    "tags": [
      "html",
      "javascript",
      "css",
      "github",
      "windows"
    ]
  },
  {
    "id": "planzapp",
    "name": "planzApp",
    "description": "A DApp that enables users to make everyday plans within a smart, connected and decentralized economy",
    "image": "planzapp.jpeg",
    "links": {
      "github": "https://github.com/SuperNova-Planzapp/planzapp_reactjs",
      "livePreview": "https://gr2u7-rqaaa-aaaap-qam5q-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326834-planzapp",
      "otherLinks": []
    },
    "submitterFirstName": "Hamid",
    "submitterLastName": "Bundu",
    "about": "Inspiration\n \n\n How cool would it be to have a dApp that helps you create plans with friends and family, manage the plan: including discovery of experiences, planning, RSVP and payments ? Many people struggle with planning things with other people, the more people - the more complicated the process gets. Getting everyone on the same page, time and place is not easy. Moreover, paying for experiences is another set of complex problems that many groups face on a daily basis.  \n \n\n What it does\n \n\n planzApp allows you to make smart plans with friends and family seamlessly using smart contracts on the Internet Computer. \n \n\n How we built it\n \n\n Our mobile dapp is built using flutter and connected using Agent_dart. We used Motoko for the backend and we wrote code for a Web interface using reactjs \n \n\n Challenges we ran into\n \n\n \n\n Connecting our Flutter code with our Motoko backend using Agent_dart. \n Our use-case/scope was a bit broad and we were unable to complete some of the goals that we set for this hackathon. \n We changed direction a couple of times to reduce scope \n Learning curve for some team member \n \n\n \n\n Accomplishments that we're proud of\n \n\n We were able to solidify the user experiences that we want our future users to have and the value that we can add to our users by building on the Internet computer. \n \n\n What we learned\n \n\n We learned a lot about the Internet computer:\n \n\n \n\n How to deploy on the IC\n Identity, Tokens and Governance and Cycles \n Motoko, Canisters, ICP ledger\n Most importantly we learned a lot about the Internet Computer's Community and why the IC is the best blockchain for us to continue building on. \n \n\n \n\n What's next for planzApp\n \n\n One of our success metrics is payments on the Internet Computer. Payments on the IC are still evolving and we are excited and will continue to build and refine our dApp and add some of the features that we want users to experience. We are part of the community and looking forward to learn and help build out solutions for payments and Marketplaces on the Internet Computer.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "planzapp#@#@#dart#@#@#flutter#@#@#motoko#@#@#react#@#@#html#@#@#css#@#@#javascript#@#@#agent-dart#@#@#internetidentity#@#@#a dapp that enables users to make everyday plans within a smart, connected and decentralized economy",
    "tags": [
      "dart",
      "flutter",
      "motoko",
      "react",
      "html",
      "css",
      "javascript",
      "agent-dart",
      "internetidentity"
    ]
  },
  {
    "id": "landlord",
    "name": "Landlord",
    "description": "Landlord is a DApp where users can trade and invest in real-estate easily & securely. It eliminates the risk of real-estate scam, and creates a safe heaven where sellers can sell, buyers can buy etc.",
    "image": "landlord.jpg",
    "links": {
      "github": "https://github.com/landlord-limited",
      "external": "https://supernova.devpost.com/submissions/327503-landlord",
      "otherLinks": []
    },
    "submitterFirstName": "Ibrahim",
    "submitterLastName": "Yakubu",
    "about": "Inspiration\n \n\n As a landlord, I know the hassle involved in trying to buy or sell a real-estate asset, especially with the risk of real-estate scam. This is a scam whereby an individual claims false ownership of a property and or sells it to multiple people. My father being a realtor, combined with the stories of how people are driven to suicide after being a victim of a real-estate scam created a great nudging to come up with a solution, but was hindered by the limitations of webBut with the emergence of web3, blockchain technology and the possibilities they provided, \"landlord\" became a possibility.\n \n\n What it does\n \n\n Landlord provides a safe heaven/platform where users can trade and invest in real-estate easily and securely. It also reduces/eliminates the hassle involved in procuring a property in the sense that; a user can purchase/sell a property on their phones, right from the comfort of their home. It achieves this making making real estate assets into NFTs so they can be easily and securely traded and invested in.\n \n\n How we built it\n \n\n We built it by first researching and coming up with mockups/screen designs in Figma, then we began developing the frontend in React.js and the backend in Motoko, whilst also learning about the internet computer, it's features, capabilities and possibilities.\n \n\n Challenges we ran into\n \n\n Being that it was our first time working with the Internet Computer, we had a lot to learn and so little time. We came across hardware issues that made it difficult to deploy locally or implement the Internet Computer's Internet Identity even though we had initially implemented it (hence the reason why it is not in demo). We created separate repos to prevent us from tripping over each other during development, only to realize during merging that tailwind wasn't working properly, we spent days trying to make it work because starting all over again with a different library didn't seem feasible. \n \n\n Accomplishments that we're proud of\n \n\n We were able to fix the tailwindcss issue! and we somehow managed to record the demo in end. But most of all, we are proud to have completed the hackathon with a functional MVP! (a challenge indeed)\n \n\n What we learned\n \n\n We learned how to build dApps on the IC, how write code in motoko, how to create a market place, how to better work as a team and how to persevere. We are thankful to dfinity for that.\n \n\n What's next for Landlord\n \n\n We plan to keep on improving the application till we make it into the safe heaven we envision it to be.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "landlord#@#@#motoko#@#@#react#@#@#dfx#@#@#node.js#@#@#tailwindcss#@#@#landlord is a dapp where users can trade and invest in real-estate easily & securely. it eliminates the risk of real-estate scam, and creates a safe heaven where sellers can sell, buyers can buy etc.",
    "tags": [
      "motoko",
      "react",
      "dfx",
      "node.js",
      "tailwindcss"
    ]
  },
  {
    "id": "desu-decentralized-survey-app",
    "name": "DeSu - Decentralized Survey App",
    "description": "A decentralized platform for conducting paid and unpaid surveys that incentivizes the traditional survey-taking process and has something in store for both the parties in it.",
    "image": "desu-decentralized-survey-app.png",
    "links": {
      "github": "https://github.com/decentrazone/DeSu-Decentralised-Survey-Platform-Supernova/",
      "livePreview": "https://i3h6n-siaaa-aaaap-aahaq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333957-desu-decentralized-survey-app",
      "otherLinks": []
    },
    "submitterFirstName": "Harishankar",
    "submitterLastName": "Kumar",
    "about": "Inspiration\n \n\n As someone who has participated in a lot of surveys and had created forms for taking surveys, there’s one thing I noticed, The conventional method of survey taking-giving process is monotonous, unrewarding, and dull. There’s no motivation/rewards to fill the surveys and It’s always the one not-so-interesting task that we are burdened with.\n \n\n Also, there is a lack of transparency in survey polls and results, always a chance of tampering and even big survey platform giants do not have the transparency of response that a decentralized platform running on blockchain can provide!\n \n\n That's why we got the inspiration to create a Decentralized Survey App for solving these problems.\n \n\n What it does\n \n\n Our platform DeSu (Decentralized Survey App) reforms the whole process of taking/giving surveys by implementing many fun and unique features. It aims to do so by having its own custom ERC20 standard token called DeSuX (DSX) coin which is used to incentivize the process by awarding the participants with some of this coin, How does it work?\n \n\n Basically, one thing that makes our platform (and project) unique is the ability to stake our DeSuX coin while creating surveys!! Staking coins on a survey will reward any participants completing it with some fixed amount of DeSuX (based on a per-participant basis) which they can collect over time by participating in high-profile surveys and finally redeeming it or converting it into cash.\n \n\n Now the whole concept of rewards makes the process fun as well as rewarding, as we all know that human nature is to do things that benefit them therefore any normal person will target surveys with high reward returns, therefore, companies/organizations (or any survey taking authority) can exploit this by staking more of our coins and hence making their survey more lucrative and subsequently getting faster responses/more data.\n \n\n But our application is a Decentralized Survey App not a Decentralized Paid Survey App (See the difference), although the ability to stake coins is what sticks us out from the crowd It’s not the only thing we offer! Since the application DeSu is built on a blockchain ledger therefore all the data going through the platform is secure and transparent for everyone to see! Therefore any normal user can post their own surveys with 0 stakes (ie a non-rewarding survey) and still collect data knowing it's all secure and has no tampering. The inherent blockchain backend ensures that there’s no tampering in data and since no third party or central server is involved therefore surveys are guaranteed to be not tampered with or modified in any way and that brings a whole new world of transparency to the table. Now that’s Sweet!\n \n\n How we built it\n \n\n We built it using Motoko/ReactJS, and several uncountable libraries which support the project.\n \n\n Challenges we ran into\n \n\n Our team due to some personal/medical issues started working late at the time of writing code we only had one week until the deadline, so learning a whole new language from scratch and creating a working prototype was hard, Not only that since Motoko was a new language there weren’t many resources as compared to many ongoing languages/platform on the internet. It took a lot of research to find code snippets and working examples to build this prototype.\n \n\n Accomplishments that we're proud of\n \n\n We are proud of finishing proof-of-concept work for this platform with a fully integrated frontend/backend and a presentable demonstration of the website. Not only that we are also proud of finishing all the work in a tight deadline of a week.\n \n\n What we learned\n \n\n We learned a lot of new things, especially the architecture of dfinity’s internet computer and how it works. We also came across actor models and new concepts of writing codes. Not only that but this project gave us a lot of exposure to how things on blockchain work and in specific how to work on internet-computer. Participating in this hackathon gave us a lot of motivation and confidence to keep working on other blockchain projects/platforms.\n \n\n What's next for DeSu - Decentralized Survey App\n \n\n A lot, right now the front-end for our project is a little lacking, although the backend has DeSuX stake-ing implemented our frontend didn’t have it, this was due to time constraints that we cannot implement many of our visioned features like a Wallet for getting DeSuX, reward history, and even exchanges. Not only that but we also had ideas about listing DeSuX on exchanges and hence making the cryptocurrency more useful (and lucrative) for users.\n \n\n Also, we already realized long ago that since our platforms had rewards there are bound to be people that try to exploit them, so we intend to implement a bad/faulty survey response submission model using NLP/ML which checks upon the validity of submitted response using various input parameters like time taken to fill each question, difficulty, etc. Also, a captcha is a must for this application and would need to be implemented right on the network.\n \n\n Made with ❤️ by HSK.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "desu - decentralized survey app#@#@#react#@#@#motoko#@#@#internet-identity#@#@#internet-computer#@#@#blockchain#@#@#dfx#@#@#node.js#@#@#a decentralized platform for conducting paid and unpaid surveys that incentivizes the traditional survey-taking process and has something in store for both the parties in it.",
    "tags": [
      "react",
      "motoko",
      "internet-identity",
      "internet-computer",
      "blockchain",
      "dfx",
      "node.js"
    ]
  },
  {
    "id": "ices",
    "name": "ICES",
    "description": "a storage and analysis service for canister's event logs on IC",
    "image": "ices.png",
    "links": {
      "github": "https://github.com/icpfans-xyz/ices",
      "livePreview": "https://ices.one/",
      "external": "https://supernova.devpost.com/submissions/334450-ices",
      "otherLinks": []
    },
    "submitterFirstName": "0x",
    "submitterLastName": "Lee.c",
    "about": "Inspiration\n \n\n It mainly solves the problem that canister's interaction records cannot be publicly queried.\n \n\n What it does\n \n\n ICES is a canister custom event log storage and analysis service on Dfinity.\n \n\n Any canister can access ICES without permission, store the interactive data permanently, and query it through the public API and dashboard provided by ICES.\n \n\n All smart contracts that need to record event logs forever and statistics and want to make them data public are the target users of ICES.\n \n\n What's next for ICES\n \n\n Thanks to the web3hackathon, we were able to use this competition to sprint our projects. During the competition, we completed ICES Core Canister refactoring, Motoko SDK, backend API, and Explorer frontend.\n \n\n Here is our roadmap for this year. We will continue to polish ICES, make it more usable, and drive developers on IC to use it. In addition, we will also consider the business model of this product, we believe that a good business model can make ICES better serve the IC ecosystem, win-win. \n \n\n our goal is to make ICES an essential infrastructure for the IC ecosystem, to achieve this vision, the active participation of the whole community is very important, so the future of ICES will be decided by DAO.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ices#@#@#motoko#@#@#rust#@#@#react#@#@#javascript#@#@#graphql#@#@#a storage and analysis service for canister's event logs on ic",
    "tags": [
      "motoko",
      "rust",
      "react",
      "javascript",
      "graphql"
    ]
  },
  {
    "id": "dfxiot",
    "name": "dfxIoT",
    "description": "Connecting real-world data into Internet Computer using verifiable and trusted IoT Devices and incentivize data-providers with tokens",
    "image": "dfxiot.jpeg",
    "links": {
      "github": "https://github.com/marspoolxyz/dfx2IoT",
      "livePreview": "https://docs.google.com/presentation/d/10-LrMCVAyKQaRLiBvnQ2mJ6oyzoAopacayWexG3GJs8/edit?usp=sharing",
      "external": "https://supernova.devpost.com/submissions/334289-dfxiot",
      "otherLinks": [
        "https://bit.ly/SuperNova_dfxIoT"
      ]
    },
    "submitterFirstName": "Waheed",
    "submitterLastName": "Rahuman",
    "about": "Inspiration\n \n\n The Internet Computer speed and capabilities\n \n\n What is does\n \n\n Provides verifiable , tamper proof data, with privacy and data-protection using trusted devices integrated into Internet Computer\n \n\n How we built it\n \n\n We will built using the following\n \n\n \n\n Python to publish and subscribe IoT Data\n 2.Motoko for ICP Smart contracts\n 3.Ardunino sketch to send IoT Data to Canisters\n \n\n \n\n Challenges we ran into\n \n\n It was interesting building whole proto-type. As of now, we have built simple proof-of-concept and we will like to expand the idea into project which will have multiple use-cases and give a great in-sight to outside world for Internet Computer.\n As of now, only with Internet Computer computer blockchain we achieve the speed and less-expensive transactions compared to other blockchain in the market\n \n\n Accomplishments that we're proud of\n \n\n Integration of IoT with LTE network will be exciting feature we want to try.\n \n\n What we learned\n \n\n Lots of things about IoT and Internet Computer\n \n\n What's next for dfxIoT\n \n\n We want to develop and trusted devices and firm-ware to verify the authenticity of the data on-chain",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dfxiot#@#@#python#@#@#mqtt#@#@#motoko#@#@#shellscript#@#@#iot#@#@#arduino#@#@#connecting real-world data into internet computer using verifiable and trusted iot devices and incentivize data-providers with tokens",
    "tags": [
      "python",
      "mqtt",
      "motoko",
      "shellscript",
      "iot",
      "arduino"
    ]
  },
  {
    "id": "tripx",
    "name": "tripX",
    "description": "tripX is web3 app that empowering people to do trip to tourism destination while they can earn crypto for it.",
    "image": "tripx.png",
    "links": {
      "github": "https://github.com/waynedmustt/tripx",
      "external": "https://supernova.devpost.com/submissions/333519-tripx",
      "otherLinks": []
    },
    "submitterFirstName": "Rachmanto",
    "submitterLastName": "Saputra",
    "about": "Inspiration\n \n\n the idea came when I saw the tourism in Bali starting increase, but the center of the tourism are still in South Bali. I came from North Bali and from my perspective there are so many potential that North Bali possible do for tourism, but still untapped. That is why I think we need something a new way to motivate people to visit the tourism destination.\n \n\n In my and my friend's experience in NFT and how to gamify it, that is how tripX was born.\n \n\n What it does\n \n\n tripX is web3 app that empowering people to do trip to tourism destination while they can earn crypto for it.\n \n\n Through the NFTs utilization, GameFi token model, and bring Trip-to-Earn concept, we are creating the new way and new experience how your trip to tourism destination.\n \n\n tripX aims to connect all popular tourism places, and, not limited to; untapped, recovered tourism places that might affected by COVID-19 by encourage users to visit and promote them. We involve the whole tourism stakeholders, community to promote their own places to be visitable for tourist. \n \n\n How we built it\n \n\n We are starting to build the tripX by build the MVP (Minimum Viable Product) first. The flow of TripX dapp MVP following below:\n \n\n \n\n access the tripX’s app.\n login using internet identity.\n choose your destination and allow your GPS to turn on.\n Once you arrive at destination, click “Start Trip” to eligible earn your crypto! \n enjoy your destination!\n Complete the quest to earning crypto and get a chance to own “hidden” NFTs!\n \n\n \n\n After we define the MVP, we were starting to distribute the task using Trello Card:\n Dimas - Canister Smart Contract Backend - Motoko\n Putra - Canister Frontend Assets - Reactjs\n \n\n We have every week standup to update our progress, tackle each other's problem. \n \n\n Challenges we ran into\n \n\n Technical Challenge:\n We decide to use EXT standard by Toniq Labs as our token to create non-fungible token as hidden NFT. There are couple of reason based on Toniq's Documentation:\n \n\n \n\n it is ERC-1155 equivalent, so we just use one canister for both fungible and non-fungible token, easy maintenance.\n Supporting Composable NFT, which is the ability to plug and unplug the accessories that embedded to NFT.\n Entrepot Marketplace Integration only available when using Stoic Wallet as we plan to integrate our NFT into Entrepot Marketplace\n \n\n \n\n But we found many challenges when integrating EXT standard as it is not updated yet (stuck at 0.8.1) and the latest version of DFX is 0.10.0. So, we need to figure it out how to integrate EXT to our tripX dapp. After do googling and communicate with other developer on DFINITY DEV OFFICIAL discord, we found the way how to solve this. But, the obsolete and outdated repository of EXT should be major issue and need to be concerned about.\n \n\n Another one is limited documentation how to implement NFT, the whole package, even when are using EXT or not. So need to find there and there until got the answer. So, i think in the future we need to improve the documentation of specific use case, such as NFT, how to implement NFT in ICP and so on.\n \n\n Non-Technical Challenge:\n Time Management, as we work as full-time employee and sometimes we need to work 100% more due to deadline and something urgent, so time management is crucial for us. Fortunately we manage to finish the MVP , even not 100% similar, at least we could show how to mint NFT and transfer it to the user who \"won\" the hidden NFT. \n \n\n Accomplishments that we're proud of\n \n\n We proud that the idea of tripX is being loved. We did some supernova pitching in Bali and became one of the winner. Even there are so many places that need to be improved, the feedback is very positive, the idea how we are gonna help local tourism is touched and it is scalable business, as it is not in Bali, not Indonesia, but also over the world.\n \n\n We also able to finishing the MVP of tripX dapp and show how able to utilize ICP ecosystem to be integrated to our dapp.\n \n\n What we learned\n \n\n Building tripX is not gonna be easy. We need to figure it out how to ensure the sustainability of our dapp, especially when we do tokenomics, design gameFi token model. Also how we gonna connect the local tourism and us. But the ideal approach is we need the Community empowerment, which is we need people to help us to succeed the tripX.\n \n\n What's next for tripX\n \n\n I would love to tripX to become realization and beneficial for others. The short term is we are gonna improve our tripX MVP and do at least 2-3 partnership to show our MVP and do Idea Validation to validate our idea if it is customer needed.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "tripx#@#@#motoko#@#@#react#@#@#tripx is web3 app that empowering people to do trip to tourism destination while they can earn crypto for it.",
    "tags": [
      "motoko",
      "react"
    ]
  },
  {
    "id": "dear-diary",
    "name": "Dear Diary",
    "description": "Dear Diary is the first decentralized market place that will allow users to sell their diaries as NFTs. It is developed on Web3 on the Internet Computer, Motoko backend and React.js frontend.",
    "image": "dear-diary.png",
    "links": {
      "github": "https://github.com/nahrinoda/dear-diary",
      "external": "https://supernova.devpost.com/submissions/327321-dear-diary",
      "otherLinks": []
    },
    "submitterFirstName": "Nahrin",
    "submitterLastName": "Yousif",
    "about": "Inspiration\n \n\n My inspiration is to keep my personal diaries private while they are stored on the web, my reference is the chrome extension My Diary \n \n\n What it does\n \n\n This submission Phase-One displays a complete CRUD function where a user can create, read, update and delete diaries, with a clean minimalistic UI.\n \n\n How I built it\n \n\n I build it with the Internet Computer .dfx SDK, Motoko back-end language, React.js for the front-end and IPad procreate for the landing page graphics. \n \n\n Challenges I ran into\n \n\n I learned about the blockchain technology while building Dear Diary, I wish I have more time to submit a complete concept, but I will continue developing this application untill I meet my target.\n \n\n Accomplishments that I' am proud of\n \n\n This application is very personal for me. I love my diary, I created many diaries through the years, my main challenge with diaries was either I lose them or I run out of pages and I have to start a new one. Until I found the chrome extension My Diary, typing a diary online has a different feeling to it, especially thinking how hackable the cloud is?!! With the new Web3 decentralized system, I can rest assured that my diaries are kept safe and private, until I am ready to share them or even sell them.\n \n\n What I learned\n \n\n I have never heard of Web3 or the decentralized data system before. I read about blockchain on the news but never spent time understanding the technology behind it. As a software engineer, This hackathon allowed me to learn new tech skills while building Dear Diary on Web3 with the Internet Computer, .dfx SDK, and Motoko back-end language. \n \n\n What's next for Dear Diary\n \n\n My main strategy is to create a marketplace for users to sell online diaries as NFTs. This submission Phase-One displays a complete CRUD function where a user can create, read, update and delete. Next, connect the actual marketplace metaverse where users can discover other users' minted diaries as NFTs while allowing them to create, mint and list a diary of their choice as an NFT for sale.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "dear diary#@#@#dfx#@#@#motoko#@#@#react#@#@#procreate#@#@#web3#@#@#dear diary is the first decentralized market place that will allow users to sell their diaries as nfts. it is developed on web3 on the internet computer, motoko backend and react.js frontend.",
    "tags": [
      "dfx",
      "motoko",
      "react",
      "procreate",
      "web3"
    ]
  },
  {
    "id": "sustainations-dao",
    "name": "Sustainations DAO",
    "description": "The first SDG (Sustainable Development Goals) DAO on Dfinity. \n💚 SUSTAINATIONS is a global DAO of change-makers, and builders who work together to write a greener future for the Earth.",
    "image": "sustainations-dao.jpeg",
    "links": {
      "github": "http://github.com/triipme/sustainations_dao",
      "livePreview": "https://youtu.be/pe84UGSXOuk",
      "external": "https://supernova.devpost.com/submissions/329671-sustainations-dao",
      "otherLinks": [
        "http://sustainations.com/"
      ]
    },
    "submitterFirstName": "Hai",
    "submitterLastName": "Ho",
    "about": "Inspiration\n \n\n 8AM, GMT Aug 9th 2021, the world's largest ever report into climate change is published, setting out the stark reality of the state of the planet. The report \"is a code red for humanity\", says the UN chief.\n But scientists say a catastrophe can be avoided if the world acts fast. Echoing the scientists' findings, UN Secretary General António Guterres said: \"If we combine forces now, we can avert climate catastrophe. But, as today's report makes clear, there is no time for delay and no room for excuses.”\n \n\n Sustainations DAOis a humble effort to combine forces across the world to avoid the foreseeable climate catastrophe. We are travelers, engineers, makers, creators, business owners, students.. people who care about the planet. We are here to find the holy grail of the blockchain industry: sustainability, profitability and technology. \n \n\n What it does\n \n\n We are, at our heart, a global Decentralized Autonomous Organization with over 1,000 members. \n \n\n 🤝 We want to harness the potential of Dfinity’s Web3 as a force for achieving the United Nations' 17 Sustainable Development Goals. \n \n\n 🚀 To fund projects and govern our community activities, as well as co-own what we produce together, we use a blockchain-based token called $TIIM. With $TIIM, we can incentivize community participation and communal value creation. $TIIM is held by all members, ensuring that we are all committed to each other endeavors. \n \n\n 🌳 We all profit when we contribute to the group's efforts' success. As an involved and supportive community, this is a method of enhancing the value we bring to one another.\n \n\n How we built it\n \n\n We started with a Kickstarter for Sustainable Projects on Dfinity where members can contribute funds and vote to kickstart and execute great sustainable ideas. \n \n\n We will expand our DAO software to Project Management, Fund Management, Metaverse and Offline Refill Network for eco-products. \n \n\n Challenges we ran into\n \n\n We didn’t have enough time to execute our full vision of a DAO \n \n\n Accomplishments that we're proud of\n \n\n We have:\n \n\n \n\n Started a Refill Station Network with 20 retail stores for eco-products.\n Signed membership with 12 sustainable businesses \n Produced 9 podcasts with sustainable founders. link\n Deliver discount products and services for DAO members. \n \n\n \n\n What we learned\n \n\n People are looking for new way to work together to find solutions for SDG challenges instead of waiting for governments. \n \n\n What's next for Sustainations DAO\n \n\n To become the world’s biggest DAO on Sustainable Development Goals",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "sustainations dao#@#@#motoko#@#@#dfinity#@#@#the first sdg (sustainable development goals) dao on dfinity. \n💚 sustainations is a global dao of change-makers, and builders who work together to write a greener future for the earth.",
    "tags": [
      "motoko",
      "dfinity"
    ]
  },
  {
    "id": "octan-finance",
    "name": "Octan Finance",
    "description": "Bring UTXO-assets into ICP's DeFi ecosystem",
    "image": "octan-finance.png",
    "links": {
      "github": "https://github.com/Octan-Finance",
      "external": "https://supernova.devpost.com/submissions/327371-octan-finance",
      "otherLinks": []
    },
    "submitterFirstName": "Paven",
    "submitterLastName": "Thuat DO",
    "about": "Inspiration\n \n\n Inspired by ICP's Bitcoin Integration based on Chain-key cryptography and threshold ECDSA signature scheme, we aim to build the integrations (or bridges) from UTXO platforms, like Litecoin-LTC, Cardano-ADA, Dogecoin - DOGE, Bitcoin Cash - BCH, etc, to ICP. Furthermore, we will utilize ICP as a payment and DeFi platform for those crypto-currencies based on decentralized custody protocol (DCP). It is clear that DeFi application on the UTXO platforms is very poor, even zero, although their total market-capitalization is tens of billions USD. \n \n\n What it does\n \n\n The project aims to integrate Litecoin, Cardano, Dogecoin, Bitcoin Cash into the ICP system. Then, we will bring LTC, ADA, DOGE, BCH holders to a secure, scalable DeFi space based on ICP canisters, which they haven't ever experienced before, for example:\n \n\n \n\n Swap the assets for ICP or others on DEXes implemented on the ICP platform;\n Stake or lend the assets to earn interest;\n Make cross-payment between platforms;\n Moreover, DeFi, GameFi, Social-Fi developers on the ICP platform can utilize Octan's solutions (asset bridging, cross-chain payment) for their own applications.\n ## How we built it\n We use Bitcoin integration as a framework, take advances of threshold ECDSA, Bitcoin adapter implementations, then modify for new UTXO-chains.\n Firstly, we want to share knowledge about Bitcoin integration on ICP.\n This is a brief from https://wiki.internetcomputer.org/wiki/Bitcoin_integration\n The major features of Bitcoin integration:\n Canisters can have Bitcoin addresses (and therefore receive and hold bitcoin directly on the Bitcoin blockchain). (in progress)\n Canisters can access the UTXO set of Bitcoin addresses.\n Canisters can securely sign Bitcoin transactions. (in progress)\n Canisters can submit Bitcoin transactions to the Bitcoin network.\n \n\n \n\n The components:\n \n\n \n\n Bitcoin Adapter: connects directly to a predefined Bitcoin network from the config file and starts a local RPC node for listening requests from the canister. With this RPC server, the canister can fetch all blocks and send signed transactions through the Bitcoin adapter.\n \n\n \n\n Address Book: store Bitcoin network nodes from the config file\n Blockchain Manager: sync and process receive block from blockchain\n Blockchain State: Handle state, header, and fork chain\n Connection Manager: make connections, handle ping/pong nodes, and limit connections to the blockchain.\n Transaction Manager: get and send a transaction with raw data to the Bitcoin node.\n RPC Server: Listen to request from Canister. Handle block requests, and transfer signed transactions to Bitcoin Network.\n \n\n Bitcoin Canister: connects to the Bitcoin network through the Bitcoin Adapter. It fetches blocks and stores UTXO sets locally. So we can check the BTC Address balance or get address UTXOs in Canister locally without calling to Bitcoin Adapter\n \n\n \n\n UTXOs: Store all UTXOs for each Bitcoin Address from genesis in Canister. The StableBTreeMap implementation has been amazingly efficient in memory management.\n Transaction: Request replica with consensus mechanism to sign a transaction signature into transaction payload and transaction will be sent to Bitcoin Network through Bitcoin Adapter\n \n\n \n\n \n\n From this knowledge we're trying to make an integration for the Litecoin network. Almost all of the core features were written in Rust language.\n We would like to share some examples of the working process to integrate Litecoin into ICP  \n \n\n \n\n https://github.com/Octan-Finance/rust-litecoin/tree/litecoin-compatible This is a rust-bitcoin fork library for Litecoin network in rust language. It's a core library to work with the Litecoin network.\n https://github.com/Octan-Finance/dfinity-ic/tree/litecoin-demo IC Bitcoin Adapter fork. It's using above rust-litecoin library for communicate to Litecoin Network and fetch block, transaction to canister\n https://github.com/Octan-Finance/dfinity-litecoin-integration Canister Examples. Contains Rust example to receive, send transaction between canister wallet and any litecoin wallets. We are trying to implement ecdsa signing signature feature but we do not have enough time to do that.\n Demo Video: https://youtu.be/_HV36uoetGw\n \n\n \n\n Challenges we ran into\n \n\n \n\n New blockchain architecture\n New design concept of smartcontracts (canisters), i.e asynchronous DeFi\n New languages (Motoko, Rust) \n Lack of development tools compare to EVM-compatible blockchains\n \n\n \n\n No official documentation about threshold ECDSA usage\n Rust, Motoko CDK haven’t support system API on threshold ECDSA\n \n\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Modified Bitcoin integration for Litecoin\n Proposed a composable DeFi integration between ICP and UTXO-assets, visit the paper https://drive.google.com/file/d/1dz_0AMqoCzhAmEMFzi7U_8MMq56_ZIQD/view?usp=sharing\n Reuse mock ECDSA prebuild from https://github.com/ninegua/ecdsa_example in wasm\n \n\n \n\n What we learned\n \n\n \n\n We studied much about Internet Computer protocol and its implementation.\n Clearly understood the vision and architecture of ICP (Ex: the communication between canister by Wasm - ic0 module for system API)\n We learned Bitcoin integration and the capacity to extend on other UTXO-chains\n We learned the deployment process of an threshold ECDSA key (create, reshare as backup, enable sign) and distributed key generation protocol.\n \n\n \n\n What's next for Octan Finance\n \n\n \n\n We are going to complete the ECDSA signing feature and the testnet implementation of Litecoin integration.\n After that, we will find support/grant to build integrations with Bitcoin Cash, Dogecoin and Cardano.\n In parallel, for each integration, we will build DeFi canisters on ICP to utilize UTXO-assets. This aims to support the holders with DEX, lending and payment facilities.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko",
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "octan finance#@#@#motoko#@#@#rust#@#@#golang#@#@#bring utxo-assets into icp's defi ecosystem",
    "tags": [
      "motoko",
      "rust",
      "golang"
    ]
  },
  {
    "id": "tourapin",
    "name": "Tourapin",
    "description": "Vacation guides by your favorite travel influencers",
    "image": "tourapin.png",
    "links": {
      "github": "https://github.com/BreeDay/Tourapin",
      "external": "https://supernova.devpost.com/submissions/334356-tourapin",
      "otherLinks": []
    },
    "submitterFirstName": "Bree",
    "submitterLastName": "Day",
    "about": "Inspiration\n \n\n Wanting a central location for an amazing vacation experience.\n \n\n What it does\n \n\n Tourapin pairs travel influencers with travelers. since Tourapin is developed on Web3, influencers maintain ownership of their travel materials and have the option of getting ICP tokens from users wanting to view their guides.  \n \n\n How we built it\n \n\n Tourapin was built on the Internet Computer. Ideally, it would be written in Motoko but I was having issues developing with motoko so it is developed in Javascript. \n \n\n Challenges we ran into\n \n\n I had a few issues with the canisters and deploying the application to the IC. \n \n\n What's next for Tourapin\n \n\n Hopefully someone likes the idea and it can be turned into an actual thing.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "tourapin#@#@#motoko#@#@#web3#@#@#vacation guides by your favorite travel influencers",
    "tags": [
      "motoko",
      "web3"
    ]
  },
  {
    "id": "agracia",
    "name": "AGRACIA",
    "description": "AGRACIA- A DECENTRALISED AGRI SUPPLY CHAIN MECHANISM DAPP BUILD ON IC !!",
    "image": "agracia.png",
    "links": {
      "github": "https://github.com/SuperNovaHack/FRontenD-DEv-can",
      "livePreview": "https://gdzli-daaaa-aaaag-aanua-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/327192-agracia",
      "otherLinks": [
        "https://github.com/SuperNovaHack/SC-canister"
      ]
    },
    "submitterFirstName": "Bazinga",
    "submitterLastName": "!!",
    "about": "Inspiration\n \n\n As Today's World is filled with Prominent illicit trades, Unethical production practices, and fragile supply chains have put industries under immense pressure from customers and governments to follow sustainable production means. Industries are expected to be transparent in their functioning and enhance visibility at the operational and organisational levels.But 90% cases it is not happening.Textile and Clothing (T&C) industry is one such example that is facing serious issues due to volatile consumer demands, escalating competition, product recalls and counterfeits.But the biggest Under Reported Example is the \"AGRICULTURE(AGRI)\" Sector. It is further subjected to a strong criticism due to unfair labor practices and use of toxic materials, largely because of opaque supply chains. Catastrophic events in recent past have further intensified the demand and called for immediate actions. Implementing supply chain traceability has emerged as a possible solution that can help to solve these supply chain issues. Traceability, as defined in the United Nations Global compact and Business for Social Responsibility (2018) is “the ability to identify and trace the history, distribution, location and application of products, parts, and materials, to ensure the reliability of sustainability claims, in the areas of human rights, labour (including health and safety), the environment and anti-corruption”.\n NOW THIS CURRENT MASSIVE ISSUE (EXPLAINED ABOVE) INSPIRED US TO WORK ON IT AND PROVIDE A SOLUTION IN THE FORM OF \"AGRACIA\" FUELED ON IC NETWORK\n \n\n What it does\n \n\n AGRACIA is a TRACEABILITY AGRI SUPPLY CHAIN MECHANISM working on top of IC Network. This Dapp works with the help of Traceability tool like QR-Scanner/Canister Logics which can scan almost all the activity of the AGRI-PRODUCT from [INITIAL POINT(Farmer Buying Seeds)] to the [END POINT(Consumer Plate)] {Please Refer above Figure for Clear Understanding} on Chain with NO Chance of Data Tampering by anyone.\n AGRACIA is not only a TRACEABILITY SOLUTION (TRACK | QR CODE) but also giving Stakeholder different options to Explore like :\n DEFI ----> AS IT IS WORKING AS A WALLET/FAUCET TO CLAIM AGRACIA(AGR) TOKEN AND CAN \n  FURTHER REDEEM TO BUY NFTs AND TRANSFER FUNCTIONALITIES.\n NFT ----> DIFFERENT STAKEHOLDERS ON CHAIN CAN REDEEM AGRACIA(AGR) TOKEN AND CAN \n  BUY/SELL AND DISCOVER NFTs ON AGRACIA | NFT MARKETPLACE PLATFORM .\n DAO----->DIFFERENT STAKEHOLDERS CAN FORM A GUILD BY STAKING THEIR AGRACIA(AGR)\n  TOKENS AND CAN TAKE IN DECISION MAKING OF THE FUNCTIONALITY OF THE DAPP.\n  (RIGHT NOW THIS FUNCTIONALITY IS IN WORKING PHASE).\n \n\n How we built it\n \n\n As this Dapp is 100% working on \"IC NETWORK\" meaning its (FRONTEND/BACKEND IS ON IC CHAIN with Different Canisters).We programmed our Dapp's Frontend by Using React.jsx and put it inside asset canister and backend canister with motoko languauge. Refer the Links for More information.\n \n\n Challenges we ran into\n \n\n We Ran into alot Number of Challenges\n 1)New framework to Grasp.\n 2)Team Working Hours.\n 3)Language Barriers.\n 4)Bug Fixing Issues in Mokoto.\n  But Huge Shout Out to Dfinity Foundation Discord/Detailed Documentation/Members to stick with us in Resolving the issues\n \n\n Accomplishments that we're proud of\n \n\n We are proud of many accomplishments like \n 1) Learning a New Ecosystem of IC which was fun.\n 2) Working with Different Mind set people in a Team(As we are 2 member :P)\n 3)Doing Something worthful for a AGRI-COMMUNITY(SOCIAL) which facing alot Of DISTRESS right now.\n \n\n What we learned\n \n\n Learned a lot number of this like working in silos to accomplish the goal, to grab opportunities of learning new things in a Quick span of time.Working with different environment workforce and from acquit-ant to become good friends. \n \n\n What's next for AGRACIA\n \n\n WE ARE LOOKING FORWARD TO PROGRESS OUR WHOLE DAPP ON IC MAINNET AND INCLUDE MORE FUNCTIONALITY AND INTEGRATING FRAGMENTS.\n THANK YOU.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "agracia#@#@#motoko#@#@#canister#@#@#react#@#@#javascript#@#@#ic#@#@#agracia- a decentralised agri supply chain mechanism dapp build on ic !!",
    "tags": [
      "motoko",
      "canister",
      "react",
      "javascript",
      "ic"
    ]
  },
  {
    "id": "ic-birds",
    "name": "IC Birds",
    "description": "Play with you IC Birds nfts on our decentralized games. Collect tokens and improve your birds skills to beat your best score and grind the leaderboard !",
    "image": "ic-birds.png",
    "links": {
      "github": "https://github.com/leo-ship-it/icbirds-public",
      "livePreview": "https://yqtpa-pqaaa-aaaan-qadba-cai.ic0.app/home",
      "external": "https://supernova.devpost.com/submissions/328423-ic-birds",
      "otherLinks": []
    },
    "submitterFirstName": "IC",
    "submitterLastName": "Bird",
    "about": "Play with you IC Birds nfts on our decentralized games. Collect tokens and improve your birds skills to beat your best score and grind the leaderboard !\n \n\n Inspiration\n \n\n We took direct inspiration from one of the most viral and addictive games : flappy bird. This was the original inspiration even though we plan to make other games. Also we were inspired by some nft base games on other blockchain such as cyberkongz on ethereum.\n \n\n What it does\n \n\n We are building a place where you can play with your bird nfts and have fun while earning tokens to unlock and improve your bird competences. For now we have a flappy bird like game with a leaderboard system. Owning birds gives you the right to claim tokens that you will be able to spend in the store in many different ways.\n You can now play with your birds on icbirds. \n \n\n How we built it\n \n\n We built the frontend using react framework, the game has been coded using p5js. The score system has been built using motoko. The token and the nft storage canisters have also been built using motoko.\n \n\n Challenges we ran into\n \n\n We ran into a lot of challenges but one of the biggest ones is to make the game available on mobile as there are currently not a lot of examples of mobile apps using the Internet Computer. Another big challenge that we had to face was the design of our birds. In the first time we naively made a design that was really close to Flappy Bird which was not viable for the longevity of the project. So we had to redesign the entire collection which was really challenging at the time.\n \n\n Defeat cheating\n \n\n Defeating cheating is one of the most important games when building a competitive game. For now we have a system of keys to make sure that not anyone can update their score with a simple call to the score API but it's not ideal. For now as we don't have any rewards for having a great score there are no incentive to cheat. Also, the token is rewarded daily just by connecting to the game, the idea is to make players come back every day to claim their tokens so there is no room for cheating to claim more tokens. Our dip20 canister also checks if your bird has already claimed its reward so you can’t reset your claim by transferring your nft from one wallet to another.\n \n\n Accomplishments that we're proud of\n \n\n There are a few elements in this project that we are proud of. The first one is the collection of nfts, we are really happy with our design. Also I want to note that we’re one of the rare projects to have fully animated art. Secondly, we’re proud of the game we have built, it’s exactly how we wanted it. And finally we are glad of the community that we’ve built and all the people that are playing our game daily trying to beat their high score and grind the leaderboard. And, in the name of the IC Birds team we are proud of the project overall.\n \n\n What's next for IC Birds\n \n\n We have a lot coming next for IC Birds. First of all we are currently working on two new fun games. They are in the same spirit as the first one : fun and easy to play games. We also want to make a mobile application that would be available on android and IOS. The Internet Computer has the advantage compared to other blockchains to be forgotten. We also plan to continue improving our dapp. The very next feature that will be released is the store where you will be able to spend tokens.\n \n\n The Team\n \n\n We are currently a team of three french engineers with various domains of expertise working on this project.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko",
      "javascript",
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ic birds#@#@#motoko#@#@#react#@#@#p5js#@#@#python#@#@#javascript#@#@#typescript#@#@#rust#@#@#css3#@#@#html5#@#@#play with you ic birds nfts on our decentralized games. collect tokens and improve your birds skills to beat your best score and grind the leaderboard !",
    "tags": [
      "motoko",
      "react",
      "p5js",
      "python",
      "javascript",
      "typescript",
      "rust",
      "css3",
      "html5"
    ]
  },
  {
    "id": "candid+",
    "name": "Candid+",
    "description": "Candid+ is the better Candid UI with test cases and logging. To build the hub for IC developers and enterprises, we will integrate the entire lifecycle of the development for canisters.",
    "image": "candid+.jpg",
    "links": {
      "github": "https://github.com/Astrapolis/ICHub",
      "livePreview": "https://4cmdj-pqaaa-aaaal-qa62a-cai.ic0.app",
      "external": "https://supernova.devpost.com/submissions/330304-candid",
      "otherLinks": [
        "http://hub.icp.xyz"
      ]
    },
    "submitterFirstName": "IC",
    "submitterLastName": "Hub",
    "about": "Inspiration\n \n\n \n\n Candid UI, the most used tool when developing IC smart contracts, is handy and simple. However, when we are actively testing or inspecting the canisters, oftentimes we have to repetitively type the canister ids, method names, and parameters. In addition, the current setup makes the testing irreproducible, which slows down the overall development process. Learning from our own development experience, we decided to make up the missing features of candid UI to allow developers to subscribe to canisters, store history calls, and compose test cases entirely on IC.\n \n\n \n\n What it does\n \n\n \n\n Candid + allows the users to keep track of the canisters they wish to test or inspect by simply subscribing through the canister ids. Once subscribed, users can call the methods on those canisters just like they do with candid UI, while candid+ will keep track of all the call histories. Those canister calls can be organized as test cases to allow more comprehensive testing and reproducible debugging. Developers can choose to share those test cases for better development transparency. To be noticed, all data is stored on IC blockchain with complete permission management.\n Subscribe Canister => Call Methods => Compose Test Cases (Entirely on IC)\n \n\n \n\n How we built it\n \n\n \n\n Candid+ is decomposed into 3 parts. \n \n\n \n\n The hub: keeps track of candid+ profiles registered\n Candid+ backend: keeps track of all user history such as canisters subscribed, canister calls, and test cases. It can either be created through shared canisters controlled by us or dedicated canisters owned by users.\n Candid+ frontend: The GUI for users to test and inspect their canisters\n \n\n \n\n \n\n Challenges we ran into\n \n\n \n\n Permission management: users should be able to keep their profile either private or public\n Multiple profiles on one canister: multiple candid+ profiles can be cached on the same canister.\n User profile on the dedicated canister: users should be able to create their own Candid+ canister and keep full control over it.\n Scalability: how will we manage all the candid+ profiles scattered among multiple canisters.\n Local Testing: how developers can use Candid+ for local testing \n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Our goal is to simplify the development experience on IC and makes testing reproducible and sharable. In the meantime, we are dedicated to ensuring users take full control of their profile privacy and data ownership. With the vision of building true web3 DApps, we support resharing the test cases and user profiles to help developers and investors better understand and inspect the canisters.\n \n\n \n\n What we learned\n \n\n \n\n IC, as a universal smart contract platform, is revolutionary for developers even to build development tools. By bringing the development tools onchain, smart contracts development is now completely transparent. With the data privacy setup of IC, we can build the tools with comprehensive permissions for professionals and enterprises who wish to take full control of their data.\n \n\n \n\n What's next for Candid+\n \n\n \n\n Candid+ is the first application of ICHub, the epic center for IC developers.\n Candid+ Chrome App: it will be a simple Chrome app that allows developers to test their canisters locally without connecting to the IC mainnet\n Geek Space: By integrating with canisters, test cases, and project descriptions, developers can demonstrate and discuss their canisters and code for coworking and reproducible debugging.\n Canister Manager: tools like create canister, install code, delete, charge cycles, etc\n Canister Monitor: Monitoring the canister for module hash changes, cycle balance, memory usage, etc.\n Canister Market Place: Enable canisters to stake neurons and trade canisters like NFTs.\n \n\n \n\n Contact\n \n\n \n\n Website: hub.icp.xyz / https://4cmdj-pqaaa-aaaal-qa62a-cai.ic0.app\n Twitter: https://twitter.com/ichub_icp\n Youtube: https://www.youtube.com/channel/UCETGcN8o4e3DNaUDMVS0OVQ\n Vimeo: https://vimeo.com/manage/videos/721916500\n Github: https://github.com/Astrapolis/ICHub\n Medium: https://medium.com/@ichub2022",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "candid+#@#@#rust#@#@#react#@#@#candid+ is the better candid ui with test cases and logging. to build the hub for ic developers and enterprises, we will integrate the entire lifecycle of the development for canisters.",
    "tags": [
      "rust",
      "react"
    ]
  },
  {
    "id": "honest-ticket-machine",
    "name": "Honest Ticket Machine",
    "description": "We’re building the tools to empower creators to work without fear of copyright and encourage collaboration rather than competition over IP.",
    "image": "honest-ticket-machine.png",
    "links": {
      "github": "https://github.com/Amata-World-Hackathons/honest-ticket-machine",
      "livePreview": "https://mymdv-biaaa-aaaan-qam2q-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333151-honest-ticket-machine",
      "otherLinks": []
    },
    "submitterFirstName": "Bryan",
    "submitterLastName": "Yap",
    "about": "Inspiration\n \n\n Every creators nightmare is dealing with copyright. There are so many nuances and dire consequences even to those who unintentionally bring in content. Creators and brands are growing further apart as a result, the pace of creativity simply cannot be contained by the legal frameworks that brands use today to protect their content.\n \n\n In the early days, Twitch and YouTube were platforms where creators could truly thrive. But as these platforms matured, they needed to comply with regulations and it began enacting harsh rules to all its users. This alienated or even destroyed careers of many creators. This was inevitable, having these rules retro-fitted at the end would not lead to the best outcome. We think a new approach is needed, one that factors in the legalities from the start.\n \n\n What it does\n \n\n The Honest Ticket Machine is an event ticketing platform that was built with content sharing from the ground-up. Using blockchain technology, we can eliminate the costly intermediaries to provide a faster, transparent and secure process to securing usage rights.\n \n\n The platform currently supports a limited number of features. Creating ticketed events and linking them to “Universes”, which is our mechanism of attributing creative content. The platform will automate as much of the legal obligation as possible, with proper attribution and compensation built into the platform. This will free creators from having to worry about legal problems and simply focus on working within the platform to create their own experiences.\n \n\n We hope that by providing these tools, we can support a new kind of creator economy where creators and brands can work closely together at scale.\n \n\n How we built it\n \n\n Everything runs on-chain on Dfinity as a small collection of canisters. The frontend canister services the static assets and the backend canister contains all the business logic.\n \n\n We managed to fit our own preferred frontend pipeline into the asset canister, a testament to how flexible the dfinity tooling is. This allowed us to provide a rich user experience, with everything running on-chain.\n \n\n The backend was simple, we kept everything in the canister and did very little outside it. There is room for more optimisation but we kept that out of scope of the hackathon.\n \n\n Challenges we ran into\n \n\n There were a number of challenges we ran into:\n \n\n \n\n Couple of bugs sent us chasing red herrings, which took a lot of time. For example, the internet identity replica and mainnet had a bug where it couldn’t find the canister ID when visiting to authorize an app.\n It was very easy to make transfers without the users consent, so we didn’t feel it would be safe to keep this functionality live. Ideally there would have been a built-in functionality on nnjs to let have users confirm their purchases.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n The small amount of time we took to bring this project to life, we only started in earnest 5 days ago. The maturity of the Dfinity ecosystem really helped in this regard.\n \n\n \n\n What we learned\n \n\n \n\n Dfinity and it’s tooling is really mature, although not perfect, it comes really close to the experience of working with platforms like AWS/Serverless for simple apps\n A testnet is really useful to provide live demos that don’t cost real money\n Having a local Internet Identity and Ledger running was like a godsend\n \n\n \n\n What's next for Honest Ticket Machine\n \n\n We have a few things on the agenda:\n \n\n \n\n Optimise the app on the mainnet (there are a few bugs with Next.js and the IC behaviour)\n Legal consultation with lawyers\n Build more control over terms & clauses\n Use open-source tools like https://accordproject.org/ or https://www.openattestation.com/ to strengthen the legal documents produced on the platform\n Build a mobile app\n Support FIAT currencies\n Support assets apart from event tickets like digital artwork or physical merchandise",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "honest ticket machine#@#@#motoko#@#@#javascript#@#@#react#@#@#next.js#@#@#tailwind#@#@#dfinity#@#@#we’re building the tools to empower creators to work without fear of copyright and encourage collaboration rather than competition over ip.",
    "tags": [
      "motoko",
      "javascript",
      "react",
      "next.js",
      "tailwind",
      "dfinity"
    ]
  },
  {
    "id": "splash",
    "name": "Splash",
    "description": "Figma for Web3",
    "image": "splash.png",
    "links": {
      "github": "https://github.com/gupnik/splash",
      "livePreview": "https://d6uqw-tyaaa-aaaap-aag5q-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/331672-splash",
      "otherLinks": []
    },
    "submitterFirstName": "Nikhil",
    "submitterLastName": "Gupta",
    "about": "Inspiration\n \n\n Tools like Figma, Canva and Adobe XD have become extremely popular recently as they empower novice users to express their creativity. They have become the standard tools for GenZ content creators by providing a plethora of pre-built templates that could be mixed and matched in ingenious ways. \n \n\n Having spent around 6.5 years at Adobe, I feel that a project created from the ground up that eliminates the need for a central authority, thus reducing the fees by exorbitant amounts, should see an incredible growth if executed correctly.\n \n\n What it does\n \n\n This project intends to become a similar tool for web3 audiences where people could browse through a vast library of design templates minted as NFTs and use them to power their creations in a decentralized manner. The creators of the ingredient NFTs are automatically attributed respective shares whenever the artwork is sold on the platform. This fosters a creator economy that flourishes without the need for a central authority.\n \n\n How we built it\n \n\n The project involves the following components:\n \n\n \n\n A rust contract that stores the user projects in their entirety secured by Internet Identity authentication \n A WebAssembly-powered SDK enables users to draw shapes and change styles with the ability to add text and images coming soon.\n A react-based frontend that interacts with the smart contracts and WASM SDK to provide a real-time canvas on-chain\n \n\n \n\n Challenges we ran into\n \n\n Due to the larger size of the WASM SDK, the service worker could not load it correctly.\n \n\n Accomplishments that we're proud of\n \n\n A highly optimized version of the WASM Renderer that runs entirely on IC to support real-time modifications with extensibility\n \n\n What we learned\n \n\n This was our first time building on IC which was one of the smoothest experiences so far.\n \n\n What's next for Splash\n \n\n \n\n Add the ability to load images and text to make it a complete alternative to Figma. \n Add the ability to buy NFTs of pre-built templates and use them within the canvas to create a self-sufficient creator economy",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "splash#@#@#webassembly#@#@#rust#@#@#c++#@#@#javascript#@#@#react#@#@#figma for web3",
    "tags": [
      "webassembly",
      "rust",
      "c++",
      "javascript",
      "react"
    ]
  },
  {
    "id": "icapps",
    "name": "icApps",
    "description": "Internet Computer projects community portal 🌀",
    "image": "icapps.png",
    "links": {
      "github": "https://github.com/tomkoom/icApps",
      "livePreview": "https://n7ib3-4qaaa-aaaai-qagnq-cai.raw.ic0.app/#/",
      "external": "https://supernova.devpost.com/submissions/328318-icapps",
      "otherLinks": []
    },
    "submitterFirstName": "Tomash",
    "submitterLastName": "Sugint",
    "about": "About the project\n \n\n icApps is a directory of applications and projects built on the Internet Computer network. The main purpose of the web-app is to simplify the search and provide information about the projects that run on the IC network.\n \n\n What it does\n \n\n The main goal the project is to be a common place to explore projects on the IC, along with providing information about the current NFT collections, upcoming NFT sales and other events. \n \n\n Who this project is for\n \n\n Basically this project is for everyone interested in the IC, those who don't know much about it yet, devs who would like to see what has been already built.\n \n\n Inspiration\n \n\n There are many sources of inspiration and references for the icApps. I initially was inspired by the design and idea of the rawg.io, it is a large game database. Conceptually icApps is in some ways similar to dappradar.com, dap.ps, ethereum.org/en/dapps. \n \n\n How we built it\n \n\n Initially it was a simple one-page site in the earliest days of the Internet Computer Genesis launch. Since then it has developed into a full-fledged web-app with a large community of followers.\n \n\n Accomplishments that we're proud of\n \n\n There has been a lot of positive feedback from the community. The website is updated daily & many people use website to track new apps and upcoming NFT collections. \n \n\n What's next for icApps\n \n\n There are a lot of modules that can be added to the platform. Currently icApps uses web2 services to manage CRUD operations and host database. The next step is to develop the backend logic & and manage database from the canister. \n \n\n Contact\n \n\n \n\n Website: https://n7ib3-4qaaa-aaaai-qagnq-cai.raw.ic0.app\n Twitter: https://twitter.com/DfinityApps\n \n\n \n\n ♾️",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icapps#@#@#react#@#@#react.js#@#@#javascript#@#@#redux#@#@#internet computer projects community portal 🌀",
    "tags": [
      "react",
      "react.js",
      "javascript",
      "redux"
    ]
  },
  {
    "id": "open-free-dollar-(ofd)",
    "name": "Open Free Dollar (OFD)",
    "description": "Open Free Dollar (OFD) enables  financial inclusion and trade to billions of users while enabling developers to run millions of Dapps on the internet computer .",
    "image": "open-free-dollar-(ofd).png",
    "links": {
      "github": "https://github.com/Open-Free-Dollar-OFC",
      "external": "https://supernova.devpost.com/submissions/330336-open-free-dollar-ofd",
      "otherLinks": []
    },
    "submitterFirstName": "KIZZA",
    "submitterLastName": "FREDRICH",
    "about": "Inspiration\n \n\n Open Free Dollar is the first decentralised stable coin that will enable billions of users to trade in the open market, and millions of developers to run Dapps on the internet computer.\n \n\n Our vision is to ensure financial equality for everyone despite race, colour, nationality and place.\n We provide financial inclusion underserved and unserved while protecting the environment against climate change.\n Its not about us its about people.\n Goals\n To reduce economic inequality.\n To bank the billions that are unbanked.\n To improve lifestyle of both the developers and users.\n To preserve and protect the environment.\n To protect users from overcharges by Daaps and developers.\n To power and grow the internet computer community.\n To make Daap development more easier and simplified.\n To enable Minimal gas Charges.\n To Combat Climate Change.\n To make crypto more user loved and trusted.\n To make crypto mainstream.\n \n\n Problem\n The internet Computer doesn't yet have any stable coin in place and does not have plans to integrate one in its road map and yet stable coins are essential for the Internet Computer ecosystem, especially in DeFi and NFTs\n ICP is still volatile and cannot be used in the open market and requires cycles to power canisters.This whole idea is still not clear .\n Cycle is primarily used to power canisters and cant be used for other uses.\n Proof of work consensus is destructive to the environment.\n Cryptocurrencies are volatile and cant be used in our daily lives.\n Inflation is on a rise in many countries because of the war in Ukraine and the covid19 pandemic.\n \n\n What it does\n \n\n Open Free Dollar (OFD) enables _financial inclusion and trade _ to billions of users while enabling developers to run millions of Dapps on the internet computer while providing. \n Its make daily use of cryptocurrencies in our lives possible since it is not volatile.\n It reduces all forms of financial inequalities and imbalances set government policies.\n Open Free Dollar (OFD) fights climate change through emitting zero carbon and through donating 10% of the token to the plant million tree campaign to save the planet.\n Fights poverty by giving 20% to the very poor and needy in the poorest nations e.g giving basic need to refugees in Ukraine and feeding malnourished children in Africa.\n Removes the risk of inflation, inflation tax e.t.c because \n \n\n Its solves some of the worlds biggest problems\n \n\n How we built it\n \n\n We built it on the internet computer using Motoko, Rust and Candid\n \n\n Challenges we ran into\n \n\n Time became an issue as the deadline approached. \n We were only two on the team. We need more team members.\n \n\n Accomplishments that we're proud of\n \n\n A working coin.\n An excellent team of two people.\n We submitted in time. \n \n\n What we learned\n \n\n Motoko is faster in-terms of development .\n Network charges are less to run canisters.\n Internet computer is the best infrastructure to implement this solution now.\n \n\n What's next for Open Free Dollar (OFD)\n \n\n Genesis. \n Implementation of a reserve.\n Implementation of a governance token.\n Listing on different exchanges.\n Automating the backup Mechanism.\n Here We Come",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "open free dollar (ofd)#@#@#motoko#@#@#candid#@#@#rust#@#@#open free dollar (ofd) enables  financial inclusion and trade to billions of users while enabling developers to run millions of dapps on the internet computer .",
    "tags": [
      "motoko",
      "candid",
      "rust"
    ]
  },
  {
    "id": "ceto",
    "name": "Ceto",
    "description": "The first order book trading platform of fractional noun-fungible tokens(F-NFTs) and a professional marketplace for crypto collectibles.",
    "image": "ceto.jpg",
    "links": {
      "github": "https://github.com/Ceto-Labs",
      "livePreview": "https://4jz7p-7yaaa-aaaai-qhobq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326863-ceto",
      "otherLinks": []
    },
    "submitterFirstName": "Ceto",
    "submitterLastName": "Labs",
    "about": "Inspiration\n \n\n As Web3.0 continues to evolve, the launch of Dfinity in May, 2021 has offered more possibilities in the entire ecosystem. The innovative network not only supports storage and computing but also provides the front-end and back-end operating environment, which is not available in development on other public chains, meanwhile ensuring the true decentralization from the underlying facilities. In addition, its anti-Gas-fee mechanism and MPC multi-party computation encryption protocol are leading innovations in the industry, better guaranteeing data and practicality.\n As illustrated above, we believe that it’s a good opportunity for Ceto to well participate in the IC ecosystem and become an important member in the trading sector, so we are determined to build the first decentralized order book trading platform on IC.\n Different from existed platforms built on other chains, all data of Ceto is kept on IC network, which is completely decentralized and can achieve a second-level feedback.\n \n\n What it does\n \n\n Fungible Token Tradings：Order Book—Limit, Market Order (upcoming)\n Fractionalization of Crypto Assets: Fractionalize the non-fungible token into several fungible tokens representing partial ownership of the original asset \n \n\n In general, Ceto supports transactions through multiple wallets and a variety of standards, providing users with unlimited trading options; at the same time, it also presents the trading interface in the form of an order book, offering users a more intuitive display of data. Our ultimate goal is to create a decentralized, secure, transparent and unlimited trading platform for all users.\n \n\n How we built it\n \n\n We are a dynamic startup team and our core developers all have extensive project development experience and have been involved in the blockchain industry since early on. Ceto is our first Dex project on the IC platform.\n \n\n We use motoko and rust in back-end development, JavaScript and React Architecture in front-end development.\n \n\n Current Standard Supported:\n 1) Fungible Token Standard Supported: DIP 20, ICP Standard, IS20(under development), more to come in near future;\n 2) Order Book Trading: FCE/WICP, BON/WICP, ckBTC/WICP(upcoming), XTC/WICP, more to arrive in near future;\n 3) F-NFT: Fractionalization of NFT\n 4) NFT Standard Supported: C3 Standard, DIP 721, more to arrive in near future;\n 5) Wallet Supported: Internet Identity, Stoic, Plug, Infinity Wallet\n \n\n Challenges we ran into\n \n\n It takes us a long time to understand IC ecological features, such as chain-key technology, Internet Identity Authentication System, canister, NNS governance, motoko, etc. Other obstacles we encountered are as follows:\n \n\n Atomicity Problem: IC network lacks some partial atomicity due to its own characteristics, and we ended up borrowing the Web2 solution to fix this sort of problems.\n \n\n Storage Problem: Based on the characteristics of IC canister, the runtime memory is separated from the stable memory, we developed a rust version of the bucket package according to the system api, which can be more convenient to use the large-capacity stable memory in the canister.\n \n\n Order Book Transactions Problems: Canister upgrade data security issues, canister user hierarchical management, log storage issues, etc.\n \n\n Transaction Speed Issues: Due to the consensus mechanism of the IC network, the completion of a transaction may lead to several times of across-canister calls, each call will consume a certain amount of time which makes the overall transaction TPS lower.\n \n\n Token Standard Problems: As a DEX on IC, we are a bit confused about the token standards in the ecosystem since the standards vary, eg., DIP20, IS20, etc. It wil be better to see a offcial standard on IC avoiding inconvenience.\n \n\n Accomplishments that we're proud of\n \n\n Ceto is the only order book trading platform that enables front-end and back-end deployed fully on chain among the the entire ecosystem.\n \n\n FCE/WICP Trading\n Ever since the launch on Feb.21, 2022, Ceto has accumulated over ＄400,000 trading volume, 15+ partners, 20k+ community members and awarded 5k grant by Dfinity. \n \n\n Our Team has been actively engaging in the development of IC ecosystem and reported a critical Cycle Balance Underflow Incident. https://forum.dfinity.org/t/cycle-balance-underflow-incident-retrospective-friday-april-1st/11908?u=goose\n \n\n What we learned\n \n\n 1) Deployment and management of canisters on the IC network\n 2) Authentication mechanism, NNS, etc. \n 3) Development process of DeFi projects on IC network\n \n\n What's next for Ceto\n \n\n 1) Enrich trading pairs \n 2) Access to ckBTC and ETH token\n 3) Listing other valuable tokens on IC: XTC, OGY, etc.\n 4) NFT fragmentation service\n 5) Staking service \n 6) Explore DAO governance\n \n\n Overall, in a foreseeable future, Ceto will develop a wallet integration process to facilitate smooth integration to all new wallets, and also specify token listing procedure so that the listing can be done independently by the project without much involvement of Ceto team. More importantly, all codes will be open-source.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust",
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ceto#@#@#rust#@#@#motoko#@#@#javascript#@#@#react#@#@#golang#@#@#the first order book trading platform of fractional noun-fungible tokens(f-nfts) and a professional marketplace for crypto collectibles.",
    "tags": [
      "rust",
      "motoko",
      "javascript",
      "react",
      "golang"
    ]
  },
  {
    "id": "symposium-futura",
    "name": "Symposium Futura",
    "description": "a community owned blog that curates and incentivizes exceptional content on philosophy, scientific inquiry, and the future of tech",
    "image": "symposium-futura.png",
    "links": {
      "github": "https://github.com/mourginakis/symposium_futura",
      "livePreview": "https://mzgdj-vqaaa-aaaag-qanaa-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/330681-symposium-futura",
      "otherLinks": []
    },
    "submitterFirstName": "Ioannis",
    "submitterLastName": "Mourginakis",
    "about": "Inspiration\n \n\n \n\n Inspired by intellectual blogs that explore high level scientific inquiry (LessWrong, Gwern, SlateStarCodex)\n Symposium Futura's goal is to open the blog to the community (much like Lesswrong has done), to allow any user to create topics or posts, except we plan to implement a financial incentivization system using tokenomics to incentivize exceptional content.\n \n\n \n\n What it does\n \n\n \n\n Allows each user their own profile\n Allows users to post and read content to the site\n \n\n \n\n How we built it\n \n\n \n\n Built with React, a minimal css framework called skeleton, and typescript\n \n\n \n\n Challenges we ran into\n \n\n \n\n Learning unfamiliar technologies (react, typescript, motoko) within the allotted timeframe\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n The site aesthetic, particularly the animations.\n The vision: site of community sourced content that has a financial incentive behind it.\n \n\n \n\n What we learned\n \n\n \n\n Simple is always better! \n Minimum viable product first, then build iteratively on top of it!\n \n\n \n\n What's next for Symposium Futura\n \n\n \n\n overhaul frontend with clojurescript, reagent-react, and tailwind\n \n\n \n\n more elegant, efficient and maintainable code\n add post archival system, sort by tags, date, author\n edit posts, create comments\n more fleshed out user profiles and UI\n add sublime graphics and animations\n \n\n introduce tokenization mechanics\n \n\n \n\n readers/authors can prompt certain posts, or their own posts\n readers can add cash bounty prizes to posts\n post voting for most profound content\n tipping mechanism for exceptional content",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "symposium futura#@#@#motoko#@#@#typescript#@#@#react#@#@#css3#@#@#a community owned blog that curates and incentivizes exceptional content on philosophy, scientific inquiry, and the future of tech",
    "tags": [
      "motoko",
      "typescript",
      "react",
      "css3"
    ]
  },
  {
    "id": "icstable",
    "name": "ICStable",
    "description": "DUSD: A stablecoin on IC",
    "image": "icstable.png",
    "links": {
      "github": "https://github.com/iclighthouse/ICStable",
      "livePreview": "https://pd5s3-6aaaa-aaaaj-aincq-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/329749-icstable",
      "otherLinks": [
        "https://youtu.be/8cSUJ_FffJo"
      ]
    },
    "submitterFirstName": "William",
    "submitterLastName": "Simpson",
    "about": "Inspiration\n \n\n In the cryptocurrency space, the monetary value comes from collateral, not credit. The overcollateralization mechanism used by MakerDAO has demonstrated its staying power, so we adopted the overcollateralization model as well.\n \n\n What it does\n \n\n ICStable is an overcollateralized stablecoin protocol that supports multiple collateral portfolios. Collateral is DRC20 or DIP20 standard tokens, including ICP (wrapped), BTC (wrapped), ETH (wrapped), Cycles (wrapped), ICL, and assets added through governance.\n \n\n \n\n How we built it\n \n\n ICStable supports multiple assets as collateral, with ICP as the primary collateral, and collateral asset types can be added through governance. Borrowers create DUSDs by depositing collateral and hold debt positions.\n ICStable accepts ICOracle's price feed service, which is a decentralised Oracle smart contract. \n ICStable's risk control rules are that the collateral ratio for debt positions need to be kept above the liquidation line (minimum collateral ratio) and if the collateral ratio falls below the liquidation line, automatic liquidation will occur. The liquidation process will start by selling the collateral through Dex and if Dex does not have sufficient liquidity, it will be exchanged for DUSD through the system liquidity pool. The system liquidity pool is created by the Liquidity Provider of Last Resort (LPOLR) by adding DUSD and they have the opportunity to buy the collateral at a discount.\n ICStable has designed mechanisms to anchor 1DUSD=1USD, including, 1) arbitrage mechanism and 2) price change automatic feedback mechanism (PCAFM). \n \n\n Challenges we ran into\n \n\n (1) Lack of crypto assets on the IC network; \n (2) High price volatility of ICPs; \n (3) Automated risk control requires smart contracts to support atomisation.\n \n\n Accomplishments that we're proud of\n \n\n ICStable is the first stablecoin project on IC and is currently in internal testing.\n \n\n What we learned\n \n\n The monetary value comes from collateral, not credit.\n Risk cannot be eliminated, but can only be transferred through incentives.\n \n\n What's next for ICStable\n \n\n The next step is to improve our risk control system.\n In addition, we plan to support more collateral and increase its liquidity.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icstable#@#@#motoko#@#@#dusd: a stablecoin on ic",
    "tags": [
      "motoko"
    ]
  },
  {
    "id": "icland",
    "name": "ICLand",
    "description": "ICLand powers tokenized communities by connecting web3 identities to social spaces & delivering key token data to communities. First tools: Discord token holder verification; sales & listings bot.",
    "image": "icland.png",
    "links": {
      "github": "https://github.com/renartlabsicp",
      "livePreview": "https://kwuck-oaaaa-aaaad-qcsja-cai.ic.fleek.co/",
      "external": "https://supernova.devpost.com/submissions/334115-icland",
      "otherLinks": []
    },
    "submitterFirstName": "Renaissance Art",
    "submitterLastName": "Labs",
    "about": "What it does\n \n\n ICLand powers ICP tokenized communities by connecting web3 identities to social spaces & delivering key token data to communities.\n \n\n The first tools offered are:\n -Discord token holder verification\n -Sales & listings Discord bot\n \n\n Projects will be able to acquire access to the tools by holding ICLand’s required NFT.\n \n\n Discord Token Holder Verification\n \n\n The tool provides holder roles across all Discord servers for token holders of NFT collections or similar ICP tokenized communities integrated with ICLand. Token holders only need to connect their Discord accounts and wallets or Internet Identity to ICLand’s interface a single time. The tool will also offer further customization for holder-specific roles.\n \n\n Sales & listings Discord bot\n \n\n The ICLand Discord bot creates and updates channels with new NFT token listings and sales.\n \n\n Integration Process\n \n\n To be made available during beta, any project will be able to integrate ICLand by acquiring the required NFTs by ICLand and connecting their wallets and Discord handles to ICLand. Once done, they will be able to add the ICLand bot to their Discord server and finish the integration.\n \n\n Inspiration\n \n\n Tokenized communities in the IC ecosystem are destined to bloom with the growth of NFTs and fungible tokens. This creates the need for gated-social spaces and for communities to stay updated with the market activity of their tokens.\n \n\n Discord remains the preferred platform for social spaces of tokenized communities across all blockchains. In more mature markets such as Ethereum and Solana, most projects use third-party solutions to verify the holder status of members. This allows gated channels and other social spaces exclusive to token holders, polling holders for matters that can range from governance to trivial topics, or simply segmenting members. In most cases, projects rely on third-party solutions (e.g. collab.land) which are often more convenient and cheaper than developing a verification system in-house.\n At the same time, communities often desire to stay updated with the market activity of their tokens. A Discord bot that populates channels with NFT sales and listings is a convenient way to provide opportunities (new attractive listings) and market updates (sales, record sales, listings) to holders.\n Thus, ICLand aims to power the IC’s tokenized communities given the lack of services providing such essential functionatiltes.\n \n\n How we built it\n \n\n - Server\n \n\n \n\n Written in Typescript\n Hosts Discord Bot that handle users authentication, assigns special roles to holders, and collect and share market activity data of their collections’ tokens through channels\n API to integrate the functionalities between the dapp and the Discord bot\n \n\n \n\n - Backend Canister\n \n\n \n\n Written in Motoko\n Has an actor that handles 2 HashMap databases, one for the guild and one for the users. Both databases have methods to create, update, find, and findAll records.\n In the future, these canisters will verify if NFT project admins own the required NFTs to integrate ICLand to their servers\n \n\n \n\n - Frontend Canister \n \n\n \n\n Written in Nextjs with Typescript\n UI that allows:\n \n\n \n\n users to connect their wallets and Discord accounts to ICLand\n project leaders to connect their wallets and Discord accounts to ICLand.\n \n\n \n\n \n\n Challenges we ran into\n \n\n \n\n The challenge was to design a scalable solution without using web2 database systems while providing a seamless IaaS solution that will support most ICP projects.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Delivering the main tool ready to use by the end of the Supernova\n Not relying on web2 database systems\n Building our first solution using Nextjs for the frontend canister and connecting it to an Oauth2 authentication\n \n\n \n\n What we learned\n \n\n \n\n How to develop a Discord bot using Discord.js\n How to setup oauth2 with Discord\n \n\n \n\n What's next for ICLand\n \n\n Future steps entail:\n \n\n \n\n Enabling the payment verification (via NFT ownership)\n Launch the product in beta for projects to test\n Explore developing further tools that could take the shape of:\n \n\n \n\n Token-gated raffles;\n Twitter bot providing activity data;\n Staking tools enabling holders to stake fungible and non-fungible tokens;\n Governance/polling platforms;",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icland#@#@#nextjs#@#@#typescript#@#@#motoko#@#@#express.js#@#@#discord#@#@#icland powers tokenized communities by connecting web3 identities to social spaces & delivering key token data to communities. first tools: discord token holder verification; sales & listings bot.",
    "tags": [
      "nextjs",
      "typescript",
      "motoko",
      "express.js",
      "discord"
    ]
  },
  {
    "id": "mixverse",
    "name": "Mixverse",
    "description": "Curate your space, Enjoy metaverse!",
    "image": "mixverse.png",
    "links": {
      "github": "https://github.com/mix-labs/",
      "livePreview": "https://drive.google.com/file/d/1F7BRVkyRiKCV9xZ_Vdsl3TF2JqjCq_os/view",
      "external": "https://supernova.devpost.com/submissions/334372-mixverse",
      "otherLinks": [
        "https://mixverse.vercel.app/"
      ]
    },
    "submitterFirstName": "shuzhi",
    "submitterLastName": "cheng",
    "about": "Inspiration\n \n\n With the maturity of blockchain technology, the NFT market is in a trend. But there are still some bad experiences in the current NFT market. First, the quality of NFTS on the market is uneven. Second, most NFTs are tiled displayed on the website, so it is difficult to reflect the thoughts and souls of NFT works. And it is also hard for users to distinguish the quality of NFTs while purchasing. Therefore, we plan to do a metaverse curation space project to improve the existing NFT market.\n \n\n What it does\n \n\n Mixverse was born in this background. It supports operators to create their own metaverse space for NFT curation. In Mixverse, the NFT projects in the curation are screened by KOLs in the community, so the quality is better. Besides, in the metaverse, the exhibition similar to the real exhibition hall can embody the ideas of NFT works. It also allows users to have a better experience when purchasing.\n \n\n How we built it\n \n\n Mixverse mainly provides services of three modules.\n \n\n \n\n \n\n Layer 1: Digital Assets * *\n Realize the data assetization of web2 and webAuthenticate by DID, and store digital assets in Metabox, a decentralized storage service on Internet Computer.\n \n\n \n\n Layer 2: NFT Trading Marketplace * *\n Customized NFT trading market agreement. Firstly, the NFT token standard is implemented, which supports different NFT types. Secondly, Mixverse's trading marketplace not only supports its own token standard, but also supports tokens of other standards. Surprisingly, mixverse plans to combine AR technology and AI technology to support NFTs' programmability and secondary creation.\n \n\n \n\n Layer 3: Customize Metaverse Space * *\n Support users to customize their metaverse spaces and curate digital assets. Provide diversified users with an immersive experience of digital assets.\n \n\n \n\n \n\n \n\n \n\n Challenges we ran into\n \n\n \n\n In the process of digitizing Web2 assets, it is necessary to lower the user threshold and improve the user experience.\n There is no better technical scheme in aggregating cross-chain NFT assets through DID identity,\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Metaverse space, user's immersive experience.\n Support multiple types of NFTs, including pictures, music, 3D models, etc.\n Support NFT 360-degree display.\n NFTs are truly stored on the chain, and their security is guaranteed.\n \n\n \n\n What we learned\n \n\n The security of users' assets is the top priority. For example, when transferring assets on IC, it is necessary to consider the non-atomicity of cross-canister transactions in the contract to ensure the asset security of users.\n \n\n What's next for Mixverse\n \n\n Next, we want to move forward in the following two directions.\n First, realize the programmability and secondary creativity of NFTs through AI algorithm.\n Second, integrate cross-chain digital assets through DID identity authentication.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "mixverse#@#@#motoko#@#@#react#@#@#canvas#@#@#webgl#@#@#curate your space, enjoy metaverse!",
    "tags": [
      "motoko",
      "react",
      "canvas",
      "webgl"
    ]
  },
  {
    "id": "metaspeare",
    "name": "Metaspeare",
    "description": "Allowing users to mix NFTs to mint a new one with properties from the parent NFTs genome.",
    "image": "metaspeare.png",
    "links": {
      "github": "https://github.com/BreeDay/Metaspeare",
      "external": "https://supernova.devpost.com/submissions/334594-metaspeare",
      "otherLinks": []
    },
    "submitterFirstName": "Bree",
    "submitterLastName": "Day",
    "about": "Inspiration\n \n\n Watching the Andy Warhol documentary and seeing the art that was produced when mixing the styles of the two artists. \n \n\n What it does\n \n\n Metaspeare is a platform for buying, selling, and minting NFTs. The difference between Metaspeare and other NFT platforms is that Metaspeare allows for metadata on the genome of the NFT to be added. Users can purchase collections and mix the art styles. Properties of the two are chosen at random to mint a new NFT. \n \n\n How we built it\n \n\n Internet computer, web3, Motoko, React\n \n\n Challenges we ran into\n \n\n I am fairly new to developing on web3 and ran into a few errors when developing metaspeare.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "metaspeare#@#@#web3#@#@#motoko#@#@#react#@#@#internet-computer#@#@#allowing users to mix nfts to mint a new one with properties from the parent nfts genome.",
    "tags": [
      "web3",
      "motoko",
      "react",
      "internet-computer"
    ]
  },
  {
    "id": "meta-yield-liquid-staking-crowdfunding-platform-for-icp.",
    "name": "Meta Yield - liquid staking crowdfunding platform for ICP.",
    "description": "Meta Yield fundraising mechanism leverages staking, ICP backers only exchange their future Neuron rewards for a project’s token and get to keep their ICP, thus de-risking the crowdfunding process.",
    "image": "meta-yield-liquid-staking-crowdfunding-platform-for-icp..png",
    "links": {
      "github": "https://github.com/Narwallets/meta-yield-ic",
      "external": "https://supernova.devpost.com/submissions/326851-meta-yield-liquid-staking-crowdfunding-platform-for-icp",
      "otherLinks": []
    },
    "submitterFirstName": "Claudio",
    "submitterLastName": "Cossio",
    "about": "Inspiration\n \n\n After we had participated in several launchpads and a couple of initial distribution offerings (IDO) of project tokens. We felt that it was a zero sum game and that market conditions sentiment dictated much of the success or failure of projects.\n \n\n We believe that in order for projects to launch successfully on any decentralized platform through a crowdfunding platform it needs to put ICP token holders front and center of it. Driving value to them is a critical part of enabling them to back projects.\n \n\n Value proposition user:\n \n\n \n\n They are not swapping all their ICP tokens in a project, just their staking rewards.\n They get exposure to different projects and their tokens.\n \n\n \n\n Value proposition for the project:\n \n\n \n\n Projects get funding from the community, helping the decentralization of ICP.\n Easy channel for projects to distribute their tokens.\n Not a price discovery mechanism, projects are getting funding to kickstart the development.\n This mechanism could also be used to launch farms on DEXs and AMMs. After utility has been delivered for the project tokens.\n \n\n \n\n What it does\n \n\n A crowdfunding platform for ICP using staking. Projects that need to fund their product can request an amount of Neurons that they need to launch their product/app. Users stake ICP and all the Neurons rewards from staking go to the project and the users get the native token from the project.\n Users get a receipt for their ICP staked, so they can claim it after the project has earned all their rewards.\n Important: Users need to lock their staking tokens, so they guarantee the funding to the project through the staking rewards.\n \n\n One aspect that is crucial is that the project sets the amount they want to crowdfund and if that goal is not met, all tokens staked are returned to the backers and this includes the neuron rewards. The project receives the same amount of tokens that it placed on Meta Yield to be traded for the neuron rewards, so they can get another opportunity at proposing another campaign in favorable market conditions.\n \n\n How we built it\n \n\n Building on ICP was a new experience for our development team, we reviewed some tutorials and had some great support from the DEVREL team to understand the fundamentals of the protocol.\n \n\n Our team had previous RUST experience, so getting familiar with the Motoko SDK was the first thing to tackle.\n \n\n The backend is using Motoko and the frontend is built on Next JS.\n \n\n Challenges we ran into\n \n\n Manage token transfers with a call back function on the receiver address was something we had to learn from scratch. \n \n\n Error handling had an interesting learning curve for us, but we managed to learn a ton from the feedback of the DFinity dev team and also found their Discord helpful to collaborate with other members of the community.\n \n\n For our crowdfunding platform it is important to initialize the balance on a canister and to make the deposit of the custom DIP20 token to it. We ran into some issues and we are currently investigating them.\n \n\n The client side canister does not allow pre-rendering and server-side rendering, we had to manage Next Js application to be exported as static HTML assets.\n \n\n Accomplishments that we're proud of\n \n\n In 6 weeks we manage to get our team to learn Motoko and we are really excited on what ICP can offer developers to build on a decentralized protocol.\n \n\n Deliver a simple version of the crowdfunding platform, with deposit of ICP tokens and distribution of a project token to the backers.\n \n\n What we learned\n \n\n There are some key takeaways from the Office Hours with the ICP team:\n \n\n \n\n Using nanoseconds or milliseconds in date format, use the latter.\n Get familiar how motoko handles UI calls and errors, plenty of good stuff here -> link\n Understanding shared and non-shared types is important when a function returns an array.\n \n\n \n\n What's next for Meta Yield - liquid staking crowdfunding platform for ICP.\n \n\n Launching it on mainnet for September of 2022, we think this platform will allow new projects to be onboarded into ICP and de risking the process of crowdfunding them through the native staking mechanism of DFinity.\n \n\n Roll out new products based on staking ICP tokens.\n \n\n Really excited to continue engaging with the DFinity team and the community.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "meta yield - liquid staking crowdfunding platform for icp.#@#@#motoko#@#@#next-js#@#@#meta yield fundraising mechanism leverages staking, icp backers only exchange their future neuron rewards for a project’s token and get to keep their icp, thus de-risking the crowdfunding process.",
    "tags": [
      "motoko",
      "next-js"
    ]
  },
  {
    "id": "particl-protocol",
    "name": "Particl Protocol",
    "description": "Particl Protocol solves the NFTs ownership and fractioning problems by allowing users to control their NFTs at a binary level in a seamless way.",
    "image": "particl-protocol.png",
    "links": {
      "github": "https://github.com/particl-protocol/particl",
      "livePreview": "https://z6xoi-5qaaa-aaaag-qaoqa-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/330778-particl-protocol",
      "otherLinks": []
    },
    "submitterFirstName": "Cristian",
    "submitterLastName": "Buta",
    "about": "What inspired me to create Particl\n \n\n I always found crazy how NFTs were split by having the asset off-chain and only a reference on-chain and how people got scammed exactly by exploiting this issue. Another thing that inspired me was the hype I got when I first heard about fractional.art and how disappointed I was when I realized that they don't really fraction anything. \n \n\n Nuclear Physics is as well a big influence on how this product came to be. Many of the features are inspired by various interactions that happen between atomic nuclei in a nuclear reaction.\n The branding decisions felt so natural as the underlying algorithms are so abstract and I always found myself making correlations with principles as atoms, particles, entropy, nuclear fission, nuclear fusion, chain reaction, nuclei.\n \n\n What it does\n \n\n Particl is a innovative Protocol that solves the above described problems and by doing so it also unlocks a new world full o capabilities in terms of digital assets and NFTs. It allows the users to mint NFTs that will be further referred to as Primordial, Primordial Shards, Meta Primordial. \n \n\n These NFTs can be further fractioned by doing a process called fission. Fission products are NFTs. Fission triggers a chain reaction where a process of creating multiple pointers to different memory zone locations is happening in cascade, ownership of data bytes gets transferred to the newly created shards. gets transferred and the operations produces two different NFT's (Primordial Shards). Primordial shard have the exact same metadata as the originating token but the difference lays at the data bytes associated with it.\n \n\n Multiple fissioning might be limited by a point of maximum entropy where splitting \"nuclei\", or better said splitting bytes can no longer be possible. \n \n\n Fusion does the above described operation in reverse.  \n \n\n How I built it\n \n\n Internet Computer is the catalyst of this project as this deep level of complex operations, algorithms and memory zones manipulation can not be done on any other blockchain. Contracts are written in Motoko and they make use of an dynamic storage scaling creation. The contracts make intensive use of experimental stable memory and do a lot of data processing for different operations.  \n \n\n Challenges I ran into\n \n\n Technical - creating a complex protocol and make it look stupid simple for adoption.\n \n\n \n\n The main technical challenge was/is/will be creating/enhancing the algorithm for byte splitting. I knew from the start that it was going to be a really big wall that would not fall easily. I had to rewrite the algorithm several times and this is because of the huge number of edge cases that where discovered on the way and handling those implied entirely new approaches. \n When I finally had a alpha-ish version of the protocol I was looking at the code and I was no longer seeing complexity but rather a very clear image of a product that has the potential to become the most disruptive project in the dApps scene in the next few years. All good but I needed a way to simply demonstrating it's powers to the world so everyone can see what I see. I thought about demos involving songs/movies/images. The final choice were PNG files. What I basically tried to do here is to build the foundation of what a particl sdk could look like in the future where users create NFT's from images and then splits them apart. I was working on the compression/decompression algorithms so the sdk can properly instruct the user on ways that his Primordial can be fissioned so he does not corrupt the file when cropping. The challenge was immense as direct correlation needed to be made between pixels and the bytes that lay in different memory zones. Slicing the middle of IDAT or any other chunk type is not something that you would really want. I spent an entire week working on it and it is still a work in progress, but for the sake of the Demo day I made some workarounds on the frontend so a showcase of the product could be properly made.\n \n\n \n\n Non Technical - joining late and not having time to form a team\n \n\n Some friends introduced me to supernova and they asked me to compete with them on a different project but the team quickly disbanded. But it was to late for me as I already started engaging with the community and got completely fascinated by the Internet Computer as a whole. Going through the docs I was already envisioning Particl and 20 days ago I had to make the decision if I am going to build an alpha version for Particl and get the chance to step on stage with it at supernova or miss the opportunity window. \n \n\n I realized I no longer had the time to build a new team that can fully coordinate for a 20 days deadline on a project this complex that made sense only in my head so I decided to go solo in a 18h coding/day marathon for the remaining time. I usually do these types of marathons but this one felt the most exhausting. I got to somehow manage it by never going more than 12 hours at a time on a particular issue so I was often switching between frontend, smart contracts, product identity, ux decisions, competitor analysis, branding and so on.  \n \n\n Accomplishments that I'm proud of\n \n\n I am proud of being able to deliver a baby version for Particl Protocol, even though it is a buggy one, even though it is hours before the deadline and I'm still pushing my last commits.\n I am proud of the fact that I met a cool community of developers around Internet Computer and I am proud of being part of it.\n \n\n What I learned\n \n\n \n\n A new programming language -> Motoko\n Different File standards\n Internet Computer Architecture\n Having a sticky burger menu in a container in the middle of the page is not really that easy.\n \n\n \n\n What's next for Particl Protocol\n \n\n I want to emphasize a bit of what Particl is and what isn't. Particl is a protocol that allows unlimited possibilities in terms of digital assets manipulation on a blockchain. \n Particl is not an NFT. Primordials that are created through Particl are NFTs.\n \n\n I envision a world where Particl develops two business lines. \n \n\n \n\n Software as a Service that empowers developers into using the protocol by creating meta primordials and defining their own fusioning and fissioning rules.\n NFT Marketplace that fully uses particl protocol.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "particl protocol#@#@#motoko#@#@#react#@#@#particl protocol solves the nfts ownership and fractioning problems by allowing users to control their nfts at a binary level in a seamless way.",
    "tags": [
      "motoko",
      "react"
    ]
  },
  {
    "id": "bonsai-icp",
    "name": "Bonsai ICP",
    "description": "A GameFi in Internet Computer platform",
    "image": "bonsai-icp.png",
    "links": {
      "github": "https://github.com/conglt10/bonsai-icp",
      "external": "https://supernova.devpost.com/submissions/333311-bonsai-icp",
      "otherLinks": []
    },
    "submitterFirstName": "Le",
    "submitterLastName": "Cong",
    "about": "Bonsai ICP 👋\n \n\n \n\n \n\n Bonsai ICP Dapp\n \n\n This demonstrates the three important parts of a dapp and how they should be connected:\n \n\n \n\n The browser UI (ReactJS + Redux)\n Canister (Rust)\n \n\n \n\n Functionality\n \n\n Bonsai ICP :\n \n\n \n\n Buy plants from stock by ICP\n Planting trees in the collection.\n Transfer bonsai to other account.\n \n\n \n\n Future Function:\n \n\n \n\n Each Bonsai is growed from a seed (generate random from Verifiable Random Numbers). The seed determines the quality of the plant as well as other parameters such as growth rate and price (Legendary Bonsai or Normal Bonsai).\n The canister has the ability to update properties such as the life of a plant, which will display other forms of the plant such as sprouting, flowering, and fruiting.\n \n\n \n\n \n\n \n\n \n\n It is possible to resell the trees you have planted.\n Marketplace NFT for Bonsai\n \n\n \n\n Video Demo\n \n\n https://youtu.be/ETJx_K7izMU\n \n\n How to run project\n cd ui\n cp .env.example .env\n yarn install\n \n\n Add infor into .env\n yarn start\n \n\n View in http://localhost:3000",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "bonsai icp#@#@#rust#@#@#javascript#@#@#react#@#@#a gamefi in internet computer platform",
    "tags": [
      "rust",
      "javascript",
      "react"
    ]
  },
  {
    "id": "c3-protocol-(co-created-collectibles)",
    "name": "C3-Protocol (Co-Created Collectibles)",
    "description": "CCC is a platform for on-chain creation and collaboration. It takes advantage of Dfinity’s low threshold in order to introduce Web2 creators to Web3.",
    "image": "c3-protocol-(co-created-collectibles).png",
    "links": {
      "github": "https://github.com/C3-Protocol/CoCreate",
      "external": "https://supernova.devpost.com/submissions/334205-c3-protocol-co-created-collectibles",
      "otherLinks": []
    },
    "submitterFirstName": "Mohameth",
    "submitterLastName": "Faye",
    "about": "Inspiration\n \n\n CCC is a platform for on-chain creation and collaboration. It takes advantage of Dfinity’s low threshold in order to introduce web2 creators to webWe noticed that there are a few creators that use blockchain technology, OpenSea for example has only a few hundreds of thousands of users. Knowing that, there are over 200 million creators in the word, we believe that a connector is now needed in order to help them get into web3 which guarantee full asset ownership and much more decentralization. CCC protocol goal is to formulate creation agreements, transaction agreements and cross chain agreements. Our protocol is fully open and permissionless, implementing therefore a closer connection between creators, collectors and the web\n The CCC platform is user-friendly and supports multiple wallets such as (NNS, Plug Wallet, Stoic Wallet, and Infinity Wallet).\n \n\n What it does\n \n\n It's the first entirely decentralized collaborative platform, for artwork creation, users can create individually or in a collaborative way on chain, buy or sell artwork. Recently we added a new feature that allows creators to Co-create with their fans or community member by forking artwork.\n \n\n How we built it\n \n\n We started development around September 2021, on the internet computer Blockchain. \n Tutorial article about the Co-Creation: https://medium.com/@CCCProtocol/fun-co-creating-connecting-creators-and-fans-a7f41e6e3bce\n On-Chain Co-Creation by 988 users (Primary version) https://skeh5-daaaa-aaaai-aar4q-cai.raw.ic0.app/#/1155/m1155/3/htm6h-ziaaa-aaaah-qcp4a-cai \n \n\n Challenges we ran into\n \n\n Took a few months to learn Motoko, and then started writing the contract, a team was gathered and then a few months later we started operating and creating products. \n \n\n Accomplishments that we're proud of\n \n\n So far the protocol is fully functional, and has been used by ten of thousands of users, and along the way we have been granted two Dfinity Grants as well as Hackathons.\n \n\n What we learned\n \n\n Perseverance, belief in ourself and our team. And positivity. \n \n\n What's next for C3-Protocol (Co-Created Collectibles)\n \n\n We intent to keep building new features and tools toward our goal which is making web3 mainstream and used by millions of Creators all around the world.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko",
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "c3-protocol (co-created collectibles)#@#@#motoko#@#@#rust#@#@#javascript#@#@#modelica#@#@#shell#@#@#html#@#@#ccc is a platform for on-chain creation and collaboration. it takes advantage of dfinity’s low threshold in order to introduce web2 creators to web3.",
    "tags": [
      "motoko",
      "rust",
      "javascript",
      "modelica",
      "shell",
      "html"
    ]
  },
  {
    "id": "ican",
    "name": "iCAN",
    "description": "What is iCAN? -- The best easy-to-use Canister Management Platform on IC.",
    "image": "ican.jpg",
    "links": {
      "github": "https://github.com/PrimLabs/iCAN",
      "external": "https://supernova.devpost.com/submissions/329653-ican",
      "otherLinks": []
    },
    "submitterFirstName": "BlockCoder",
    "submitterLastName": "Gao Zhao",
    "about": "Inspiration\n \n\n Currently, developers can only manage their canister by the NNS wallet and the DFX command line.\n The NNS wallet only displays basic information about Canister. And developers can’t easily use the NNS wallet to manage the Canisters.Only Canister id without other information makes it impossible for developers to use NNS wallet to manage their canisters conveniently.\n Hard to manage canister status by the DFX CLI.\n \n\n What it does\n \n\n Easy to use UI interface to deploy and manage your CANISTERS\n iCAN = IC + Canister. It is an on-chain Canister management tool built on IC.\n iCAN helps developers manage the Canister by a graphical interface, to create contracts, download WebAssembly modules, manage Canister indicators, et\n \n\n Functions\n \n\n Detailed Management\n \n\n a. Dynamic change of Canister’s Settings\n b. More convenient Canister Management\n c. Detailed description of Canister\n \n\n Status Detection\n \n\n a. Support top up canisters directly using ICP, and deposit Cycles to Canister directly\n b. Timely feedback on the status of Canister, so that developers can understand the current status of Canister and manage it in time\n \n\n Creation and Deletion\n \n\n a. Graphical Canister management Interface\n b. Be able to create & delete Canisters, and automatically recycle Cycles\n \n\n Support Import\n \n\n a. Import Canisters created before to your own hub.\n b. WebAssembly Control\n c. Download the latest WebAssembly\n \n\n How we built it\n \n\n We build iCAN App totally on the IC by Motoko and Rust.\n \n\n Challenges we ran into\n \n\n It's hard to get Rust Canisters' Candid Interface.\n \n\n Accomplishments that we're proud of\n \n\n The iCAN Developer Platform helps developers manage Canister. The future goal is to become a comprehensive contract management platform on IC.\n a. Create Management Hub in random subnet\n b. By the random subnet hub, you can choose which subnet you want your canister to be created.\n c. Convenient Management: You can name the canisters, tag them or give them a description so that you can manage them conveniently.\n d. Trustless Management\n Hub Canister is only controlled by yourself, which supports a trustless hosting service.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ican#@#@#rust#@#@#motoko#@#@#typescript#@#@#what is ican? -- the best easy-to-use canister management platform on ic.",
    "tags": [
      "rust",
      "motoko",
      "typescript"
    ]
  },
  {
    "id": "icx",
    "name": "ICX",
    "description": "Web2sites Organizing-Tool for web2.5ers built by web3ers.",
    "image": "icx.png",
    "links": {
      "github": "https://github.com/Mulander-J/icx",
      "livePreview": "https://jeksq-wyaaa-aaaal-qaw3a-cai.ic0.app",
      "external": "https://supernova.devpost.com/submissions/326854-icx",
      "otherLinks": []
    },
    "submitterFirstName": "Mulander",
    "submitterLastName": "King",
    "about": "_____ _____  \n  /\\ \\ /\\ \\  ______  \n  /::\\ \\ /::\\ \\  |::|  | \n  \\:::\\ \\ /::::\\ \\ |::|  | \n  \\:::\\ \\ /::::::\\ \\  |::|  | \n  \\:::\\ \\ /:::/\\:::\\ \\ |::|  | \n  \\:::\\ \\ /:::/ \\:::\\ \\  |::|  | \n  /::::\\ \\ /:::/ \\:::\\ \\ |::|  | \n  ____ /::::::\\ \\ /:::/ / \\:::\\ \\  |::|  | \n  /\\  \\ /:::/\\:::\\ \\ /:::/ /  \\:::\\ \\ ______|::|___|___ ____ \n /::\\  \\/:::/ \\:::\\____\\/:::/____/  \\:::\\____\\|:::::::::::::::::| |\n \\:::\\ /:::/ \\::/ /\\:::\\ \\ \\::/ /|:::::::::::::::::|____|\n  \\:::\\/:::/ / \\/____/ \\:::\\ \\ \\/____/ ~~~~~~|::|~~~|~~~  \n  \\::::::/ / \\:::\\ \\ |::|  | \n  \\::::/____/ \\:::\\ \\  |::|  | \n  \\:::\\ \\  \\:::\\ \\ |::|  | \n  \\:::\\ \\  \\:::\\ \\  |::|  | \n  \\:::\\ \\  \\:::\\ \\ |::|  | \n  \\:::\\____\\  \\:::\\____\\  |::|  | \n  \\::/ / \\::/ /  |::|___| \n  \\/____/ \\/____/  ~~  \n \n\n \n\n \n\n Inspiration\n \n\n Even though I have hundreds of bookmarks, no more than 20 of them are really useful at the same time.\n And I was tired of manage bookmarks from browser to browser. I think my way managing links may not effective enough.\n Thus I tried to develop a distributed and erasable bookmarking tool for multi-person collaboration.\n \n\n What it does\n \n\n The ICX is regard as a tool or station, where users can manage bookmarks via Internet Computer.\n # The node-data hierarchy is designed as three levels.\n App Node / Collection Node / Bookmark Node\n \n\n There are two types of data:\n \n\n Square Data 100% Open to All\n \n\n Data is stored in the ICX-Canister. Edit access to data is open to all inludes modify & delete.\n \n\n Data will be cleared regularly, to avoid that, users need a successfull vote for each node data.\n \n\n User Data Only for User\n \n\n Data is encrypted and stored permanently in the user's Canister.Only userself has access to modify them.\n \n\n The cost of creating the Canister is borne by the user.\n \n\n Features\n \n\n \n\n Page Home: Open Square. 100% Open to manage bookmarks\n Page Rank: Show User Point. Update after user modify.\n Page Activity: Show loggers.\n Page Feedback: Send report.\n Page About: Intro of app.\n Page Tool: Principal to account.\n IC-Naming\n Identity: Internet Identity & Plug.\n Dark/Light mode switch.(bottom left)\n Readonly/Write mode switch.(bottom left)\n \n\n \n\n What's next for ICX\n \n\n \n\n Vote\n Personal User Canister Management.\n Fork datas from suqare to user's own canister.\n Profile Picture\n \n\n \n\n How we built it\n \n\n Start with a figma draft of this product, develop backend in motoko and then develop frontend in vue.\n \n\n Challenges we ran into\n \n\n The identity is hard to get started, luckily I reference to many open source projects and examples.\n \n\n Accomplishments that we're proud of\n \n\n Product\n \n\n \n\n Feedback is integrated in the service\n \n\n \n\n Not Bad UI : )\n \n\n \n\n Dark/Light mode\n The Msg-Bot at right bottom for UI Embellishments\n The Human Check Verify Popup\n \n\n \n\n What we learned\n \n\n \n\n How to deploy & upgrade dapps on IC.\n Separate front and back-end development on IC.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icx#@#@#motoko#@#@#vue#@#@#vite#@#@#tailwindcss#@#@#typescript#@#@#web2sites organizing-tool for web2.5ers built by web3ers.",
    "tags": [
      "motoko",
      "vue",
      "vite",
      "tailwindcss",
      "typescript"
    ]
  },
  {
    "id": "cash-cow",
    "name": "Cash Cow",
    "description": "Lending & Borrowing DeFi Dapp built on ICP with Motoko \"Moo\"-ving at the speed of business",
    "image": "cash-cow.gif",
    "links": {
      "github": "https://github.com/lucylow/Cash_Cow",
      "livePreview": "https://gzz56-daaaa-aaaal-qai2a-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333891-cash-cow",
      "otherLinks": []
    },
    "submitterFirstName": "Lucy",
    "submitterLastName": "Low",
    "about": "Inspiration\n \n\n Decentralized Finance v.s. Traditional Finance\n \n\n The idea behind DeFi is to decentralize all financial services using blockchain protocols and cryptocurrencies.\n \n\n No central authority controls the Cash Cow protocol. It is governed by the decentralized network of its $COW governance token holders.\n \n\n Compound protocol money market protocol\n lend and borrow tokens\n \n\n \n\n earn interest\n borrow a token, bet price will go down by time they repay loan\n \n\n \n\n connect lenders and borrowers\n \n\n takes small fee \n \n\n The Internet Computer is a globally accessible, affordable and scalable blockchain, whose developers and users can be found all around the world. Build projects that positively impact your local community and beyond.\n \n\n Logo idea supposed to be a spherical cow in space.\n \n\n ====\n \n\n decentralized and autonomous borrowing and lending.\n \n\n how it works\n \n\n There are two types of users:\n \n\n Borrowers – users who post cryptocurrency collateral and are then allowed to borrow other cryptocurrencies supported by Cash Cow at a percentage of the posted value. the possibility for borrowers to get liquidated if the asset they borrow increases in value and becomes more valuable than the deposited collateral.\n Lenders – users who deposit their cryptocurrency to the lending pools that borrowers borrow from. Lenders earn interest on the cryptocurrency they deposit.\n \n\n allows users to deposit cryptocurrency they own into lending pools designed for other users to borrow from. Lenders earn interest on their deposits.\n \n\n Once a user deposits their cryptocurrency for lending, Cash Cow awards them a new cryptocurrency $COW. These rewards are based entirely on two factors: the amount of $COW held in their wallet (additional value for their loyalty!) , and a varying interest rate that is dependent on the available supply of that asset. The more liquidity a particular token has, the lower the interest rate generated.\n \n\n A user can transfer and trade their Cow tokens can be without restriction, but it is only redeemable for the cryptocurrency locked in the protocol for which it represents. The cash cow utilizes autonomous smart contracts to run this entire process, allowing users to withdraw their deposits at any time they choose.\n \n\n financial services of borrowing and lending your crypto.\n \n\n Earn Interest With Cash Cow Lending\n \n\n Cash Cow supports the borrowing and lending of ICP coin $COW where you can send, lock, deposit, lend any amount you wish to the protocol.  Now anyone with crypto can lend and borrow crypto immediately, without having to spend the time, effort, and cost of dealing with a traditional financial intermediary. \n \n\n just like putting your money in a savings account, but with a decentralized, blockchain-based protocol. Instead of depositing your money into the bank, you are sending your crypto to the ICP Stoic wallet. And, just like lending to a bank, you immediately begin to earn interest on your crypto. \n \n\n The crypto you send is added into a giant pool of that same token in a smart contract in the Cash Cow AMM.\n \n\n Cash Cow Crypto Borrowing\n \n\n Once you’ve locked your crypto to Cash Cow, you are able to borrow against it. Cash Cow does not require a credit check so anybody anywhere in the world with crypto has the ability to borrow AND determines how much you are allowed to borrow based on the quality of the asset. S\n \n\n o, for example, if you sent 1000 $COW worth $500 and Compound has set the borrowing limit (aka collateral factor) for $COW at 50%, you can borrow $250. And, just like borrowing money from a bank, you need to pay interest on the money you borrow.\n \n\n INTEREST RATES \n \n\n interest rates are calculated and automatically implemented by the Cash cOW protocol.\n \n\n Interest rates are a function of the amount of crypto available (aka liquidity) in each market and fluctuate in real-time based on supply and demand to always reflect current market conditions. The interest rates you see are quoted as annual interest rates and accrue each time an ICP block is mined. \n \n\n Every 15 seconds the value of your $COW will increase by number of blocks in a year of the quoted annual interest rate at that time.\n \n\n Interest rates are directly related to the liquidity available in each market. These rates will fluctuate in real-time based on supply and demand. When liquidity is plentiful, interest rates are low. As liquidity becomes scarce, interest rates increase, incentivizing new supply and the repayment of borrowing.\n \n\n CASH COW LIQUIDITY POOL \n \n\n algorithmic money market protocol on Internet Computer that lets users earn interest or borrow assets against collateral. Anyone can supply assets to Cash Cow's liquidity pool and immediately begin earning continuously-compounding interest. Rates adjust automatically based on supply and demand.\n \n\n When there is a large pool of crypto locked in Cash Cow, interest rates are low because there’s plenty there to be borrowed so you’re not getting paid a lot to add to that large pool. If the pool is small, interest rates are higher and you earn more. Fluctuating (aka floating) interest rates incentivizes lending new crypto to small pools (to earn higher interest), and repaying borrowed crypto into small pools and borrowing from large pools (to pay less interest).\n \n\n As we’ve mentioned above, every time you borrow from Cash Cow you have to lock in crypto that’s worth more than what you borrow as collateral so that the loan you take is over collateralized. Since the crypto you deposit as collateral is also volatile, it could drop in value. As it approaches the value of the crypto you’ve borrowed the $COW canister smart contract automatically closes the position. This is called liquidation (or, margin call). In that case, you get to keep what you borrowed but you lose your collateral.\n \n\n $COW ICP Tokenization \n \n\n Cash Cow tokens or $COW, which represent the balance of your crypto, in return are created from Internet Computer's tokens. You control Cash Cow tokens just like you would control any digital asset on the ICP blockchain, with your public and private keys.\n \n\n Supplied asset balances are represented by ICP tokens $COW: representations of the underlying asset that earn interest and serve as collateral. \n \n\n Users can borrow up to 50-75% of their $COW’ value, depending on the quality of the underlying asset. Users can add or remove funds at any time, but if their debt becomes undercollateralized, anyone can liquidate; a 5% discount on liquidated assets serves as incentive for liquidators.\n \n\n Token distribution \n Sets aside 10% of interest paid as reserves; the rest goes to suppliers. \n \n\n Governance Token \n \n\n To support Cash Cow's defi community, a predetermined amount f $COW is distributed to all lenders and borrowers on the every day. Distributions happen every time an ICP block is mined (seconds) in an amount proportional to the interest accrued by each asset. Token-holders propose and vote on changes to the protocol, and oversee the protocol’s reserves and treasury; every token represents one vote, which can even be delegated to another party on your behalf.\n \n\n Cash Cow's governance proposals are executable code which is subject to a three-day voting period. If a governance change to the protocol is passed by the community it will take effect two days later giving anyone a chance to close any open positions before the changes go into effect. \n \n\n Cash Cow has the potnential to be a fully decentralized self-governed ecosystem with it's native $COW governance token are bringing the benefits of blockchain to lending and borrowing crypto in a rapidly expanding DeFi ecosystem.\n \n\n What it does\n \n\n How it works:\n Cash Cow's ic0 front end interface enables anyone to start supplying or borrowing it. You can also check your balance and current interest rates.\n \n\n Decentralized Bank built on the Internet Computer\n \n\n platform to create, stake, and swap tokens on the Internet Computer.\n \n\n Manage, store, stake, transfer and in future swap ICP.\n \n\n enables users to swap tokens, earn fees as a liquidity provider, & build on the Internet Computer’s Interchain Automated Market Maker (AMM)\n \n\n Users can trade, purchase, or sell their anonymous blockchain-based authentication accounts on this community-built marketplace\n \n\n offers users the ability to swap tokens cheaply with their novel technology build on the ICP blockchain. \n \n\n purchasable with ICP\n \n\n takes advantage of the ICP blockchain's low fees, high-scalability, and reverse-gas model to deliver a seamless Web3 experience. Sonic is launching a new token standard DIP20 that will serve as the backbone of their swap ecosystem.\n \n\n They are also planning to release their own token standard IS20 to support these initiatives.\n \n\n enables financial institutions to assess and manage financial risks \n \n\n decentralized exchange (DEX) built completely end-to-end on-chain. \n \n\n By building the ability for anyone to swap tokens through ICPSwap leveraging the Internet Computer blockchain as the high-speed, scalable, low-cost infrastructure makes ICPSwap a first-to-market in the growing Internet Computer DeFi ecosystem.\n \n\n advanced type of DAO, called a \"Service Nervous System\", just by following a simple procedure, and then assigning control over their service to them\n \n\n allows users to participate in DeFi, Governance, dispute resolutions, and Treasury (DAO) protocols with negligible fees and faster transaction settlement than legacy wallets integrated with the Internet Computer’s Network Nervous System in order to support staking with voting rewards.\n \n\n How we built it\n \n\n built end-to-end on the Internet Computer.\n \n\n made possible due to the Internet Computer blockchain's scalability, low-costs, and innovations in smart contract technology.\n \n\n BACKEND\n \n\n \n\n checkBalance: () → (float64) query\n compound: () → () oneway\n topUp: (float64) → () oneway\n withdrawl: (float64) → () oneway\n \n\n \n\n FRONTEND\n Current Balance: $\n Amount to Top Up\n Amount to Withdraw\n Finalize transaction\n \n\n using the dfx sdk to write functions for bank withdrawl() and topup() \n \n\n earn interest for token balance expressed as Motoko actor (fully encapsulates it's state through asynchronous messages)\n internet computer native canister smart contracts\n \n\n https://internetcomputer.org/docs/current/references/motoko-ref/time/\n \n\n Challenges we ran into\n \n\n Warning: The version of DFX used (0.10.0) is different than the version being run (0.10.1).\n This might happen because your dfx.json specifies an older version, or DFX_VERSION is set in your environment.\n We are forwarding the command line to the old version. To disable this warning, set the DFX_WARNING=-version_check environment variable.\n \n\n Error when trying to forward to project dfx:\n Failed to get path to binary 'dfx' for version '0.10.0'.\n \n\n Caused by:\n  0: Failed to install binary cache for version '0.10.0'.\n  1: Unknown version '0.10.0'.\n Installed executable: 0.10.1\n \n\n DFX_VERSION=0.10.0 sh -ci \"$(curl -fsSL https://smartcontracts.org/install.sh)\"\n \n\n Currently the compound interest calculation is set to the mathematical formula for calculating compound interest, A=P(1+r/n)^nt.\n \n\n compound 1% for 1 second is not realistic and solely used for the supernova hackathon.\n // money = Float not Nat type\n \n\n two terminals, one running ICP internet computer, other webpack\n \n\n dfx canister id __Ca\n ndid_UI\n qoctq-giaaa-aaaaa-aaaea-cai\n \n\n dfx canister id cash\n _cow\n renrk-eyaaa-aaaaa-aaada-cai\n \n\n Accomplishments that we're proud of\n \n\n orthogonal persistance canister states + async decentralized (speed)\n \n\n using Candid UI instead of running dfx deploy in terminal everytime \n \n\n What we learned\n \n\n Using canister_inspect_message to avoid DOS/ cycles draining.\n \n\n Intended compatibility with ERC20/DIP20 and Ledger Canister\n \n\n Research about collateralized NFT loans, Loan collateralization, Fractional ownership, Insurance, and Debt management\n query calls v.s. update calls // one updates to the blockchain, takes much longer\n \n\n On the Internet Computer, smart contract calls run in parallel, because smart contracts (called \"canisters\") are \"software actors\". This removes a key security vulnerability, and provides for the unbounded, efficient scaling of blockchain computation with Asynchronous calls.\n \n\n What's next for Cash Cow\n \n\n Integrated with Plug wallet, users can search for and purchase any coveted Internet Identity numbers which may be up for auction.\n \n\n pseudonomize their wallet addresses on ICP, as well as domain names, and canister smart contract IDs.\n \n\n bridge and communication protocol that contracts across interchains like Ethereum, Solana\n \n\n Build a version using Rust (instead of current version with Motoko)\n Motoko style guidelines\n To increase readability and uniformity of Motoko source code, the style guide provides suggestions for formatting Motoko sources and other basic conventions.\n \n\n https://internetcomputer.org/docs/current/developer-docs/build/languages/motoko/style/\n \n\n Website hosted on the Internet Computer howing how traditional DeFi solutions can now be hosted completely on-chain by using the Internet Computer blockchain completely decentralizing a service. As a Web3 solution, now by having the front-end of their swap solution hosted on the Internet Computer blockchain, the full-stack is truly decentralized. This minimizes risks of centralization which include wrongful takedowns, outages, censorship, and more.\n \n\n dfx deploy --network=ic deploy canister to internet computer with appropriate Subnet memory allocation to HTML page on internet computer so that anyone can access it http://renrk-eyaaa-aaaaa-aaada-cai.io0.app\n \n\n Implement other IC infrastrucutre like IC agents, IDEs, debuggers, oracles, asset bridges, and general integrations and APIs or the novel \"chain key cryptography\" that powers the Internet Computer has recently been made available to hosted blockchain code via APIs. This means you can now write blockchain code that directly invokes code and controls token balances on OTHER blockchains, and create DeFi systems and meta glue that binds different blockchains together, without need for dangerous bridges.\n \n\n leverage advanced tokenization strategies to fundraise and drive viral growth.\n \n\n support other currencies like ETH, BAT, DAI, SAI, ETH, REP, USDC, WBTC, and ZRX.\n \n\n Get audited and formally verified. \n \n\n Apply for dfinity grant funding ($220,000,000)\n \n\n Monitor crypto price factors like exchange inflows and outflows, sentiment, technical and fundamental developments, the news cycle, and the general economic environment.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "cash cow#@#@#motoko#@#@#lending & borrowing defi dapp built on icp with motoko \"moo\"-ving at the speed of business",
    "tags": [
      "motoko"
    ]
  },
  {
    "id": "nowa-metaverse",
    "name": "NOWA Metaverse",
    "description": "NOWA Metaverse is not just another HYPEverse, it is a beautiful long-term project for testing and implementing alternative Flow Economic and Trinity Governance models in real life, using gamification!",
    "image": "nowa-metaverse.png",
    "links": {
      "github": "https://github.com/Prana-Tree/nowa_invites",
      "livePreview": "https://es7e3-taaaa-aaaan-qakqq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/332339-nowa-metaverse",
      "otherLinks": []
    },
    "submitterFirstName": "sid",
    "submitterLastName": "codes",
    "about": "NOWA PLOT\n \n\n Experiments began in 2033 when the first group of scientists landed on Mars. Due to a rapid expansion of the database of various new findings, the very first city on Mars became a reality thanks to NAVI robots. After 35 years of construction, Agora City was home to more than 100,000 people. \n \n\n An unexpected turn of events escalated the rapid growth of the city even more: an asteroid Fenix was discovered. The best and the worst outcomes were the same - an unavoidable collision with Earth. In 2095, generation ZERO started to actively migrate to Mars, increasing the population to more than 500,000 by 2120. \n \n\n \n\n \n\n In 2122, Fenix collided with Earth and both shattered in pieces; the explosion was so strong that it blew millions of fragments of the planet and comets across the galaxy. Nothing survived. There was nothing left except asteroids that were floating around in the same place humanity once called home. \n \n\n The people on Mars organized a mission to bring whatever was left of Earth and Fenix to their new home Agora, creating a shield of asteroids called NOWA.\n \n\n .\n \n\n PROJECT GAMIFICATION\n \n\n ASTEROIDS\n \n\n The asteroids take a vital role in the whole ecosystem. They are used as both a territory for construction and a resource for construction. To receive resources, you give up some of the territories. This means that the more asteroid is used for mining, the less surface will become available for construction.\n \n\n The asteroids can be used just like land in NOWA. They come in different sizes and have different resource capacities. Asteroids can be used for fully recycling the resources with an opportunity to resell them on the market. One can decide to buy asteroids as a way to resell them at a higher price. Others might use it to build games, social and other projects. Wherever your imagination can take you, as long as it corresponds with our main values.\n \n\n NAVI ROBOTS\n \n\n NAVI robots are an important part of the NOWA metaverse, which will have various uses starting from mining the asteroids and building on them and finishing by creating other robots and controlling them during games or other social processes.\n \n\n The NAVI will be able to evolve as they are used, meaning that as they become more evolved, their results will improve.\n \n\n \n\n \n\n PROJECT MISSION\n \n\n We believe that in the future, NOWA's experience can help improve the technology of governance in a modern democratic society.\n \n\n The problems on Earth started way before the asteroid Fenix was on a trajectory to hit Earth. In around the 2030s, humankind started to realize that old economical, administrative, and other global systems stopped working efficiently and the need for new models arose. Different hypotheses with various modes of testing were created with the help of new technologies. \n \n\n In the 2060s, there was a spark of new hope for a better socio-economic and administrative system DADO (decentralized autonomous democratic organization) that heavily relies on AI for analysis and predictions of possible outcomes of the system. With AI they could not just analyze the past and prevent problems in the present, but also predict the outcomes in the future with the highest statistical accuracy. \n \n\n For 50 years, the people of Mars were testing and improving the systems. NOWA DADO is a clear and fair ecosystem to emulate a new way for people to interact for the benefit of society. DADO’s mission is to gain new experience by experimenting with an alternative system of management and resource allocation.\n \n\n \n\n \n\n How would NOWA society work?\n \n\n The new concept of Trinity Governance is based on 3 main flows: mental, material and social. Each flow then consists of 2 leaders, Alpha and Omega, and the Circle of 10 councilors. The two leaders will keep balancing each other in the direction of a common dual goal, instead of just a personal one. The Circle is responsible for the formation and communication of needed laws to the leaders, who in turn synchronize them along with leaders of other flows. After that, the Circle decides whether the new law should be approved by a new voting system. The leaders do not have the right to vote, they are primarily the leaders of the flow trying to direct the flow in the needed direction.\n \n\n What's next for NOWA Metaverse?\n \n\n Colony citizens formation. Q3 2022\n Our colony starts with a community that will manage NOWA Metaverse. To do this, we will generate the first 1,000 citizens using the invitation system, beginning with the creators.\n \n\n \n\n \n\n Governance system formation. Q3 2022\n As soon as NOWA colony reaches 1,000 citizens, voting will be launched in the DADO governance system. 33 board members will be appointed to the council through open elections.\n \n\n Asteroid Market launch. Q3 2022\n The first of the five markets will be the Asteroid Market, and the first drop will be 5,000 NFT asteroids. Profit from the sale will be distributed in three ways: 50% to the treasury, 25% to the government, and 25% to citizens.\n \n\n NAVI Robots Market launch. Q4 2022\n For asteroids' changing and resource extraction from them, it is necessary to use NAVI robots that will make up the second NOWA market. Therefore, the first drop will be 5,000 NAVI robots of 4 types: MineTech, ArchiTech, CybeTech, and GameTech.\n \n\n Asteroids modification system. Q2 2023\n Graphical user interface for asteroid shape modification and resources extraction.\n \n\n Resource Market launch. Q2 2023\n Resources extracted from asteroids form the third market, where they can be sold, exchanged, or used to build objects and new NAVI robots. There are 6 resource types: Water, Rock, Metal, Crystals, Asterium, and Plasma.\n \n\n Assets building system. Q3 2023\n Graphical user interface for creating objects and NAVI robots.\n \n\n Assets Market launch. Q3 2023\n Besides resources and robots, blueprints are also needed to build assets, which can be found in the fourth market. It will be possible to purchase ready-made assets or a blueprint for its construction.\n \n\n Games building system. Q4 2023\n Graphical user interface for game creation and social interactions.\n \n\n Gaming Markets launch. Q4 2023\n After the necessary objects are built on the asteroid, you can start the gameplay, which will use GameTech NAVI robots of various shapes and sizes necessary to get the experience.\n \n\n Social VR interaction system. Q1 2024\n Graphical VR interface for citizens’ interaction and management.\n \n\n How do we build it?\n \n\n We used Unity and DIP721 NFT to make NOWA origin story and base for the metaverse map.\n In unity, we used c# callbacks to interact with Plug wallet to invite users to the metaverse and buy astroid NFTs.\n \n\n We used Psychedelic DIP721 standard to create astroid NFTs, and also used the cap for NFT history. \n \n\n The DIP721 standard is still in the beta phase so it will take some time to set up all types of NFTs we need for NOWA. Once deployed on Dfinity the unity wasm doesn't render everything, and loads slowly.\n \n\n Accomplishments that we're proud of connecting unity with our NFT canisters. We learned a lot. We have many kinds of NFT. now we have more clarity on how to build Metaverse.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "nowa metaverse#@#@#icp#@#@#unity#@#@#rust#@#@#nowa metaverse is not just another hypeverse, it is a beautiful long-term project for testing and implementing alternative flow economic and trinity governance models in real life, using gamification!",
    "tags": [
      "icp",
      "unity",
      "rust"
    ]
  },
  {
    "id": "smorf",
    "name": "SMORF",
    "description": "simple dao factory for small self-managed organisations & communities (up to 1000 members).",
    "image": "smorf.png",
    "links": {
      "github": "https://github.com/ioustamora/smorf",
      "external": "https://supernova.devpost.com/submissions/329999-smorf",
      "otherLinks": []
    },
    "submitterFirstName": "Stan",
    "submitterLastName": "Saveliev",
    "about": "Inspiration\n \n\n smorf provides simple dao factory for self-managed organisations\n \n\n What it does\n \n\n smorf creates simple dao with smartcontract and fromtend canisters\n \n\n How we built it\n \n\n smorf coded with motoko backend and vuejs frontend\n \n\n Challenges we ran into\n \n\n smorf must be chip in fees, simple to start and intuitive to use \n \n\n Accomplishments that we're proud of\n \n\n now it's just an idea and mvp in development\n \n\n What we learned\n \n\n icp is great and perspective! so i happy to learn it\n \n\n What's next for SMORF\n \n\n mvp release plus team and community building",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "smorf#@#@#motoko#@#@#vue#@#@#javascript#@#@#simple dao factory for small self-managed organisations & communities (up to 1000 members).",
    "tags": [
      "motoko",
      "vue",
      "javascript"
    ]
  },
  {
    "id": "ex3-orderswap",
    "name": "EX3 orderswap",
    "description": "Dfinity DEFI orderbook AMM",
    "image": "ex3-orderswap.png",
    "links": {
      "github": "https://github.com/Deland-Labs",
      "external": "https://supernova.devpost.com/submissions/334393-ex3-orderswap",
      "otherLinks": []
    },
    "submitterFirstName": "Brant",
    "submitterLastName": "Brown",
    "about": "Inspiration\n \n\n Before the establishment of EX3, Our team has conducted very detailed research of numerous popular DEX platforms, including but not limited to uniswap/0X project/curve/pancakeswap/sushiswap/dYdX, etc. We found that each of the models of AMM and orderbook has its advantages and disadvantages. Therefore, we decide to combine both of them and save the best parts of each model.\n \n\n What it does\n \n\n EX3 is a powerful decentralized exchange that provides millisecond response and a converged trading solution. EX3 combines the best part of traditional orderbook and AMM models, in which it allows users to get the best deal at the best price. As we know, AMM brings a more flexible liquidity strategy to the market especially in the initial stage when there's not enough liquidity. AMM is a great way to attract users and increase the liquidity pool. To some extent, it provides an efficient solution that help driven the market activity. On the other hand, orderbook is one of the most widely adopted trading models. When the liquidity is enough, orderbook is a perfect way to trade as slippage will remain low even when the trading volume is high. Also, orderbook carries a lot of the traditional features in the centralized exchange that many people are familiar with.\n Hence, EX3 merged the adaptability and low slippage of orderbook and applied AMM model to attracts users to increase the liquidity pool, therefore, even some tokens with very small liquidity can be swapped.\n \n\n How we built it\n \n\n As we know, IC attracted a lot of developers due to the fast process speed and low gas fee. Hence, we chose IC to make EX3 happens. On top of that we made it even faster by building a layer 2 solution on the IC. As a result, there's no need to worry about the \"traffic jam\" or high slippage caused gas fees during the trading or transaction. Moreover, EX3 will always make you trade at the best price, because EX3 will match the most favorable price between the orderbook and AMM through a converged matching engine. In simple terms, EX3 model are very similar to DYDX from technical perspective. We are all decentralized exchange that built on layer The only difference is that DYDX uses Starkware as layer 2 solution to avoid the impact of high gas fees, while we build a layer2 on the IC by ourself to support EXA simple summary: EX3 is a hybrid decentralized exchange that combines AMM and orderbook style with very low slippage and self-built layer 2 solution that provides EX3 with lightening speed, great performance and minimum gas fee. Additionally, the smart matching engine will help users to choose the best price to trade at any moment. EX3 is indeed an incredible revolutionary DEX that bring Defi to another level.\n \n\n Challenges we ran into\n \n\n This project combines three challenges: 1. full understanding of the IC technology stack Layer2 infrastructure build high performance aggregation engine engine\n \n\n Our team has built the DFT standard (fungible token standard) and has a full understanding of IC development best practices, giving us the ability to face the first challenge.\n \n\n Our team has more than 7 years of experience in blockchain industry and has rich experience in blockchain underlying development, which makes us capable of facing the second challenge.\n \n\n Our team has more than 5 years of experience in developing in-memory aggregation engines, giving us the ability to face the third challenge.\n \n\n Accomplishments that we're proud of\n \n\n The DFT Token Standard\n \n\n https://github.com/Deland-Labs/fungible-token-standard\n \n\n https://dft.delandlabs.com/\n \n\n As a very experienced team, we are one of the token standard development teams on IC. Token standard is a very important topic, which has been frequently debated in the IC community. In EX3, we use DFT token standard. We are confident that DFT will become the most widely used token standard in IC. Due to the DDoS protection design and a built-in blockchain that aim to provide underlying cryptographic proof. Next, we will introduce the unique features of DFT in detail. We all know that ERC20 is the world's first alternative token standard for blockchain, which has been fully verified and recognized. DFT combines the advantages of ERC20 and is customized for IC. From a technical point of view, DFT has a DDoS protection design and a built-in blockchain to provide the underlying cryptographic proof for the Defi developers. While realizing the above features, the unit test coverage of DFT is as high as 85%, and the automatic integration test coverage of public methods is 100%. We can confidently say that DFT is the token standard with the highest test coverage in the community, and the quality is reliable For developers, DFT has built-in common features. Third-party developers can select their own specific needs through configuration, which is simple and easy to use. The entire token standard is completely open-source and fully documented.\n \n\n What we learned\n \n\n Best practices for building projects on IC.\n How to build a blockchain on IC.\n \n\n What's next for EX3 orderswap\n \n\n \n\n DFT token tool set.\n Layer2 match engine\n Layer2 Infrastructure.\n Governance DAO.\n Support derivatives trading.\n Support cross-chain.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ex3 orderswap#@#@#rust#@#@#dfinity defi orderbook amm",
    "tags": [
      "rust"
    ]
  },
  {
    "id": "decollab",
    "name": "DECOLLAB",
    "description": "DECOLLAB offers a singular, streamlined platform for coders to seamlessly work on projects together quickly and effectively.",
    "image": "decollab.png",
    "links": {
      "github": "https://github.com/ashwinr000/DECOLLAB",
      "external": "https://supernova.devpost.com/submissions/334270-decollab",
      "otherLinks": []
    },
    "submitterFirstName": "Ashwin",
    "submitterLastName": "Rajesh",
    "about": "What it does and how we built it\n \n\n DECOLLAB is entirely web-hosted, which means that users can write code and manage their repositories all on one website. DECOLLAB features a simple, delta-based version control software that allows users to save their changes and view revision histories of their code. And of course, the most important part about DECOLLAB is that it is built on the Internet Computer blockchain, whose decentralized nature gives users full control over their repositories. \n \n\n On the Internet Computer, DECOLLAB is a two-canister, backend-frontend system. The frontend canister hosts the website and user interface that was demoed. Based on user actions, this canister makes calls to the backend canister, written in Motoko, which stores and manages the data associated with the repositories.\n \n\n What's next for DECOLLAB\n \n\n Firstly, exposing the full features of Git to a decentralized, web-hosted code editing and repository management program would allow more experienced coders to take advantage of the benefits that DECOLLAB provides. While the primary goal of DECOLLAB is its simplicity, appeal to a wider group of the programming industry would greatly foster the growth of this software. Furthermore, I plan to have DECOLLAB integrate further with the capabilities of the Internet Computer. One such feature is Internet Identity, which would provide users with secure authentication and more organized control over their repositories.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "decollab#@#@#html#@#@#javascript#@#@#motoko#@#@#internet-computer#@#@#decollab offers a singular, streamlined platform for coders to seamlessly work on projects together quickly and effectively.",
    "tags": [
      "html",
      "javascript",
      "motoko",
      "internet-computer"
    ]
  },
  {
    "id": "arena-project",
    "name": "Arena Project",
    "description": "The project sets out to create a game that hosts its entire backend and executes logic within the IC. The project continues to expand and game-agnostic, engine features can be used by other games.",
    "image": "arena-project.gif",
    "links": {
      "github": "https://github.com/wasolomon98/ArenaProject",
      "external": "https://supernova.devpost.com/submissions/334296-arena-project",
      "otherLinks": []
    },
    "submitterFirstName": "wasolomon98",
    "submitterLastName": "Solomon",
    "about": "Inspiration\n \n\n The project was inspired by strategy roleplaying games (sRPG) such as Final Fantasy Tactics, Fire Emblem, XCOM, Disgaea and other notable franchises that have built unique experiences centered on tactics-heavy, turn-based combat that allows players to take full advantage of 3D environments' cover and scalability. While many of these offer tightly knit, well balanced experiences for their player-versus-enemy (PVE) campaigns, there is a notable vacuum of player-versus-player (PVP) equivalents in the industry. My goal is to leverage the power of the Internet Computer and the Motoko programming language to build an on-chain sRPG that allows players to import self-customized NFT characters into their game session. Because the IC offers extremely low costs for data storage and on-demand processing, I've been inspired to make it my platform for game design, seeking to prove what's possible with well designed smart canister code.\n \n\n What it does\n \n\n The current build initializes a Session, the primary data type of the Arena Project ecosystem. When the smart contract allocates memory for two players to play the game, it generates a Session to manage all gameplay between the two players. Within the Session is a Zone class object that in turn fields two (customizable) teams of 3 character (Mobs), allowing them to move and attack on command. While the prototype lacks a front end, most of the key data types exist in some form and deliver debug information when the project is initialized in a local environment. In lieu of full-fledged NFTs, the game takes a collection of 'Champions' (NFT precursors) and bundles them into an immutable array fed into the Session class. The Session convers the Champion data into derivative Mobs and eventually placed within simulated 3d space (an array indexing (X, Y, Z) coordinates). While the game is only a fraction of the eventual goal, there are several useful tools and methods on display that I've begun to develop while working with the Motoko programming language. At runtime in a local environment, the game places the user in control of the Thief Mob on teamA. The Thief showcases basic functionality and is able to move and attack, as showcased in the project's video demo link.\n \n\n How we built it\n \n\n The current prototype was effectively built in three stages that were heavily influenced by my Dfinity grant schedule. The first two weeks were used to build several orthogonal modules that tested several early features in isolation. Although it was useful for working on functions and object classes in an isolated workspace, it taught the important lesson that unless data is being passed between canisters, it's preferable to keep data at least partly compiled; this may, notably, change in an upcoming build due to the stack being completed up to the Session level*. In the second two weeks and up until the first grant milestone's deadline (June 2nd), development started on actual game functionality. Mob movement was introduced alongside rudimentary movement. The first showcase video allowed mobs to be freely selected, moved, and allowed them to attack with modulated damage. Since then, development has started focus on completing itself to the Session-level of the stack (which, at the time of submission, has been completed). Project design has been completed within VS Code using PowerShell to launch the program in the local environment, a method that was showcased during the Motoko bootcamp and one I've grown to endorse.\n *The Session level allows for external modules imported to main.mo to be handled from within the Session object without exposing certain implementations. This will be reflected in code as additional pattern matching implementation that streamlines initialization and allows for more easily traced data flow.\n \n\n Challenges we ran into\n \n\n As stated above, early orthogonality ended up being as much a setback as it was a boon. While it didn't hamper functionality or object coding directly, it did require more direct integration of several classes into a single file rather than letting them occupy their own separate modules. While orthogonality isn't wholly present now, future builds will continue to reimplement this separation. Developing with Motoko canisters in mind was, generally, a new experience that required me to adapt new techniques when assembling the project prototype into a more functional product. The only other large issue that springs to mind were the List object class behaving oddly (with buffers eventually providing superior functionality) and over/underflow errors with no line number appearing during project launch in the local environment - though this was more a warning call to add additional debug messaging to track where errors had occurred during the Session's initialization.\n \n\n Accomplishments that we're proud of\n \n\n Above all else, I'm proud to have met me goal of completing the program up to the session level and now having a better idea of the project's trajectory. With sessions implemented, greater orthogonality can be implemented which simultaneously allows more class-specific development and refinement in isolated modules. Tangential to Session's completion also comes the introduction of the Champion data type which can easily be substituted with other data types or sources such as external NFTs, allowing development to begin on a separate ledger canister that can have its data read by the game session canister. Ultimately, the baseline prototype provides a collection of tools that are necessary for the next stage of the development process to begin.\n \n\n What we learned\n \n\n The hackathon provided indispensable experience with the Motoko programming language and has provided me the opportunity to develop methodologies for programming with smart canisters in mind. I had the opportunity to implement pattern matching techniques with variant types and found alternatives to array manipulation using the Buffer type among other tools. This also gave me the opportunity to practice managing my own project as I talked to a select number of VCs about what I was building and learned about what it takes to begin a startup. The project not only let me further develop my programming skills but my business abilities as well.\n \n\n What's next for Arena Project\n \n\n As stated above, the Arena Project is currently a part of the Dfinity grant program and its next milestone will be due at the start of next month. In the coming two weeks, I will be squashing bugs and refining already implemented mechanics in time for the showcase. With most parts of the core game framework completed, I'll be transitioning towards ensuring the already implemented parts of the project are fully functional. With the upcoming dispersal of grant funds, the associated team artist will begin work on showcase assets in Blender to eventually be used as part of a frontend/game renderer in Unity that will be bundled with the game when actually deployed to the IC. The project's road ahead is not a short one, but I'm excited for all the challenges that come with it regardless of the hackathon's outcome; the Arena Project is something I'm incredibly passionate about.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "arena project#@#@#motoko#@#@#internet-computer#@#@#visual-studio-code#@#@#candid#@#@#javascript#@#@#the project sets out to create a game that hosts its entire backend and executes logic within the ic. the project continues to expand and game-agnostic, engine features can be used by other games.",
    "tags": [
      "motoko",
      "internet-computer",
      "visual-studio-code",
      "candid",
      "javascript"
    ]
  },
  {
    "id": "presto:-escrow-title-and-trust-dapp",
    "name": "PRESTO: Escrow, Title, & Trust dApp",
    "description": "Presto is an Internet Computer dApp for creating and managing escrows & trusts and for registering ownership of any type of property on-chain.",
    "image": "presto:-escrow-title-and-trust-dapp.png",
    "links": {
      "github": "https://github.com/hafezrouzati/presto",
      "livePreview": "https://3us5k-qyaaa-aaaak-qap3a-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/330797-presto-escrow-title-trust-dapp",
      "otherLinks": []
    },
    "submitterFirstName": "Hafez",
    "submitterLastName": "Rouzati",
    "about": "Inspiration\n \n\n We believe that the escrow & title process should be transparent, accessible, and on-chain which led us to create PRESTO.\n \n\n What it does\n \n\n PRESTO is an Internet Computer dApp for creating and managing escrows & trusts and for registering ownership of any type of property on-chain.\n \n\n PRESTO provides the ability to create multi-party escrows with time and condition based unlock subject to the parties’ explicit approval through the dApp user interface\n \n\n All data (recorded as escrow events) related to the escrow, such as important documents (i.e. inspections, operating agreements, cap table, title etc.) including documenting transfer of ownership are managed and stored on-chain and accessible to relevant parties through a single URL.\n \n\n How we built it\n \n\n We built the project using dfx CLI, Motoko, Internet Identity, IC Ledger and Vue.js\n \n\n Challenges we ran into\n \n\n Getting Internet Identity running locally was a bit of a challenge. Overall the development process on IC was great.\n \n\n Accomplishments that we're proud of\n \n\n This was our first project developed using IC and we are very proud that we were able to build a working prototype.\n \n\n What we learned\n \n\n We learned how to use Motoko and dfx for building projects on the Internet Computer.\n \n\n What's next for Presto\n \n\n This version of PRESTO is a proof-of-concept and we are interested in bringing a full-featured version to market \n Lots of enhancements in future versions",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "presto: escrow, title, & trust dapp#@#@#dfx#@#@#motoko#@#@#vue#@#@#internet-identity#@#@#ic-ledger#@#@#presto is an internet computer dapp for creating and managing escrows & trusts and for registering ownership of any type of property on-chain.",
    "tags": [
      "dfx",
      "motoko",
      "vue",
      "internet-identity",
      "ic-ledger"
    ]
  },
  {
    "id": "cyclesdao-frontend",
    "name": "CyclesDAO frontend",
    "description": "The CyclesDAO is a configurable canister that allows to decentralize the powering-up of your canisters by giving to people who send cycles rewards and power in the governance.",
    "image": "cyclesdao-frontend.png",
    "links": {
      "github": "https://github.com/sardariuss/CyclesDAO",
      "external": "https://supernova.devpost.com/submissions/328532-cyclesdao-frontend",
      "otherLinks": []
    },
    "submitterFirstName": "Tanguy",
    "submitterLastName": "Prudat",
    "about": "Inspiration\n \n\n The idea of the CyclesDAO comes from the ICDev community (see bounty #17). I applied for this bounty because I feel like this is defintly something that developers will want to use, myself included. The CyclesDAO canister, combined with a DAO, allows every devloper who wants to deploy something on the IC to just open up the funding of their project to the investors, for 0 cost! \n \n\n What it does\n \n\n It simplifies the management of cycles, make it more transparent, and incentivize people to use decentralized services that run on the IC!\n \n\n How we built it\n \n\n The backend is built in motoko. The front-end is built in react/typescript and uses graphjs a lot.\n \n\n Challenges we ran into\n \n\n I had close to no experience in web front-end. It was hard to get everything I wanted out of the box from Graphjs, so I had to pull some tricks! Also testing is never easy, e.g. I couldn't do everything I wanted with ic-repl, like creating wallets and accounts in the scripts. Last challenge was being able to advance while working also on the Leap project.\n \n\n Accomplishments that we're proud of\n \n\n Even if simple, the front-end looks good and it will help people to understand how the CyclesDAO works and incentivize them to use it!\n \n\n What we learned\n \n\n Using tailwind and react mostly. Getting more and more efficient at coding in motoko and running dfx commands.\n I enjoyed learning how to code with functional components in react, and having type in typescript feels good compared to javascript!\n \n\n What's next for CyclesDAO frontend\n \n\n Next thing I want to do is to connect the frontend to plug, so the user can directly send cycles through the frontend. Even if by design the CyclesDAO is not a DAO per say, because it should be configurable with any DAO, I'd like to have a default DAO that could come with it and being able to open proposals and vote on it in the frontend.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "cyclesdao frontend#@#@#react#@#@#typescript#@#@#motoko#@#@#the cyclesdao is a configurable canister that allows to decentralize the powering-up of your canisters by giving to people who send cycles rewards and power in the governance.",
    "tags": [
      "react",
      "typescript",
      "motoko"
    ]
  },
  {
    "id": "veta",
    "name": "Veta",
    "description": "Bringing data ownership back to its user",
    "image": "veta.jpg",
    "links": {
      "github": "https://github.com/sworks89/veta",
      "livePreview": "http://veta.icp.xyz/",
      "external": "https://supernova.devpost.com/submissions/334489-veta",
      "otherLinks": []
    },
    "submitterFirstName": "Mark",
    "submitterLastName": "Albitos",
    "about": "Inspiration\n \n\n Have you ever wondered why some websites and apps are free in the traditional Web2.0? As the saying goes, “if the service is free, you are the product”. This has made tech giants like Facebook and Google a profitable business model by using the data of its users. Since Web3.0 is emerging, it is time to decentralize this process and bring back data ownership to its users. This emerging trend has been mainly our inspiration to change how data is being used today.\n \n\n What it does\n \n\n Veta comes from \"Verified Data\" and \"Verita\" in latin meaning truth. Veta is not just a dApp but an ecosystem. We aim to build the identity layer and an ecosystem of verifiable data on the internet computer. To achieve this, the decentralized business model requires a storage for data (Veta Wallet), a new data marketplace platform (Veta Center) and unit of exchange (Veta Token). \n \n\n Users will be able to login, sync, and manage their data using the Veta Wallet on our initial platforms (Veta Social, Veta Marketplace, Veta Learning). \n \n\n Data consumers will be able to have a central point of access to the ecosystem’s collective data assets through the Veta Center. This will serve as the main platform for users to retrieve data sets based on their queries and needs.\n \n\n link\n \n\n Over time, the Veta ecosystem will forever be expanding and growing its data as we partner with other web3 platforms, legacy systems, and even web2 applications. Veta will launch a DAO and treasury to give bounties to build for future data providers in the ecosystem. In the future, the DAO will fully govern and steer the direction of the Veta ecosystem. Users will have the power to vote on proposals depending on their voting power and in special cases selected users who are more appropriate to be the decision makers depending on their credentials and data like location, skills, etc.\n In addition to that the ecosystem will be powered by the Veta Token that will help incentivize the users and maintain a growing economy.\n \n\n How we built it\n \n\n Veta is built using motoko, typescript, and react as our technology stack.\n \n\n Challenges we ran into\n \n\n The main challenges we ran into was basically learning motoko which is very new to us and most of all time constraints since we have only been able to work on Veta on the side. One of the main technical challenges we had is designing the data architecture as we wanted it to be decentralized.\n \n\n Accomplishments that we're proud of\n \n\n We are proud of what we have done as this was an incredible learning for us, it inspires us to continue this project even after Supernova.\n \n\n What we learned\n \n\n The main thing we learned in doing this project is the huge potential of the internet computer and how it compares to other blockchains. We believe web3 will be truly realized in the internet computer as it is able to scale in web speed and cheap computational costs.\n \n\n What's next for Veta\n \n\n Veta is definitely a project to watch out for, we are just getting started. We will continue our roadmap and deliver an improved MVP with or without funding. See our proposed roadmap below.\n \n\n Phase 1 - MVP\n Launch Veta Wallet\n Features\n User Dashboard (Profile/Data management)\n KYC provider (proof of humanity)\n Add/Sign/Verify documents\n Add/View connected platforms\n Sync Data from platforms (web3)\n Data sharing (QR code)\n End to End Encryption\n \n\n Launch Veta Center\n Features\n Data Issuer Dashboard (Profile/Data management)\n Services\n Data aggregation (simple/fixed query)\n Decentralized voting/survey\n \n\n Launch Veta Social\n Features\n Veta wallet integration\n Social network management\n Content management\n \n\n Phase 2 - Adoption\n Launch Veta Tokens\n Integrate token utility to Veta services\n Launch Veta DAO\n Implement DAO governance to manage upgrades, changes, proposals, fund and grant allocation.\n Veta Wallet Update\n Features\n Veta Login\n Grant/Revoke Data for Platform\n Decentralized Identifiers (ZK proofs)\n Token integration\n \n\n Veta Center Update:\n Features\n Governance Dashboard (Vote, Create/View proposal)\n Data Requests\n Token integration\n API management / 3rd party integration\n Services\n Data aggregation (complex/custom query)\n Data mining\n Data streaming\n Release Service APIs\n \n\n Veta Social Update:\n Features\n Marketplace\n Groups\n Targeted ads\n \n\n Phase 3 (Expansion)\n Big Data + AI\n Features\n Big Data and AI engine integration for data processing\n Services\n Big Data analytics\n Predictive Data\n Data Visualization\n Internet of Things (IoT)\n Features\n Digital identity for machines",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "veta#@#@#motoko#@#@#react#@#@#typescript#@#@#bringing data ownership back to its user",
    "tags": [
      "motoko",
      "react",
      "typescript"
    ]
  },
  {
    "id": "dfx-agent",
    "name": "dfx agent",
    "description": "A easy way to learn & execute internet computer dfx commands.",
    "image": "dfx-agent.png",
    "links": {
      "github": "https://github.com/samshi/dfx-agent",
      "external": "https://supernova.devpost.com/submissions/333096-dfx-agent",
      "otherLinks": []
    },
    "submitterFirstName": "sam",
    "submitterLastName": "shi",
    "about": "Inspiration\n \n\n \n\n dfx command cli system is a large sets of commands, hard to remember and use. So I develop a agent to help me write commands\n \n\n \n\n What it does\n \n\n \n\n I setup a nodejs web server and a single html page. html page request command and the server exec the command and response the result to the html page.\n html page can remember all the subcommands and options, so the user just pick what he want without input command.\n \n\n \n\n How we built it\n npm install\n node app.js\n \n\n \n\n visit dfx agent at localhost:3000\n \n\n \n\n Challenges we ran into\n \n\n \n\n some command work fail such as \n \n\n dfx start\n dfx identity new xxx\n \n\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n the dfx agent help me know all the command in a very short time, I can't leave it.\n \n\n \n\n What we learned\n \n\n \n\n I have the idea for a long time, SUPERNOVE inspire me finished it. It's not so difficult as imagination\n just do it.\n \n\n \n\n What's next for dfx agent\n \n\n \n\n more friendly user interface\n multi country language",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "dfx agent#@#@#node.js#@#@#express.js#@#@#jquery-like-tools#@#@#a easy way to learn & execute internet computer dfx commands.",
    "tags": [
      "node.js",
      "express.js",
      "jquery-like-tools"
    ]
  },
  {
    "id": "daoworld",
    "name": "DaoWorld",
    "description": "First #Dao management tool on IC, welcome any project that needs funds, community, and governance.",
    "image": "daoworld.gif",
    "links": {
      "github": "https://github.com/ic-daow/daow",
      "livePreview": "https://e6np3-zyaaa-aaaah-aapaq-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/330705-daoworld",
      "otherLinks": [
        "https://twitter.com/DfinityDaoWorld",
        "https://www.youtube.com/watch?v=0R1dziSG6K0"
      ]
    },
    "submitterFirstName": "Ahna",
    "submitterLastName": "Earth",
    "about": "Inspiration\n \n\n There are a few DAO tools in the IC ecology and a lack of DAO management tools, existing financing tools cannot manage the use of funds projects raised. DAO World wants to protect investors and nourish projects.\n \n\n What it does\n \n\n \n\n Create a DAO for the project within the project introduction, official website, social media, raising target, release time, release rules, and other financing information.\n Invest in projects, transfer, lock, and claim ICP.\n Release ICP in accordance with financing rules.\n Supervise and accomplish the proposals in DAO.\n \n\n \n\n How we built it\n \n\n \n\n Sort out the application scenarios, list what problems we can solve\n Build a backend canister to deploy the asset receive, transfer, and claim rules.\n Build frontend canister to display and upload.\n Build a picture storage canister.\n \n\n \n\n Challenges we ran into\n \n\n \n\n There are few DAO projects on the IC, and there is not much to learn from.\n DAO's proposal may not be implemented.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Temporarily use manual review of the project's on-chain assets\n Solve the relationship between investment and voting power without tokens.\n Supervise and accomplish proposals on Daoworld, such as team members, project name, and the financing process.\n \n\n \n\n What we learned\n \n\n \n\n It's important for DAO to own canisters, not only do project creators hold the canister for functionality and composability.\n It's important to have a token standard and let the DAO hold the tokens.\n \n\n \n\n What's next for DaoWorld\n \n\n \n\n Manage the audit mechanism through a special DAO (IDO.DAO).\n Solve the problem of token issuance",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "daoworld#@#@#rust#@#@#motoko#@#@#vue#@#@#javascript#@#@#first #dao management tool on ic, welcome any project that needs funds, community, and governance.",
    "tags": [
      "rust",
      "motoko",
      "vue",
      "javascript"
    ]
  },
  {
    "id": "deswap-orderbook",
    "name": "DeSwap Orderbook",
    "description": "An Order Matching Engine Module for Dex in Motoko.",
    "image": "deswap-orderbook.png",
    "links": {
      "github": "https://github.com/iclighthouse/DeSwap-Orderbook",
      "livePreview": "https://pk6zh-iiaaa-aaaaj-ainda-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/334440-deswap-orderbook",
      "otherLinks": []
    },
    "submitterFirstName": "William",
    "submitterLastName": "Simpson",
    "about": "Inspiration\n \n\n Most of the traditional financial market exchanges use the order book model, which has a good user experience. Can a Dex developed on the ic network achieve similar trading functionality and user experience as a Cex?\n \n\n This is what we think about, and what we want to do. \n \n\n To develop orderbook Dex on IC, an order matching engine is necessary for order management and order matching. Order matching engine module is the core of Dex, it is reusable and lowers the barrier for Dex developers.\n \n\n What it does\n \n\n DeSwap Orderbook is an order matching engine module for the development of Dex, in Motoko language. \n \n\n \n\n \n\n The Matching Engine takes orders as an input, matches them and produces trades as an output. DeSwap Orderbook implements a price-time priority matching algorithm (FIFO): orders are first ranked according to their price; orders of the same price are then ranked depending on when they were entered. \n \n\n DeSwap Orderbook supports various order types like limit orders (LMT), market orders (MKT), Fill-And-Kill orders (FAK), Fill-Or-Kill orders (FOK).\n \n\n How we built it\n \n\n The matching engine makes a difference between incoming orders and book orders. Strictly speaking, an incoming order is an order that is in the process of being entered, and a book order is an order that is in the order book already.\n \n\n \n\n \n\n To get a general idea of a matching engine, you can consider it as a function that takes an order (1) and an “order book” (2) as input parameters, and gives back a list of trades (3) plus all the remaining orders (4). The remaining orders will become the “order book” for the next order received by the matching engine.\n \n\n \n\n Fully filled order\n \n\n \n\n An order will match fully if its entire open quantity is executed. Since there is nothing left to match, a fully matched book order is removed from the order book, and a fully matched order that is in the process of being entered, is not written to the book.\n \n\n \n\n Partially filled order\n \n\n \n\n Or an order matches partially, if not all its open quantity is executed. In this case an order that was already on the order book remains on the order book, and an order that is in the process of being entered and is not an FOK order, is written to the order book. The quantity that was executed is removed from the open quantity and added to the accumulated executed quantity.\n \n\n \n\n No match\n \n\n \n\n Where there is no match, the order becomes a resting order and is directly included in the order book.\n \n\n \n\n A order involved in multiple executions\n \n\n \n\n It is possible for a single order to get involved in multiple executions at different points in time. For example, an order may be partially executed upon entry, while the remaining open order remains in the order book. The open portion may then be executed a minute later, an hour later, or even days later.\n \n\n \n\n Matching principles\n \n\n \n\n When orders are entered into the central order book, they are sorted by price, time. There are different algorithms available for matching orders, and DeSwap Orderbook has chosen the First-In-First-Out (FIFO) algorithm.\n FIFO is also known as a price-time algorithm. According to the FIFO algorithm, buy orders take priority in the order of price and time. Then, buy orders with the same maximum price are prioritized based on the time of bid, and priority is given to the first buy order. It is automatically prioritized over the buy orders at lower prices.\n \n\n Challenges we ran into\n \n\n Implementing all of the classic order book trading rules on ic smartcontract has faced a number of challenges. We are gradually working through them.\n \n\n Accomplishments that we're proud of\n \n\n DeSwap OrderBook has been implemented to support 4 order types such as Limit Order (LMT), Market Order (MKT), Fill and Kill Order (FAK) and Fill or Kill Order (FOK).\n \n\n We have implemented a Demo of orderbook Dex that supports trading pairs of DIP20, DRC20 standard tokens with native ICP. https://pk6zh-iiaaa-aaaaj-ainda-cai.raw.ic0.app/\n \n\n What we learned\n \n\n There is great potential for developing Dex based on IC networks.\n \n\n What's next for DeSwap Orderbook\n \n\n We plan to open source the DeSwap Orderbook module, which can be used by any Dex for development.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "deswap orderbook#@#@#motoko#@#@#an order matching engine module for dex in motoko.",
    "tags": [
      "motoko"
    ]
  },
  {
    "id": "doap",
    "name": "Doap",
    "description": "Bringing POAP (proof of participation) to the Internet Computer",
    "links": {
      "github": "https://github.com/picsoung/doap-dfinity",
      "external": "https://supernova.devpost.com/submissions/334336-doap",
      "otherLinks": []
    },
    "submitterFirstName": "Nicolas",
    "submitterLastName": "Grenié",
    "about": "Inspiration\n \n\n POAP is form etherum\n \n\n What it does\n \n\n How we built it\n \n\n Challenges we ran into\n \n\n Accomplishments that we're proud of\n \n\n What we learned\n \n\n What's next for Doap",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "doap#@#@#motoko#@#@#react#@#@#stoic#@#@#bringing poap (proof of participation) to the internet computer",
    "tags": [
      "motoko",
      "react",
      "stoic"
    ]
  },
  {
    "id": "dface.cam",
    "name": "dface.cam",
    "description": "Unity OpenCV dlib app with AI metaverse NPCs on the IC blockchain",
    "image": "dface.cam.gif",
    "links": {
      "github": "https://github.com/yosun/dfacecam",
      "livePreview": "https://xwbiq-aaaaa-aaaak-ab6kq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334397-dface-cam",
      "otherLinks": [
        "https://drive.google.com/drive/folders/1ubDYFSxOL1yR9-zERNZLWhuGUC4z_KfI?usp=sharing"
      ]
    },
    "submitterFirstName": "Yosun",
    "submitterLastName": "Chang",
    "about": "Inspiration\n \n\n That face on Mars but on a black plane in a blue sky world of IC....,. \n \n\n What it does and How to Use It\n \n\n dface.cam is the first Unity OpenCV with dlib face tracking and AI metaverse character app on the IC blockchain.\n We show the Dlib 68 feature point .dat ML model converted into a retro 8 bit look using Imgproc as a stylized retro face outline on a black ground plane in a blue sky world. This is a fully 3D environment - use WASD keys to move around and your mouse to rotate your view. \n \n\n Connect with your metaverse NPCs. You can also click on any of the AI wandering characters to see from his or her perspective, on the top viewfinder window.\n \n\n dface.cam opens blue skies for anyone using Unity OpenCV to build the future of HCI on the IC blockchain. \n \n\n Simply grab the Unity webgl project from github and deploy it! Or check it out live on IC on the link below (please let it load, tested on a gigabit network). \n \n\n How we built it\n \n\n \n\n dfx dfinity\n OpenCVForUnity (latest)\n Dlib (latest)\n Some Unity C#\n Unity 2020.3.27f1 WebGL\n \n\n \n\n Challenges we ran into\n \n\n \n\n Creating a new canister for StreamingAssets and then streaming a large .dat file into Unity WebGL\n differences between local and main net\n adding in the .raw.ic0.app subdomain to load the larger dlib ML model file \n It turns out that Unity 2021 triggers some ICP incompatibilities, so reverting to Unity 2020 fixed things\n \n\n \n\n What's next for dface.cam\n \n\n Very excited to deploy WebGL AR and computer vision apps on IC, and this serves as a jumping point. \n \n\n I've built many award winning apps using OpenCV dlib - for example, the makeup and AR try-on cross-platform WebGL and iOS/Android app faceStylr, which won TechCrunch Disrupt Grand Prize 2018 - which could all run on IC!",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dface.cam#@#@#unity#@#@#webgl#@#@#opencv#@#@#dlib#@#@#dfx#@#@#dfinity#@#@#icp#@#@#ic#@#@#c##@#@#unity opencv dlib app with ai metaverse npcs on the ic blockchain",
    "tags": [
      "unity",
      "webgl",
      "opencv",
      "dlib",
      "dfx",
      "dfinity",
      "icp",
      "ic",
      "c#"
    ]
  },
  {
    "id": "dmail-network",
    "name": "Dmail Network",
    "description": "Construct DID in Web 3.0, Not Just an Email. Will be a basic infrastructure tool, flow portal and DID for users to come into the Web 3.0 era.",
    "image": "dmail-network.png",
    "links": {
      "github": "https://github.com/dmailoffcial",
      "livePreview": "https://evyc3-ziaaa-aaaak-aam5a-cai.ic0.app/inbox",
      "external": "https://supernova.devpost.com/submissions/326888-dmail-network",
      "otherLinks": [
        "https://dmail.ai/",
        "https://dmail.ai/presale",
        "https://twitter.com/dmailofficial",
        "https://discord.gg/QbvaeqwMFg",
        "https://medium.com/@dmail_official"
      ]
    },
    "submitterFirstName": "DMail",
    "submitterLastName": "Official",
    "about": "Inspiration\n \n\n The first message the Internet sent was “L” and “O”. At 10:30 pm, Oct. 29, 1969, Kleinrock, in Los Angeles, A message was sent to Bill Duval at Stanford University. This was a five-letter word: Login. After entering “L”, the system broke down. The instrument showed that the transmission system collapsed. Therefore communication was forced to stop. The world's first communication test through the Internet only transmitted two letters, which were “O”, marking the creation of the rudiment of the Internet based on information transmission.\n \n\n What it does\n \n\n The transmission of a string of words opened the door to the Internet, thus beginning the booming development of the Internet. In the Crypto World, we also hope to take information transmission as a starting point and promote a leapfrog development of applications in the blockchain ecosystem. Therefore, we established a decentralized version of NFT mail application called “Dmail”.\n \n\n Based on features of Web3.0 and Dfinity (Internet computer) technology, with mail application as the entrance, Dmail lowers the threshold for users and developers to participate in the Crypto World by enabling smooth transmission of information between traditional mail and blockchain mail, users hereby can use blockchain as if they use the Internet. We hope that Dmail serves as a basic portal to the blockchain world and a gateway to the real world in the future.\n \n\n Meanwhile, Dmail will also be the first mailbox that is 100% developed by Web 3 technologyy. Dmail will be an entrance to the blockchain universe and a gateway for Web 2.0 users to experience convenient blockchain services. In the future, Dmail is expected to become a decentralized identity to Web 3.0 and a linkage between Web 2.0 and Web 3.0 users, as Dmail is committed to work on allowing 4 billion email accounts around the world to possess a Dmail address.\n \n\n How we built it\n \n\n To solve problems of interaction, communication and information sharing between on-chain and off-chain users, we developed a distributed application called Dmail.\n \n\n Dmail is the first mail application based on Web3.0 and Dfinity technology that integrates NFT and distributed storage functions, and is dedicated to building a bridge between the traditional world and the parallel world. Compared with traditional mail, Dmail gives rights of control back to users. Users can manage and access data with their private keys, and can also determine the future trend of the product through community Governance. Dmail is committed to providing users with a permanent service without a centralized server, and meanwhile ensuringe the ownership and privacy of data.\n \n\n Dmail is the foundation of communication, information sharing and collaboration of on-chain and off-chain users in the future. Specifically, it will serve as the basic communication and cooperation tool of the blockchain world, and the gateway for information exchange between the blockchain world and the real world. As an information interaction gateway in the new era, it will help users connect the whole blockchain world and the real world, and help users, developers, institutions and assets to build reliable interactive connection and build an information storage space that will never be lost in the blockchain world. In this way, we believe that it can better serve the blockchain world and the real world, and enables everyone an access to an equal access to different worlds.\n \n\n Challenges we ran into\n \n\n Every startup you know faces a variety of difficulties, which include funding, partners, technology, consensus, environment, etc. Dmail was started after Dfinity Foundation announced Grant because we saw the direction, but due to Motoko, Rust's language was not popular, technical documentation was not perfect, Canister We did face more difficulties and adjustments at the beginning of the venture due to issues such as Motoko, Rust's language not being popular, technical documentation not being perfect, and Canister not being stable. In addition, funding is also a big threshold for an emerging ecology that is not sought after by capital, which also leads to all kinds of problems at the financing level, but the good thing is that the Dmail team has persevered with its own funds, and has been recognized by more and more capital, users and communities.\n \n\n Accomplishments that we're proud of\n \n\n Oct 18, 2021, Demo Test Launched.\n Oct 31, 2021, Dfinity Hackathon Winner.\n Nov. 30, 2021, Seed funding closed.\n Dec. 4, 2021, NFT account pre-sale.\n Dec. 24, 2021, Showcase on Dfinity website.\n Feb. 1, 2022, Brand upgrade.\n Feb. 8, 2022, Strategic funding closed.\n Feb. 11, 2022, $25,000 grant from Dfinity foundation($5,000 before).\n Mar 21, 2022, Presale holders break 11,000+. \n Apr 2, 2022, Selected to IC Bootcamp.\n May 18, 2022, 3D Crystal NFTs Launched.\n June 1, 2022, Beta Network Launched.\n \n\n What we learned\n \n\n Dmail is one year old, and in the process, our team has expanded from 3 to over 20 people, including people in technology, product, operations, marketing, design, and finance, which is great to give back, and of course we have dozens of Mods and Ambassadors around the world.Then Dmail got 2 rounds of funding, 30,000+ Twitter and Discord users, which is the result of the team's efforts and our honor. Thank you to everyone who supported DMAIL.\n \n\n By the way, Dmail and IC ecological more than ten projects reached a cooperation, mutual willingness to provide technical, product, marketing and other support, which will help promote the development of Dmail and IC, I hope more users attention to.\n \n\n What's next for Dmail Network\n \n\n Dmail has just launched on the beta network, which is a great start. Next, the team will focus on product feature iteration and performance optimization, and then work towards multi-login, access to Web 2.0 mailboxes, plug-in wallets, protocol layers, collaboration tools and decentralized identity.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dmail network#@#@#rust#@#@#motoko#@#@#python#@#@#iccdk#@#@#java#@#@#amazon-web-services#@#@#mysql#@#@#construct did in web 3.0, not just an email. will be a basic infrastructure tool, flow portal and did for users to come into the web 3.0 era.",
    "tags": [
      "rust",
      "motoko",
      "python",
      "iccdk",
      "java",
      "amazon-web-services",
      "mysql"
    ]
  },
  {
    "id": "smartie-nft",
    "name": "Smartie-NFT",
    "description": "Bringing value back to the art of learning.",
    "image": "smartie-nft.gif",
    "links": {
      "github": "https://github.com/RES-lab/smartie-nft",
      "external": "https://supernova.devpost.com/submissions/328365-smartie-nft",
      "otherLinks": []
    },
    "submitterFirstName": "Ezechukwu",
    "submitterLastName": "Chinedu",
    "about": "Title: SmartieNFT\n \n\n Abstract: SmartieNFT is Dapp built on the Internet Computer that issues a premium NFT to People of Value (POV). It aims to poach the top performers in various areas and provide them with a potential reward (NFT) for their top value. This will help the POV to receive the gratification for their excellence faster.\n \n\n Introduction: SmartieNFT basically gives an NFT to the people with top value in their fields. It aims to reward and encourage excellence by making it easier and faster for POV to be recognised by POV chasers. POV Chasers could be institutions, businesses or other people that need the services of the POV.\n \n\n Problem definition: The problems How easily can POV be identified or verified? Chasers who need POV currently have to verify their credentials, experience or track record by themselves. SmartNFT does this verification and issues a certified premium NFT to the POVs. How can excellent performance be encouraged and rewarded? SmartieNFT will eventually motivate people to strive for excellence in their academic pursuits or workplace in order to stand out and belong to the SmartieNFT hall of fame.\n \n\n High level solution: SmartieNFT verifies the POV and issues the SmartieNFT to the POV. Any holder of SmartieNFT is seen as certified for the said excellent performance.\n \n\n Solution details: SmartieNFT has a verification process that the POV goes through before receiving the SmartieNFT. The whole verification process is outlined below sequentially.\n -POV declares value. The value could be an academic credential, work experience referral, track record or the likes.\n -POV selects category of value.\n -POV fills user data form.\n -POV fploads evidence of the value.\n -POV submits value for verification.\n -SmartieNFT sends an email to the issuer of the declared value.\n -SmartieNFT sends verification decision to the POV.\n -POV accepts or appeals the decision.\n -For appeal, SmartieNFT begins an investigation. For acceptance, POV receives SmartieNFT.\n -POV declares areas of interest to offer expertise.\n -POV declares availability or unavailability.\n -POV applies for available or accepts offered opportunities.\n \n\n After the POV has submitted the information listed above, SmartieNFT sends an email to the institution where the POV obtained the declared value for verificaton. The verification result could be positive or negative depending on whether the declared value is authentic and verifiable. When SmartieNFT receives a response to the verification email, then a decision is made based on the response.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust",
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "smartie-nft#@#@#rust#@#@#react#@#@#javascript#@#@#css3#@#@#html#@#@#github#@#@#cargo#@#@#linux#@#@#motoko#@#@#bringing value back to the art of learning.",
    "tags": [
      "rust",
      "react",
      "javascript",
      "css3",
      "html",
      "github",
      "cargo",
      "linux",
      "motoko"
    ]
  },
  {
    "id": "icp.net",
    "name": "ICP.NET",
    "description": "C#/.NET candid and http agent library",
    "image": "icp.net.gif",
    "links": {
      "github": "https://github.com/Gekctek/ICP.NET",
      "livePreview": "https://f76k2-siaaa-aaaal-aaoba-cai.raw.ic0.app/d/icp-for-dotnet-developers",
      "external": "https://supernova.devpost.com/submissions/329814-icp-net",
      "otherLinks": []
    },
    "submitterFirstName": "Ethan",
    "submitterLastName": "Celletti",
    "about": "Inspiration\n \n\n I wanted to learn more about the details of ICP. My strongest programming language is C#/.Net so I figured I would start there. Building something not exciting helps not only me learn but for the ecosystem to grow by being able to use .Net with IC\n \n\n What it does\n \n\n My set of libraries allows .Net code to easily communicate with canisters throught the Http boundry nodes. Its essentially just another Agent implementation.\n Nuget packages\n \n\n \n\n EdjCase.ICP.Candid - library to allow the use of candid types and conversion between C# classes/built in types with candid data structures\n EdjCase.ICP.Agent - library containing the http agent implementation\n EdjCase.ICP.ClientGenerator - library/dotnet cli tool to automatically generate C# source code based off of a .did file. Creates an api client and type files based on the service definition\n \n\n \n\n How we built it\n \n\n Lots of documentation/spec reading and looking at other agent implementations. Came from the approach of making it user friendly, which is the main reason why I also built the Client Generator, because i know implementing api clients is a pain.\n \n\n Challenges we ran into\n \n\n Binary encoding and other highly technical parts of the code. Hard to convert binary (which can be little or big endian) to anything without lots of trial and error.\n Making Candid types and C# types work well together. One big one was Variants, because C# doesn't have that kind of data structure. \n \n\n Accomplishments that we're proud of\n \n\n The whole thing in general. Got a good sense of whats really happening with API calls and candid in general. Also the client generator was cool because not only have I never done source code generation but I think it can be really helpful for people who just want to start programming against the IC with no overhead.\n \n\n What we learned\n \n\n So much about the ICP, Candid, encodings and Internet Identity.\n Also powerful variants can be and C# needs them. As a .Net developer, its something I want to use everyday but cant.\n \n\n What's next for ICP.NET\n \n\n Probably a lot of bug fixes, but the only main thing I want to do after this initial release is better authentication integration, especially with frontend Blazor. Right I am essentially hacking the dfinity/agent-js library to get the Internet Identity response to then use in C# code. It would be nice to have that more integrated",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "icp.net#@#@#c##@#@#.net#@#@#dotnet#@#@#http#@#@#icp#@#@#c#/.net candid and http agent library",
    "tags": [
      "c#",
      ".net",
      "dotnet",
      "http",
      "icp"
    ]
  },
  {
    "id": "candid-intellij-plugin",
    "name": "Candid Intellij Plugin",
    "description": "A Candid language plugin that provide a complete support to efficiently edit .did files.",
    "image": "candid-intellij-plugin.png",
    "links": {
      "github": "https://github.com/Alaanor/candid-intellij-plugin",
      "external": "https://supernova.devpost.com/submissions/331891-candid-intellij-plugin",
      "otherLinks": []
    },
    "submitterFirstName": "Maxime",
    "submitterLastName": "Bonvin",
    "about": "Inspiration\n \n\n When I first started playing around with internet computer, I noticed the lack of any kind of support for candid file. On a random day a few after the supernova hackathon was announced, I started thinking it would be cool to use this opportunity to learn about how to parse a language and add IDE support to it. Candid was the perfect candidate for that.\n \n\n I knew since the beginning that I had to take a major decision: IntelliJ-based IDE vs Language Server Protocol. It wasn't possible to make both, the implementations are different. That choice was done purely by personal preference.\n \n\n What it does\n \n\n Make it possible to open a candid (.did) file and have multiples expected feature such as:\n \n\n \n\n ❌ Syntax Errors\n 💡 Syntax Highlighting\n ⌨️ Auto Completion\n 🔍 Find Usage\n 💄 Code Format\n 🦀 Rust integration\n \n\n \n\n How I built it\n \n\n Started to learn about how to make an IntelliJ plugin in kotlin even before the hackathon started, already bootstrapped the project with the basic done. Once the hackathon started, during each weekend I added features by iterations. There were three main stages I focused on:\n \n\n \n\n 📦 Minimal viable product (v0.0.1)\n 🪄 Adding features related to candid (v0.0.1 to v0.2.0)\n 🦀 Rust integration (v0.3.0)\n \n\n \n\n It was important for me to have the initial version very quickly v0.0.1 so I could setup the github actions for CI/CD and have a proper release flow. Thanks to the template Jetbrains provide, almost everything was already done for me.\n \n\n Challenges I ran into\n \n\n Learning BNF grammar and JFlex was definitively the first challenge I had. It was something completely new and I'm really happy to now know these. This part is what took me most of my time before the hackathon started.\n \n\n There is something I couldn't solve unfortunately, the usage of recoverWhile attribute in BNF. I have spent way more time I should have and still couldn't fully understand how this attribute works and how I could use it in my situation.\n \n\n Timing was also an issue, as I'm working alone and have a full time job, only the weekends were available to me, aiming small and evolving by iteration mostly solved that.\n \n\n Reading the Candid spec was fun but also a challenge, I definitively had to read this document multiple time word by word. I learned a lot from it.\n \n\n Although Jetbrains provided an excellent documentation it was still hard to understand at first how thing should be done. That was yet another thing to learn. But now after a few weeks I finally understand well enough to be comfortable using these docs.\n \n\n Rust integration was also a challenge. I had to read some part of the intellij-rust code source to understand how I could traverse through the rust language and what indexes were available to me, what were my limitation, etc.\n \n\n Accomplishments that I am proud of\n \n\n At the beginning of the project I knew I was doing something beyond my current skill and there were good chance that I would just give up and move on. I am therefore proud of:\n \n\n \n\n Having learned a lot.\n Having finished the project and made it usable.\n Made something beyond my skills.\n Made the rust integration.\n \n\n \n\n What I learned\n \n\n A lot. BNF, JFlex, Candid, how to make a IntelliJ plugin, a custom language support. I wasn't so familiar with kotlin and gradle either. When documentation isn't an all-in-one solution, browsing the code made by others is the only solution.\n \n\n What's next for Candid IntelliJ Plugin\n \n\n Honestly I don't think the plugin should aim for much more feature. I'm more heading toward stabilization. Which means mostly documenting, adding units test, improving the quality of the codebase, improving performance where needed and fixing remaining bugs.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "candid intellij plugin#@#@#kotlin#@#@#candid#@#@#bnf#@#@#jflex#@#@#intellij-idea#@#@#a candid language plugin that provide a complete support to efficiently edit .did files.",
    "tags": [
      "kotlin",
      "candid",
      "bnf",
      "jflex",
      "intellij-idea"
    ]
  },
  {
    "id": "makabaka",
    "name": "Makabaka",
    "description": "Build Web3 trusted foundation applications that allow a secure and compliant way to experience decentralized live services, NFT gifts, and more.",
    "image": "makabaka.jpg",
    "links": {
      "github": "https://github.com/helloHC/makabaka",
      "livePreview": "https://benha-kaaaa-aaaal-qaxnq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334231-makabaka",
      "otherLinks": []
    },
    "submitterFirstName": "冲",
    "submitterLastName": "贺",
    "about": "We aim to build the first decentralized pan-entertainment platform in the blockchain world at icp, which we call “Makabaka”.  \n \n\n Inspiration\n \n\n \n\n  Common live-streaming platforms will charge very high commissions, which leaves live streamers with a low share of incomes.\n  The platforms, instead of their users, have the ownership of the created contents. Therefore, platforms can earn most of the revenues by trading the contents created by their users.\n Assets on these platforms are not transferable. Users can only trade within certain platforms.\n The autarchy of platforms mean they have absolute control over the users, and can make exclusive decision to close or ban the user accounts. Once the users are banned/blocked, they will lose all their properties.\n Now, we utilize the blockchain technology to perfectly address this inequality issue.\n \n\n \n\n What it does\n \n\n In order to improve the user experience and add some interest, we will initially provide live-streaming function for the users, and will add games, NFT gifts and other elements later on. \n \n\n How we built it\n \n\n Users can quickly and safely join live streams, meetings and online conversations through icp Internet Identity with very low costs, but to gain more profits.\n Users’ assets will be recorded on the blockchain and be owned truly by themselves, free to be transferred and given away. We will also establish a fairer and more just mechanism to manage and protect the benefits of our users, and will reward those who comply with the rules in the meanwhile.  \n \n\n Challenges we ran into\n \n\n Despite our ambitious vision, we still need to integrate relevant resources and fundings. For now, we are determined to design and develop it first, and then to integrate a stronger team. \n \n\n Accomplishments that we're proud of\n \n\n We aim to build a platform with users of a billion-level access, and our team is currently working hard to build the basic functions. we will surely succeed. Look forward to your attention and support. \n \n\n What we learned\n \n\n DFINITY open-source software development kit (SDK) builds apps based on Motoko's container smart contracts. DFINITY is more efficient and more open for both developers and users. It not only has the operating speed of the Internet, the decentralization of the blockchain, but also the unlimited capacity that beyonds the Internet or the blockchain, allowing its users to enter the encrypted world from the real one with nearly zero perception.  \n \n\n What's next for makabaka\n \n\n In the next stage, we will optimize and improve the live-streaming function and add NFT-related contracts. Subsequently, we will tailor more fun ways to use our platform. Our product has many prospective benefits and will come through eventually.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "makabaka#@#@#motoko#@#@#react#@#@#typescript#@#@#agora#@#@#build web3 trusted foundation applications that allow a secure and compliant way to experience decentralized live services, nft gifts, and more.",
    "tags": [
      "motoko",
      "react",
      "typescript",
      "agora"
    ]
  },
  {
    "id": "mops",
    "name": "MOPS",
    "description": "Motoko package manager with on-chain package registry",
    "image": "mops.png",
    "links": {
      "github": "https://github.com/ZenVoich/mops",
      "livePreview": "https://distrikt.app/u/mops",
      "external": "https://supernova.devpost.com/submissions/327907-mops",
      "otherLinks": [
        "http://mops.one/",
        "https://twitter.com/mops_one"
      ]
    },
    "submitterFirstName": "Zen",
    "submitterLastName": "Voich",
    "about": "Inspiration\n \n\n When I started depeloping on IC using Motoko I felt a strong lack of a convenient package manager.\n \n\n In my opinion, a powerful package manager is a \"must have\" for modern programming languages.\n \n\n How we built it\n \n\n Steadily with struggle.\n \n\n Challenges we ran into\n \n\n Canister scalability.\n \n\n Pitch recording.\n \n\n Accomplishments that we're proud of\n \n\n We have created a complete set of good package manager: CLI/registry/explorer.\n \n\n Infinitely scalable file storage on IC.\n \n\n What we learned\n \n\n Internet Computer. Motoko.\n \n\n What's next for MOPS\n \n\n \n\n Private packages\n Script run (mops run test)\n Speedup publish/install\n Cache packages\n Website improvements (user profile, package dependencies, dependents, version history, download stats)\n @scoped/packages\n \n\n \n\n \n\n \n\n Is it already working?\n \n\n Yes! You can install and publish packages!\n \n\n Is it open source?\n \n\n Yes! MOPS is completely open source!",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "mops#@#@#ic#@#@#motoko#@#@#svelte#@#@#typescript#@#@#node.js#@#@#motoko package manager with on-chain package registry",
    "tags": [
      "ic",
      "motoko",
      "svelte",
      "typescript",
      "node.js"
    ]
  },
  {
    "id": "sand-bless-unction",
    "name": "Sand Bless Unction",
    "description": "Bless your artwork using owned crypto-marks.",
    "image": "sand-bless-unction.png",
    "links": {
      "github": "https://github.com/branciard/sandblessunction",
      "livePreview": "https://qob3k-7yaaa-aaaao-aahdq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333601-sand-bless-unction",
      "otherLinks": [
        "http://www.sandblessunction.com"
      ]
    },
    "submitterFirstName": "francois",
    "submitterLastName": "branciard",
    "about": "Inspiration\n \n\n \n\n Machines vs Humans work\n \n\n \n\n How to valorise and not vaporize men and women with the emergence of automation and machine productivity ?  \n \n\n Where to pursue the “march of progress” ?\n \n\n Craftsmen artworks will always be more expensive than machining products but we must engrave a new narrative.\n Can we use cutting edge crypto to derail and redistribute the cards' chains of values?\n How to differentiate, from an end user perspective, machining products from artwork ones?\n We must promote and expand de-anonymization of goods.\n Creation of a digital reference that can create a breadcrumb trail between producers and consumers, work, worker and work fruits.\n Sharing values, expectations, compliments and feedback.\n \n\n \n\n Immaterial values\n \n\n \n\n Imagine, as a stonemason, I can hand-made stone cutting your entrance house.\n Which design do you like ? Which culture or part of history do you prefer ?\n I can make a similar architecture style to fulfill your taste with a breadcrumb trail created. Which music do you like?\n I can listen to it while producing work, artwork for you, and impregnate the vibe you like into the realization.\n Adding immaterial values. Machines can't do that.\n \n\n Story, storytelling, told work stories. Sealed a work story. Immaterial values, links and bridges.\n \n\n \n\n From steganographic to cryptographic marks\n \n\n \n\n Where to begin ? Marks. Mark of the shop. Marks on artwork and products. \n \n\n Ancient cathedral builders used to engrave lapidary marks on stone to identify their tasks and atelier. Can we imagine XXieme lapidary marks ? From ancient steganographic techniques to modern public and transparent cryptographic techniques. \n \n\n A digital mark to engrave on your physical artwork. \n \n\n \n\n Marks as a service, self-owned and public\n \n\n \n\n As a Craftsman, I do not want intermediaries to store and maintain ledger of my products and artwork references. But I also do not want an IT infrastructure to maintain, servers, databases resources, website, backup etc ...\n \n\n The ideal is a public anchor. Simple. Secured. Personal. With no login passwords. Independent from external services. Visible on public ledger with time and tamper cryptographic proofs. \n Internet computer, Dfinity canisters, 100% on chain, check all the boxes.\n \n\n \n\n Who are we\n \n\n \n\n We try to use technology where it makes sense.\n Machining signatures and crypto-tech marks to valorise manual work and human values. This is what we strive to do.\n We are two ingenious/engineers/entrepreneurs, Nour and Francois, longing for innovation and social impact. Let’s present to you what we have developed, ... so far...\n \n\n What it does\n \n\n The website allows all craftsmen to generate a unique mark to be tagged on their artworks.\n The best way to tag this mark is to sand blast it.\n You can sandblast on glass, wood, clay, metal etc ...\n It is like a blessing part of your finished work, ready for its sale and customers' diaspora journey. The signature phase. Signature is a common universal phase of mankind creation. At least since reinforcement of properties since Hume, Locke, Smith theories...\n \n\n This mark adds a physical reference linked to a digital representation of the work and the worker creation.\n This action of adding digital reference on the physical creation is what we call “unction”.\n Blessing, unction and as the favored technique is sand blasting, the name of this project became :  \n \n\n Sand Bless Unction : “Bless your artwork using owned-crypto marks.”\n \n\n Here the workflow process to use the website :\n \n\n \n\n Enter Sand Bless ceremony\n \n\n \n\n To generate marks you need to be identified.\n To do so, we used Internet Identity. It can be secure using multiple device and using hard wallet for instance.\n \n\n \n\n Gift of prayer\n \n\n \n\n When you are logged in with internet identity, the ceremony of creating marks can start. Logged, you are named Sand Bless Priest in the website to add fun and blessing perspective of this action. The generation of a unique mark is called \"gift of prayer\" in our imaginary blessing scenario.\n \n\n \n\n Unction sandblasting ritual\n \n\n \n\n Then you can tag the mark, unction, the sandblasting ritual, to create this bridge between physical and digital representation. Polymorphic, physical & digital, a new artwork is created, in a sense.\n \n\n \n\n On chain faith \n \n\n \n\n When you tag the QR code on the physical, you are redirected to the front-end canister where you can check existence and last ownership.\n In the website, you can retrieve all your marks by searching with your identity ID.\n You can also search existence and ownership of mark by mark ID.\n Those search functionalities are available for all public, without login. \n \n\n \n\n Sand Bless Unction Credo\n \n\n \n\n To sum up the how-to usage for the sand bless unction utility website is :  \n \n\n \n\n Enter Sand Bless ceremony : login with Internet Identity\n Gift of prayer : receive a unique blessed mark to tag your artwork\n Unction ritual : sand blast QR code mark on your artwork\n On chain faith: check artwork QR code mark existence and ownership\n \n\n \n\n How we built it\n \n\n \n\n on chain\n \n\n \n\n We start from svelte-motoko-starter kit.\n Then we add NFT dip721 standard functionalities inspired by dip-721-nft-container mokoto example.\n We decide to remove the guardians users rights to allow all, not anonymous, identity to mint dip721 token representing their unique mark needing to tag on their artwork.\n The dip721 collection is named “Sand Bless Unction” and the dip 721 symbol is \"SBU\".\n We develop locally the 2 canisters then push it to production:\n \n\n Frontend canister\n \n\n Backend canister  \n \n\n We create sandblessunction.com; redirecting to the frontend canister.\n \n\n \n\n off chain\n \n\n \n\n To tag the mark on artwork, we use : \n \n\n \n\n A printer.\n Transparent sheets\n Self-Stick photo-resist films\n UV-Exposure Unit with vacuum\n Jet-washer to reveal on film \n Sandblasting cabinet with air compressor.\n \n\n \n\n You can see all machines operating in the video.\n \n\n Challenges we ran into\n \n\n \n\n Challenges \"on chain\" we ran into\n \n\n \n\n Versioning  \n \n\n It was quite difficult to harmonize all versions of Dfinity components and resources found to setup and build a local environment :\n \n\n \n\n Last dfx sdk and version used on example projects may reserve some surprises.\n node js to build internet identity repository to simulate a local internet identity, was not the same as the node js that was working to build svelte-motoko-starter example. At some point, the local dfinity cache and dfx start --clean was not enough to restore things. A brutal rm -rf .dfx was the solution. But it is good to learn along the way. With these errors, it is a good way to understand and see how it works under the hood.\n \n\n \n\n Dfinity cycle  \n \n\n I was not possible to obtain with dfinity faucet. So, I dissolve some ICP to have cycle to use for production deployment.\n \n\n Bug in Motoko dip-721-nft-container example ?  \n \n\n At some point our frontend starts to show that an identity has \"stolen\" another mark from another identity. After investigation, it may be an issue in the Motoko dip-721-nft-container backend example.\n The proposed fix in this PR solves our ownership jungle problems and worries. \n \n\n \n\n Challenges \"off chain\" we ran into\n \n\n \n\n QR Code format\n \n\n It was a challenge to find the correct size of the QR code to be printed on a bottle. If too small, sandblasting cannot be performed with enough details, if too big, the round bottle deforms the QR code shape and scan do not work properly. This is why in the video you see several QR code on a bottle to find the best QR code size. At the beginning of tests, an exotic QR code design was used, but it was too difficult to scan.\n \n\n Sandblasting on different supports.  \n \n\n Sandblasting on different materials required to adapt the film size used ( 3, 4, 5 mm) and also QR code size. Abrasive to use and exposition duration is also an expertise to build.\n \n\n Copy and counterfeit ?  \n \n\n This project does not pretend to solve counterfeit and copy problems. We know that it is a real problem and whatever techniques, we think this problem will remain. But here our position and proposal here is :  \n \n\n Copy ? Yes, copy me. I do not care. It will increase the reputation of my atelier as long as your are speaking of me and I can prove that I am the first creator of this identity.\n \n\n Expert and observed quality will still be necessary to tackle and discover counterfeit.\n \n\n Accomplishments that we're proud of\n \n\n Successfully put all pieces, on chain and off chain, together to produce a concrete crypto and blockchain use case.\n Bridge the physical and digital world.\n Use Dfinity ability to produce and replace IT frontend and backend infrastructure, with secure and temper proof guarantee, in a small, but concrete, craftsmanship needs.\n Use a new technology to highlight artwork and valorise craftsmanship. \n Testing solution validity on several materials, mainly glass, where it can be easily commercialized.\n \n\n What we learned\n \n\n Based on the overcome challenges, we learn to dive into svelte framework, usage of motoko and dfinity internet identity.\n We also explore sandblasting techniques and what it is technically possible in terms of size format and surface support to elaborate a better commercial offer in the future. \n \n\n What's next for Sand Bless Unction\n \n\n \n\n Improve QR code design with possible logos customization.\n Develop on this initial root code base, with initial pilot users, to respond as much as possible as daily life craftsmanship needs.\n Then, we will target a branding campaign allowing artists, artisans and manufactures to personalize their work while pinpointing their own identity, making their products or pieces unique.\n Introducing the project to different sectors. Explore several contexts for artists, craftsmen or production ( wine ...).\n We plan also to exchange with certification industry experts to nourish our solution with best practice in terms of recovery mechanism or legal requirements and copyrights.\n Study and work on social or professional internet identity recovery mechanisms (guardians ? ) for a transparent usage in craftsmanship business operations.\n \n\n \n\n We envision also new features with an accurate usage of metadata offered by the dip721 NFT standard, for instance :\n \n\n \n\n Implement transfer of marks and build front end interface to visualize artwork ownership history. From creator to collectors.\n Adding photos by the current user, reducing the counterfeit thanks to the story and the breadcrumb trail of the created artwork. \n Play with this ownership history in this new playground for artwork as glimpsed at this TEDX few years ago, before NFT hype.\n Study DAB solution integration to support several NFT standards.\n \n\n \n\n We are open to collaborate with Craftsmen, personally owned workshops, businesses and even participants of this Hackaton on the mid-/long-term. \n \n\n Thats all folks, dear reader, thank you for your attention, may the Sand Bless Unction be with you.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "sand bless unction#@#@#mokoto#@#@#svelte#@#@#javascript#@#@#sandblasting#@#@#internetidentity#@#@#dfinity#@#@#bless your artwork using owned crypto-marks.",
    "tags": [
      "mokoto",
      "svelte",
      "javascript",
      "sandblasting",
      "internetidentity",
      "dfinity"
    ]
  },
  {
    "id": "eonia",
    "name": "EONIA",
    "description": "EONIA is a decentralized real estate platform that allows users to buy sell and tokenize their real estate platform.  Introducing 3d scanning with mobile to upload 3d models of the property.",
    "image": "eonia.png",
    "links": {
      "github": "https://github.com/mdgolammafuz/EONIA",
      "external": "https://supernova.devpost.com/submissions/334586-eonia",
      "otherLinks": []
    },
    "submitterFirstName": "Jainam",
    "submitterLastName": "Shah",
    "about": "Inspiration\n \n\n So the inspiration of this project came to me when i was out to buy a house . I realized the real estate market is oversaturated and needlessly complicated for buyers and sellers\n \n\n What it does\n \n\n Our application allows buyers to browse through 3d models of real estate properties and filter properties by location and cost to find the perfect fit. Without having to visit dozens of properties. Sellers can upload a video of their house and Spectre3Ds machine learning algorithms will convert it to 3d model. This house can be tokenized and then bought and sold. In the future sellers and buyers will be required to upload legal documents alongside our template\n \n\n How we built it\n \n\n We build it using html css react and icp. We used ipfs for file storage and icp for tokenization.\n \n\n Challenges we ran into\n \n\n We faced problems in integrating different parts of the project together since its a really complex project with lots of different parts and functionalities. \n \n\n What's next for EONIA",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "eonia#@#@#html5#@#@#css#@#@#react#@#@#icp#@#@#eonia is a decentralized real estate platform that allows users to buy sell and tokenize their real estate platform.  introducing 3d scanning with mobile to upload 3d models of the property.",
    "tags": [
      "html5",
      "css",
      "react",
      "icp"
    ]
  },
  {
    "id": "finterest",
    "name": "Finterest",
    "description": "The first borrowing and lending protocol on the IC utilizing native Bitcoin integration",
    "image": "finterest.png",
    "links": {
      "github": "https://github.com/torates/fICP",
      "livePreview": "https://tyhcm-sqaaa-aaaah-abjya-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329712-finterest",
      "otherLinks": [
        "https://github.com/FinterestICP/finterest-pricefeeds",
        "https://youtu.be/9vhFuKWVbwo"
      ]
    },
    "submitterFirstName": "Olliver",
    "submitterLastName": "Barr",
    "about": "Inspiration\n \n\n We've been inspired by the potential of the upcoming Bitcoin integration on ICP to create a simple and robust borrow/lending protocol to be the foundation of the DeFi ecosystem on the IC. \n \n\n What it does\n \n\n Currently it allows you to deposit ICP or XTC, and then take out a collateralized loan of ICP or XTC. Interest will accrue on outstanding loans, and as they get paid back it will create yield for those who loan assets on the protocol. We use a price feed to ensure that outstanding loans do not exceed 75% of the value of deposited assets, in the case of ICP. If, either due to price fluctuation or gained interest, the 75% collateral limit is exceeded then a liquidation event can be triggered by a liquidator. This allows anyone to repay the outstanding loans and receive the lent assets.\n \n\n The liquidation functionality is not mentioned in the demo video, as its heavily untested, yet it is on the release and it can be checked on the code/candid UI of the FinRisk canister and fTokens (the liquidate()) function.\n \n\n Functionality resumed:\n \n\n \n\n Lend assets, receive fToken versions of those assets and accrue interest\n Withdraw fTokens for underlying assets\n Borrow assets against a collateral, pay interest.\n Repay an open borrow.\n Log user transactions on-chain in a Finterest Ledger canister. For example, for tax deciphering.\n Work with real, USD values of tokens. alpha version of an oracle. \n Support XDR as a stablecoin. (XTC = 1T cycles)\n BETA: Liquidate a underwater borrow (borrow value is over allowed collateral value), and take fTokens\n \n\n \n\n How we built it\n \n\n We built it from the ground up (line by line, keyword by keyword) using Motoko, Rust and React. There are a lot of borrow/lending protocols on various blockchains, so a lot of the underlying math was available. It was mostly rebuilding/reimplementing it with proprietary contracts in Motoko running on the IC. \n \n\n Challenges we ran into\n \n\n The non-atomic nature of motoko and the IC create some interesting challenges coming from a Solidity background. We had to create a proprietary payment processing canister to receive and process funds in a horizontally scalable manner. This was based off of Kyle Peacock's invoice canister design, and works around the non-atomic nature of the IC. Also the lack of price oracles or HTTPS requests as of now on the IC caused us to come up with a temporary workaround. In place of a proper decentralized oracle or HTTPS requests we have a server set up with a Rust program querying asset prices from reputable exchanges. Using a private key this then updates our FinRisk canister with the average of the prices.\n \n\n A big challenge is also the async model of the IC, as new security concerns and complexity is added to developing. In the end, asynchronous programming is vastly superior to synchronous systems, and it's the only way to develop a truly scalable blockchain\n \n\n Accomplishments that we're proud of\n \n\n We're proud of overcoming both of the challenges that we mentioned in the previous section. Additionally, we've seen great support from the ICP community on the whole, people seem to be extremely excited about our protocol. We have a great time who has done a great job working together to help create this protocol and we are super excited to see it come to fruition once the BTC integration goes live.\n \n\n What we learned\n \n\n We learned a ton about developing on the IC, and on the whole it has been an incredibly positive experience. Motoko is a fun language to pick up after spending so much time with Solidity and Rust, and it has been a breeze creating the front ends for the IC. We were expecting a lot more resistance in the development process, but besides a few hiccups it has gone extremely well.\n \n\n What's next for Finterest\n \n\n We're planning on launching a main-net release of Finterest once the Bitcoin integration goes live and we can get our contracts fully audited. We're shooting to become the bedrock of the DeFi ecosystem on ICP, and want to open source our code to help jumpstart other DeFi builders in the ecosystem. We also want to help the IC by developing and open sourcing backend infrastructure - kickstarting the new wave of DeFi, asynchronous DeFi",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "finterest#@#@#rust#@#@#motoko#@#@#react#@#@#icp#@#@#blockchain#@#@#the first borrowing and lending protocol on the ic utilizing native bitcoin integration",
    "tags": [
      "rust",
      "motoko",
      "react",
      "icp",
      "blockchain"
    ]
  },
  {
    "id": "droid-wars",
    "name": "Droid Wars",
    "description": "Play to earn droid parts",
    "image": "droid-wars.jpg",
    "links": {
      "github": "https://github.com/cryptosebek/droid-wars",
      "external": "https://supernova.devpost.com/submissions/334044-droid-wars",
      "otherLinks": []
    },
    "submitterFirstName": "Crypto",
    "submitterLastName": "Sebek",
    "about": "General description\n \n\n This is a metaverse game running on the internet computer in the Sport Action genre about tournaments and battles of unique customized robots. Every part of the robot is an DIP-721 standard NFT. The player selects robots, improves them, enters into battles, and takes part in tournaments competing with other players for the new robot parts.\n \n\n Game design documents\n \n\n Game Design - General Document\n \n\n DW Functional Design - Movement & Weapon\n \n\n DW Construction and Upgrades\n \n\n DW Functional Design - Arenas and Fights\n \n\n Contract assumption\n \n\n Currently there's just a two smart contracts as a proof of concept. One is implemented as DIP721 describing DroidPart with a following metadata:\n {\n Owner,\n Cost,\n Type,\n Health,\n Damage\n }\n \n\n And a second contract which is triggered from game backend, which is responsible for changing the owner of the Droid Parts depending on who won the battle. Only the parts which were destructed/detached are counted.\n \n\n How to run project\n \n\n 1) Checkout git repo\n \n\n 2) Make sure credentials are set to proper backend url and smart contract address\n \n\n 3) Switch to Unity WebGL platform\n \n\n 4) Follow default guide",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "droid wars#@#@#unity#@#@#c##@#@#javascript#@#@#play to earn droid parts",
    "tags": [
      "unity",
      "c#",
      "javascript"
    ]
  },
  {
    "id": "blotch",
    "name": "Blotch",
    "description": "Blotch is the first social media fully on ICP that supports rich content (no IPFS or Arweave). With dynamic canister creation and tokenized reporting, Blotch is both scalable and empowers all users.",
    "image": "blotch.png",
    "links": {
      "github": "https://github.com/am0rlock/blotch",
      "livePreview": "http://blotch.one",
      "external": "https://supernova.devpost.com/submissions/334149-blotch",
      "otherLinks": []
    },
    "submitterFirstName": "am0rlock",
    "submitterLastName": "Vangati",
    "about": "Inspiration\n \n\n We found that most on-chain social media platforms have a variety of issues that would hinder their mass adoption as a dominant social media platform of the future. Platforms would use decentralized alternatives like IPFS and Arweave to bypass storage limitations, meaning they were not fully on-chain. On top of that, due to platforms’ uses of inter-blockchain coordination, problematic content could never be fully removed, with only the link to the content being severed. Dapps that were fully on-chain had issues with scalability, as they would use a single canister model, limiting the dapps’ size to approximately 4gb. Other social media currently not depending on decentralized alternatives were also found to be heavily dependent on Web2 services, requiring media to be linked from Web2 platforms like Google Drive or Dropbox. \n \n\n In response, we wanted to create a social media platform that was highly scalable, not hindered by storage limits and provided a content moderation system that the everyday user could effectively control and place their trust in. By addressing these three pillars of social media development, we could provide a valuable platform for mass adoption to propel ICP into the mainstream and beyond.\n \n\n What it does\n \n\n Blotch is the first fully on-chain social media platform to post and react to content on Web3 that is not reliant on any other blockchain (IPFS, Arweave, etc.). Created with Motoko, Blotch has three unique advantages to be the social media of the future: mainstream scalability through dynamic canister creation, reduced reliance on slow update calls by taking full advantage of query calls, and user-controlled moderation through the use of tokens. \n \n\n How we built it\n \n\n Blotch was built in just 6 weeks by two developers. The backend was built using Motoko and the frontend was built using React. \n \n\n Challenges we ran into\n \n\n We had a big problem with balancing platform functionality while not compromising on speed. To attain an acceptable speed, we would have to utilize an architecture that would minimize update calls. Blotch was redesigned three times before discovering the backend architecture that met our requirements. \n \n\n Our second major issue was building a frontend in react that could be hosted in an asset canister. We wanted to use react to build a responsive and accessible UI. \n \n\n Finally, we were challenged since we wanted to integrate internet identity into Blotch, as this feature would allow users to login with different devices across the world in a secure manner. \n \n\n Accomplishments that we're proud of\n \n\n We are proud of the fact that we were the first to be able to contribute the first truly on-chain platform in a potential major component of Web3’s future: social media. The opportunity to be a precedent setting pioneer amongst fellow innovators in an industry that we are truly passionate about in its early stages is a dream come true.\n \n\n What we learned\n \n\n While the unprecedented technological potential of ICP has been heralded since its inception, it was not until this hackathon that we truly understood the scalability of ICP and the unique advantage of its low-cost infrastructure. Being able to develop this platform in a mere 6 weeks, we also realized just how accessible ICP’s infrastructure and Motoko was to develop with and innovate on. \n \n\n What's next for Blotch\n \n\n We are committed to consistently improving and building upon the foundation we have currently built for Blotch during this hackathon. Besides continuous quality-of-life updates, we plan to implement three major features in the future: video sharing, a personalized recommendation algorithm and private messaging.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "blotch#@#@#motoko#@#@#react#@#@#javascript#@#@#bash#@#@#blotch is the first social media fully on icp that supports rich content (no ipfs or arweave). with dynamic canister creation and tokenized reporting, blotch is both scalable and empowers all users.",
    "tags": [
      "motoko",
      "react",
      "javascript",
      "bash"
    ]
  },
  {
    "id": "dev-pouch",
    "name": "Dev-Pouch",
    "description": "Dev-Pouch is a simple desktop IC wallet based on the Tauri framework.",
    "image": "dev-pouch.gif",
    "links": {
      "github": "https://github.com/GLicDEV/dev-pouch",
      "external": "https://supernova.devpost.com/submissions/326893-dev-pouch",
      "otherLinks": []
    },
    "submitterFirstName": "GLicDEV",
    "submitterLastName": "Gldev",
    "about": "Inspiration\n \n\n DevPouch is a sample desktop app built on top of the Tauri framework.\n \n\n What it does\n \n\n The app itself is a very minimal implementation of a wallet on the IC network, based on the identity that dfx uses to deploy canisters.\n \n\n How we built it\n \n\n DevPouch is built with React on the \"front-end\", and it is a very simple one page app. It does not use the agent-js library for communicating with the IC ecosystem, all the calls are being routed through the rust \"backend\"\n \n\n Challenges we ran into\n \n\n While Tauri is an awesome project with a ton of strong points, it is still young compared to Electron. I've prototyped some functionality that ended up being dropped due to platform glitches (e.g. the file drag & drop is buggy on Linux). Another pain point was that the automated github build for Windows errored out due to some SSL configuration on the build VM, so I had to chose only Linux and MacOS for the moment. \n \n\n What we learned\n \n\n Rust rocks?! \n \n\n One of the key advantages of using Tauri, and the reason why I wanted to explore the ecosystem, is that we can reuse code very easily. The JS code can be written with zero knowledge about IC, crypto, web3, etc. With a React custom hook for example, the front-end developers have a straightforward experience, similar to using the Fetch API.\n \n\n What's next for Dev-Pouch\n \n\n I think there are a lot of cool things that can be developed on top of Tauri. I initially envisioned DevPouch as a GUI companion to dfx, and some potential features include:\n \n\n \n\n Creating easy point & click experiences for creating new asset canisters, and drag&drop support for uploading files\n Tracking & controlling canisters deployed on the IC (via APIs like icscan) - I had some functionality prototyped for this, but I had to scrap it due to time constraints.\n Adding any open rust-based libraries that the community creates (like a easy-to-use backup library that allows you to get your canisters backed-up on your local machine)",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "dev-pouch#@#@#rust#@#@#tauri#@#@#react#@#@#dfx#@#@#dev-pouch is a simple desktop ic wallet based on the tauri framework.",
    "tags": [
      "rust",
      "tauri",
      "react",
      "dfx"
    ]
  },
  {
    "id": "ant-kingdoms-free-play-and-earn-nft-game",
    "name": "Ant Kingdoms, Free play-and-earn NFT Game",
    "description": "Ant Kingdoms Free play-and-earn NFT Game is a decentralized game built and runs on Internet Computer.",
    "image": "ant-kingdoms-free-play-and-earn-nft-game.png",
    "links": {
      "github": "https://github.com/NFPTU/dfinity-fu",
      "livePreview": "https://fpi33-7qaaa-aaaai-acatq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/326844-ant-kingdoms-free-play-and-earn-nft-game",
      "otherLinks": [
        "https://dfinity-fu.gitbook.io/gamefi-ant"
      ]
    },
    "submitterFirstName": "Tian",
    "submitterLastName": "Ng",
    "about": "Inspiration\n \n\n Our team is made by a group of friends at the same university working on a graduation thesis. The passion of our team is to develop a game about a tiny little ant that only has a few in the game marketplace. Our main focus is to build a community around the Internet Computer with relaxing gameplay and long-term development by adding battle and social features through NFTs and Tokens.\n \n\n What is Ant Kingdoms\n \n\n Ant Kingdoms, Free play-and-earn NFT Game is a decentralized game built and runs on the Internet Computer blockchain. Our team strives to deliver a revolutionary P2E game that transforms existing Play-to-earn games into a relaxing zone. Moreover, players can enjoy an exciting playground and high-profit stream at an identical time.\n \n\n Users can log in with their Internet Computer to play for free, no need to have tokens to get started. Earn your first Land and Queen Ant just by clicking on the \"Claim\" button. Ant Kingdoms is a farming and strategy game where you can command your army ant into a battleground to destroy the opponent's Land and claim that Land. \n \n\n There is a wide variety of Game NFTs from Land, Queen Ant, Worker Ant, and Army Ant from common, uncommon, rare, epic, and legendary all usable in the game. Players can upgrade their NFTs by resource in-game which is farmed by Worker Ant. \n \n\n We are developing a world map for players to have the battle function, currently working on the upgrade where we can burn resources in-game, and designing NFTs.\n \n\n How we built it\n \n\n The game is fully built on Internet Computer blockchain, with JavaScript, ReactJs framework for front-end development, and Motoko for blockchain development. It is playable in the web browser by using your Plug wallet, Internet Identity.\n \n\n Challenges we ran into\n \n\n \n\n Learning a new coding language Motoko.\n First-time create a game application, especially gameFi.\n Applying Motoko in gameFi.\n Spent more time than normal to design fully decentralized the battle P2P function in Motoko.\n ## Accomplishments that we're proud of\n \n\n \n\n Creating first free, play to earn NFT game in Internet Computer.\n Integrating with Plug Wallet, Internet Identity and more in future, allowing users to login, claim free NFT in Ant Kingdom\n Building a testnet version connected ICP-powered service.\n ## What we learned\n We learned a lot about the technologies that are now pushing the blockchain. Each of us watched hours of videos and read a range of document , workshop of Supernova hackathon.\n We had no prior expertise with ICP as developers, so building a full-stack application that included authentication and the game of NFTs was a daunting task for us. But fortunately with the help of the community, so we were able to test and deploy our application.\n \n\n \n\n \n\n What's next for Ant Kingdom, Free play-and-earn NFT Game\n \n\n In the short term, we intend to tidy up the backend, fix some potential bug.\n We feel there is immense potential with Ant Kingdom.From Ant NFT we can continue to develop the features : \n \n\n \n\n Token and tokennomic.\n \n\n \n\n Marketplace: easy exchange Ant kingdom game assets.\n Adventure: Players lead their Ant armies to exploit hidden reward tokens in the new lands using tactical strategies.\n Battle P2P: Players lead their Ant armies to raid other players’ lands to “rob” the resources.\n Arena: Players lead their Ant armies to enter uncompromising head-to-head confrontations to conquer lands in huge Planet map .\n We see our Ant Kind can become the Axie Infinity for Internet Computer.",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ant kingdoms, free play-and-earn nft game#@#@#icp#@#@#motoko#@#@#javascript#@#@#plug#@#@#react#@#@#ant kingdoms free play-and-earn nft game is a decentralized game built and runs on internet computer.",
    "tags": [
      "icp",
      "motoko",
      "javascript",
      "plug",
      "react"
    ]
  },
  {
    "id": "flippy-(nft-barter)",
    "name": "Flippy (NFT Barter)",
    "description": "Wouldn't it be cool if we could trade NFTs as we did with trading cards when we were kids? \"Flippy\" is the first platform in the Internet Computer ecosystem that enables the direct exchanges of NFTs.",
    "image": "flippy-(nft-barter).png",
    "links": {
      "github": "https://github.com/Japan-DfinityInfoHub/nft-barter",
      "livePreview": "https://a2tci-laaaa-aaaap-qamkq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333202-flippy-nft-barter",
      "otherLinks": [
        "https://github.com/Japan-DfinityInfoHub/generative-art-nft"
      ]
    },
    "submitterFirstName": "hoo",
    "submitterLastName": "san",
    "about": "Inspirations\n \n\n Wouldn't it be cool if we could trade NFTs directly with each other as we did with trading cards when we were kids?\n In InternetComputer, the primary way to get NFTs is to purchase them in marketplaces using cryptocurrencies such as ICP or WICP. There is currently no way to exchange NFTs trustless.\n Imagine you exchange NFTs with someone. You must agree that one of you sends an NFT to the other first, and the other sends an NFT back. In this case, there is a risk that the person receiving the NFT first may run away with it, making it impossible to exchange NFTs with peace of mind.\n Therefore, we have developed a new platform that enables the trustless direct exchanges of NFTs.\n \n\n What it does\n \n\n Flippy is a platform for the direct exchange of NFTs.\n To accomplish the trustless exchange between users, we have designed the exchange to take place on top of Canisters.\n When you want to list an NFT, you send the NFT from your wallet to your Canister. When bidding on an NFT, the bidder sends the NFT from their wallet to your Canister via their Canister. The whole process is executed on-the-fly, with the user agreeing by pressing a button on the frontend app. You choose an NFT among the bids received, and the exchange of NFTs takes place on your Canister.\n No one can control their Canister as they like and can only perform the operations that have been coded, thus making the exchange of NFTs trustless.\n \n\n How we build it\n \n\n We have developed an NFT exchange platform (Flippy) and a sample NFT (Generative Art NFT) in separate repositories.\n \n\n (1) Generative Art NFT\n \n\n \n\n The backend code is written in Motoko; the NFT complies with the EXT standard. The image assets are stored in the Canister, making it a full on-chain NFT.\n The frontend code is written in TypeScript to generate NFT images. The p5.js library was used to create generative art.\n \n\n \n\n (2) Flippy (NFT Barter)\n \n\n \n\n The backend code is written in Motoko.\n The frontend code is written in React with TypeScript. Redux was used for state management, and Chakra UI was used as the UI library. Internet Identity was used for authentication.\n \n\n \n\n Challenges we ran into\n \n\n \n\n There is not much information on Motoko on the internet, so we went through numerous trials to find the best practices to do better coding.\n All team members are backend-oriented developers, and there were no frontend engineers or designers on our team, so we struggled with UI/UX design and implementations.\n The team members were busy with their jobs and studies, so we had difficulty completing the project within the limited time frame.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n We are the first in the Internet Computer ecosystem to propose the Canister architecture for the direct exchange of NFTs trustless.\n We developed both backend and frontend functionality for the sequence of exhibiting, bidding, selection, and withdrawal for demonstrating the actual exchange using NFTs.\n We provided documentation on the Canister architecture to make it easy for other developers to understand.\n We wrote enough test codes.\n \n\n \n\n What we learned\n \n\n \n\n We learned how to create an NFT Canister.\n We learned how to write codes for transferring ownership of an NFT.\n We learned how scaling works on the Internet Computer.\n \n\n \n\n What's next for Flippy\n \n\n \n\n UI improvements\n Storing exchange history\n Develop functionality that allows NFT owners to communicate with each other\n Integration with Plug and StoicWallet",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "flippy (nft barter)#@#@#motoko#@#@#react#@#@#redux#@#@#p5.js#@#@#jest#@#@#chakra-ui#@#@#wouldn't it be cool if we could trade nfts as we did with trading cards when we were kids? \"flippy\" is the first platform in the internet computer ecosystem that enables the direct exchanges of nfts.",
    "tags": [
      "motoko",
      "react",
      "redux",
      "p5.js",
      "jest",
      "chakra-ui"
    ]
  },
  {
    "id": "petcare-solution",
    "name": "Petcare Solution",
    "description": "An Integrated platform for medical and non medical needs of pet owners",
    "image": "petcare-solution.png",
    "links": {
      "github": "https://github.com/Nitheesh-Skumar/Supernova-Pettamo",
      "livePreview": "https://pettamo.on.fleek.co/",
      "external": "https://supernova.devpost.com/submissions/334525-petcare-solution",
      "otherLinks": []
    },
    "submitterFirstName": "Nitheesh",
    "submitterLastName": "S Kumar",
    "about": "Title - Pet care solution - Pettamo\n \n\n Inspiration\n \n\n The impact of covid pandemic on the life of people is known to everyone. The struggles are known to everyone and numerous technology innovations came to light during this period to aid the humans. One of the category of people affected are Pet owners and their pets. Unable to visit Vet for medical needs, created a negative life experience for people since they care about their pets. Inadequate grooming services and other pet services were inaccesible in the locality.\n \n\n What it does\n \n\n The proposed solution is addressing the pet owners. Pet owners were unable to bring their pets to vet or go for grooming. In my solution, what I am trying to build is an inegrated petcare solution for medical and non medical needs of Pets. Teleconsulation can be booked with Vets. Online appointment can be made for other services like, grooming, walking pets etc. All these can be done in a single platform. \n There is a login and profile page for pet owners where they can update the details about their locality, their pets\n A service providers listing page is provided with filters to find the type of service provider, location, time of service etc.\n Online appointments can be booked and if it is a teleconulation, meeting link is provided in the the appointments listing page. \n Online payment can also be done after the appointment.\n \n\n How we built it\n \n\n The technology that I have identified to use are React for frontend, Nodejs for backend, Netlify to deploy the application. Need to identify a proper database. The system contains data of Pet owners, theri pets, Medical service providers, non medical service providers, Appointments, online payment facility. \n \n\n \n\n Used Agora UI for Teleconsultation if the appointment is in a future date\n Used Fleek for deploying the application ot internet computert\n \n\n \n\n Fleek brings decentralized web-hosting to the Internet Computer. \n When you first build a site on the Internet Computer (IC) through Fleek (on the site's first deployment), Fleek will create a new canister on the Internet Computer for you, with the website's content/code/files in it. This is done via the DFINITY SDK (view documentation), as Fleek interacts directly with the networks' native APIs.  \n \n\n What's next for Pettamo\n \n\n Online payment integration",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "petcare solution#@#@#node.js#@#@#react#@#@#fleek#@#@#dfinity#@#@#an integrated platform for medical and non medical needs of pet owners",
    "tags": [
      "node.js",
      "react",
      "fleek",
      "dfinity"
    ]
  },
  {
    "id": "partyboard",
    "name": "PartyBoard",
    "description": "WEB3 Metaverse&NFT Social App with inbuilt Game-Fi elements, Social-Fi Protocol, Decentralized Social Audio.",
    "image": "partyboard.jpg",
    "links": {
      "github": "https://github.com/Pabsysop",
      "livePreview": "https://www.partyboard.org/media/partyboard.v8.apk",
      "external": "https://supernova.devpost.com/submissions/334470-partyboard",
      "otherLinks": []
    },
    "submitterFirstName": "will",
    "submitterLastName": "pab",
    "about": "Inspiration\n \n\n \n\n Will used to be the station director of PKU BDWM, responsible for managing the daily operation of the BDWM BBS.\n In 2005, the Chinese Ministry of Education banned campus BBS, resulting in the loss of a large number of campus accounts and data. It is equivalent to erasing a long period of good memories of a group. At that time, Will had an idea that he must start speaking publicly on social platforms where data is permanent.\n \n\n \n\n What it does\n \n\n PartyBoard is the first web3 multi-chain social app that effectively mines by talking and sharing, it transforms value around the basic daily social activities of most people\n In addition to image and text sharing, there are more tool application scenarios, such as phone calls, conferences, events, games, live broadcasts, podcasts, and more.\n \n\n Social platform with the token economy, \n \n\n NFT level-up model, and role tasks\n \n\n Build a meaningful Web3 world network efficiently and naturally with precipitating high-quality content and a personal social value system\n \n\n Data decentralization Social credit system\n \n\n How we built it\n \n\n We made an internal version to prove that we have the technical ability to implement decentralized voice room and voice social on IC\n \n\n Challenges we ran into\n \n\n It is not easy to raise funds in a bear market. We hope to get more support to better improve the quality of our products.\n \n\n Accomplishments that we're proud of\n \n\n What we learned\n \n\n What's next for PartyBoard\n \n\n Complete the Seed round financing and build a more robust technical team",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "partyboard#@#@#rust#@#@#flutter#@#@#web3 metaverse&nft social app with inbuilt game-fi elements, social-fi protocol, decentralized social audio.",
    "tags": [
      "rust",
      "flutter"
    ]
  },
  {
    "id": "fundnation",
    "name": "Fundnation",
    "description": "Fast, secure, decentralized and affordable crowdfunding application powered by internet computer blockchain.",
    "image": "fundnation.png",
    "links": {
      "github": "https://github.com/Fundnation/Fund-Raiser",
      "livePreview": "https://jwj2d-5aaaa-aaaap-aahha-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334360-fundnation",
      "otherLinks": [
        "https://www.figma.com/file/pEOaBWUsrs3vFoPAwZao8c/Fundnation?node-id=3%3A4",
        "https://www.figma.com/proto/pEOaBWUsrs3vFoPAwZao8c/Fundnation?page-id=488%3A33640&node-id=499%3A25174&viewport=566%2C498%2C0.06&scaling=min-zoom&starting-point-node-id=499%3A25174&show-proto-sidebar=1"
      ]
    },
    "submitterFirstName": "Hilary",
    "submitterLastName": "Ogbodo",
    "about": "Inspiration\n \n\n We are inspired to solve a lot of world problems by giving users a decentralized platform to raise funds for the need of humanity.\n \n\n What it does\n \n\n Currently, the Fundnation app enables people to create fundraising campaigns free of charge on the internet computer blockchain and thereafter fees would be charged when funds are raised.\n Users would be able raise funds to solve problems and also discover solutions that requires funding.\n One differentiator about our application is that we currently do not charge any fee for Fundraisers to create projects until donations are received.\n Hopefully, there could be other unique functionalities such that pictures, drawings, animations and video NFTs that expresses emotions such as gratitude and consolation could be donated to people.\n \n\n How we built it\n \n\n We built the backend using Motoko and the frontend using JavaScript.\n \n\n Challenges we ran into\n \n\n It took us a lot of time to learn motoko and use it to build the backend\n \n\n Accomplishments that we're proud of\n \n\n Learning and building the backend with Motoko.\n The frontend and backend has been deployed to the internet computer blockchain\n \n\n What we learned\n \n\n We learnt a lot about canisters, which was a new concept. We learnt how this canisters are built, deployed and also how they are used as smart contracts.\n \n\n What's next for Fundnation\n \n\n 1) We could connect Stioc wallet.\n 2) Hopefully, we could enable users to create and donate images, videos, animations, and audios as non-fungible token so as expression of emotional support.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "fundnation#@#@#motoko#@#@#javascript#@#@#fast, secure, decentralized and affordable crowdfunding application powered by internet computer blockchain.",
    "tags": [
      "motoko",
      "javascript"
    ]
  },
  {
    "id": "fip-coin",
    "name": "FIP Coin",
    "description": "Free economy for free people",
    "image": "fip-coin.png",
    "links": {
      "github": "https://github.com/0xpranav/FIP-Coin",
      "external": "https://supernova.devpost.com/submissions/333098-fip-coin",
      "otherLinks": []
    },
    "submitterFirstName": "Pranav",
    "submitterLastName": "Garg",
    "about": "Inspiration\n \n\n I want to create a faucet for ICP that can work like a link for ICP with other platforms, It should not use wrapping but still be able to transect with other cryptocurrency.\n \n\n What it does\n \n\n It is a basic ICP based faucet which can be claimed by any account verified by Internet Identity, this platform also allows to transfer FIP coin from one account to another.\n \n\n How we built it\n \n\n I have used Motoko language to create wallet functionality and react for frontend development, main account hold all the FIP coin stocks and by verifying the principal id of the user the 10000 FIP coin will be transferred to that account\n \n\n Challenges we ran into\n \n\n Whole development process was very smooth, although there are not many tutorials for Motoko language so I have to learn it by myself but I got main problem in verifying the user by internet identity, somehow It just got stuck in in logging in page and render to homepage of FIP coin.\n \n\n Accomplishments that we're proud of\n \n\n I am going to integrate FIP coin to my own developed NFT site where people can buy & sell NFT.\n \n\n What we learned\n \n\n I have learned many concept of Defi dev, learn how to use Motoko language and authentication process using Internet Identity.\n \n\n What's next for FIP Coin\n \n\n I am going to use invoice canister in FIP coin to use it in indigenously created NFT marketplace where people can convert there other cryptocurrencies like Ethereum, bitcoin ICP to FIP coin, they will be able to use it on NFT site to transect it for different use cases",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "fip coin#@#@#motoko#@#@#javascript#@#@#react#@#@#icp#@#@#free economy for free people",
    "tags": [
      "motoko",
      "javascript",
      "react",
      "icp"
    ]
  },
  {
    "id": "infinityswap-canister-sdk",
    "name": "InfinitySwap Canister SDK",
    "description": "An enhanced CDK for Rust Canisters, providing:(1) A framework to test inter-canister communications(2 Compose canister APIs using rust traits.(3) Versioned state management for canister upgrades",
    "image": "infinityswap-canister-sdk.png",
    "links": {
      "github": "https://github.com/infinity-swap/canister-sdk",
      "external": "https://supernova.devpost.com/submissions/333189-infinityswap-canister-sdk",
      "otherLinks": []
    },
    "submitterFirstName": "Max",
    "submitterLastName": "Chamberlin",
    "about": "Inspiration\n \n\n Our inspiration was to simplify the development of canisters in Rust on the IC, providing some much needed functionality. We wanted to make a Rust developer's life as simple as possible, by providing a means to unit-test inter-canister communications, and enabling composable APIs for canisters similar to the inheritance used in Ethereum smart-contracts. \n \n\n What it does\n \n\n (1) Simplifying and testing of inter-canister communications, allowing dependencies between canisters to be tested without compilation. Testing another canister is as simple as importing it into a module and testing the inter-canister calls. \n \n\n (2) Canisters composition (combining APIs from different crates into a single canister) - import one canister into another canister. This means you can import one canister and override it's methods. \n \n\n (3) in-memory state management and versioning of the state for canister upgrades. State should be versioned on the IC to prevent confusion when upgrading state. \n \n\n (4) This project builds on top of ic-cdk and ic-kit crates. It is not intended to replace them, but adds some types and macros to considerably simplify development on the IC. \n \n\n How we built it\n \n\n Our team built this in Rust, using this CDK in the development of the InfinitySwap AMM and token standards. \n \n\n Building this library alongside our core product helped us to understand how uses would interact with it. \n \n\n Challenges we ran into\n \n\n Building the macros was a challenge. Testing macro expansions can be a tricky feat in Rust.\n \n\n Accomplishments that we're proud of\n \n\n That we built a CDK that enables greater code re-use from developers. Any developers using our CDK can import the canisters we have built, and easily modify them to suit their own ends. We believe this could really push the IC forward by connecting devs, and allowing them to share their work with each other through composable apis. \n \n\n What we learned\n \n\n We learned that using Rust macros we can create powerful extensions to the existing CDK which enable game-changing new features.\n \n\n What's next for InfinitySwap Canister SDK\n \n\n More testing, more features. Compatibility with other SDKs.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "infinityswap canister sdk#@#@#rust#@#@#an enhanced cdk for rust canisters, providing:(1) a framework to test inter-canister communications(2 compose canister apis using rust traits.(3) versioned state management for canister upgrades",
    "tags": [
      "rust"
    ]
  },
  {
    "id": "finivest",
    "name": "Finivest",
    "description": "Finivest is a money market providing alternative investment and trading strategies to DeFi users on the IC",
    "image": "finivest.png",
    "links": {
      "github": "https://github.com/HenricoW/findex",
      "external": "https://supernova.devpost.com/submissions/333166-finivest",
      "otherLinks": []
    },
    "submitterFirstName": "Henrico",
    "submitterLastName": "White",
    "about": "Inspiration\n \n\n I wanted to build an interesting leverage trading platform, but needed some base protocols which the IC does not have yet. Thus, I decided to build one of those base protocols\n \n\n What it does\n \n\n It is a money market similar to Aave or Compound on Ethereum. These platforms enable capabilities in DeFi that cannot be replicated in CeFi (such as flash loans)\n \n\n How we built it\n \n\n The backend canisters are built in Motoko using an interface pattern with class actors\n The frontend runs on an asset canister, through a static Nextjs app written in typescript. Agentjs is used for backend interaction\n \n\n Challenges we ran into\n \n\n Learning a new language and ecosystem\n Getting wallets (like Plug, Connect2IC) to communicate with local replicas\n The asynchronous nature of execution on the IC and how to work with it\n The lack of events\n \n\n Accomplishments that we're proud of\n \n\n Being able to deliver a functioning POC in time!\n Creating a frontend wallet for use with the demo dapp for testing\n The number of tests written and passed - and subsequent bugs fixed\n Learning a new skill (Motoko, coding for the IC)\n \n\n What we learned\n \n\n That the ICP is still growing and has amazing opportunities for innovation\n That the IC is unlike any other blockchain and helps dapps become truly decentralized\n \n\n What's next for Finivest\n \n\n \n\n Gettting the POC launched on mainnet\n Getting a team together to take this further\n Fleshing the app out to be production ready, etc, etc.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "finivest#@#@#motoko#@#@#next#@#@#chakraui#@#@#typescript#@#@#agentjs#@#@#shell#@#@#coingecko#@#@#finivest is a money market providing alternative investment and trading strategies to defi users on the ic",
    "tags": [
      "motoko",
      "next",
      "chakraui",
      "typescript",
      "agentjs",
      "shell",
      "coingecko"
    ]
  },
  {
    "id": "world-tree-protocol-stack-for-icp",
    "name": "World-Tree Protocol Stack for ICP",
    "description": "Dante Network is a middleware to empower multi-chain ecosystems to interconnect and interoperate with each other in web3.",
    "image": "world-tree-protocol-stack-for-icp.png",
    "links": {
      "github": "https://github.com/dantenetwork/Demo-Show",
      "livePreview": "https://isdiw-ziaaa-aaaai-acklq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/332103-world-tree-protocol-stack-for-icp",
      "otherLinks": [
        "https://github.com/dantenetwork/canister_contracts"
      ]
    },
    "submitterFirstName": "Kay",
    "submitterLastName": "L",
    "about": "Inspiration\n \n\n Blockchain brings new possibilities to the development of the Internet due to its decentralization, transparency, and tamper resistance, along with unique features like open-source and DAO. All these promote Web3 gradually from concept to reality. Inevitably, as does any innovation, blockchain has also raised new concerns for Web3 in terms of connectivity and communication. Web3 is currently in a state similar to that of computers prior to the Internet, when they were either isolated or had a limited range of connectivity. Equivalently, blockchains are not widely and effectively connected to one another, and data are isolated from one another as well. This isolation is a natural consequence of blockchain's technical architecture. To ensure a reliable consensus in a trustless context, a blockchain only records and validates transactions that occur within its network. However, this mechanism ignores other transactions that occur outside of the native chains, thus, isolation happens. This isolation has restricted the Web3 composability and complementary between multiple blockchain ecosystems. We believe that in years to come, we will realize the need for a protocol stack for Web3 connections, just as an \"Internet protocol stack\" is for today's Internet.\n \n\n What it does\n \n\n The World-Tree protocol stack is a multi-ecosystem collaboration protocol stack for the Web3 world. Dante Network as an implementation of it is a middleware that will enable the collaboration between multiple ecosystems of WebThe middleware will consist of a protocol stack containing a series of multi-chain interoperability protocols and a network which is the instance of the protocol stack. For developers, this middleware will make it easier for them to achieve diverse composability of business across multiple blockchains, allowing them to focus more on business development itself rather than basic and cumbersome issues such as data communication. For users, this middleware will assist them to move freely between multiple ecosystems, regardless of which ecosystem their current assets and identity are created. \n \n\n How we built it\n \n\n The World-Tree protocol stack, similar to the Internet protocol stack, attempts to\n define a basic, common and universal standard framework that can help\n interconnect various public chain ecosystems in the web3 world. The protocol\n stack is divided into three layers: service presentation layer, security quality\n layer, and consensus verification layer.\n \n\n \n\n Service presentation layer\n \n\n \n\n The service presentation layer can be compared to the application and\n representation layers in the Internet OSI model, which contains standard\n protocols for coding and decoding a range of service-related information such as\n data ontologies, data descriptions, service execution models, data validation,\n and information verification standards, and secure quality-of-service\n configuration information.\n \n\n \n\n Security quality layer\n \n\n \n\n In Dante Network, we formally propose Secure Quality of Service (SQoS). This\n protocol specifically defines the collaboration model of the web3 multi-chain\n ecosystem. From a functional point of view, this is similar to the session layer\n in the OSI model, as well as to some of the capabilities of the transport layer.\n With different SQoS configurations, users can choose flexibly between security,\n scalability, and decentralization according to the characteristics of their\n business, which is a very flexible way to cope with the blockchain trilemma in\n distributed systems.\n \n\n \n\n Consensus verification layer\n \n\n \n\n Blockchain itself is a distributed and trustless system. These features are\n systematically considered for any cross-chain solution. In this regard, we plan\n a consensus verification layer to handle this problem, in which we will build a\n multi-node collaborative consensus protocol stack. The consensus verification\n layer is similar to the transport layer, network layer, data link layer, and\n physical layer in the OSI model. Its protocol stack contains the following main\n design aspects.\n \n\n Challenges we ran into\n \n\n Security is quite an important thing in this field. As we all know, there's no absolute security, but we can make higher and higher security levels with the relative cost of efficiency and payment. As we are building a communication infrastructure, we need to provide more flexibility to support different situations. So the most difficult thing we met is how to make a suitable balance between security and scalability for concrete situations because of the Blockchain trilemma. \n We've created SQoS mechanisms to solve this problem, and now we are working hard to achieve it step by step. \n \n\n Accomplishments that we're proud of\n \n\n In the process of developing the Dante Protocol Stack, we encountered countless\n problems as well as great challenges, we're proud we're had overcome all the\n difficulties and finally came up with a complete set of product systems.\n \n\n What we learned\n \n\n We learned the mechanism of Internet computing protocol(ICP). We are now much more capable and knowledgeable Internet computer developers than we were at the start of the hackathon and hope to share the experience we've picked up with the rest of the community.\n \n\n What's next for Dante Protocol Stack for ICP\n \n\n Our next step will be to collaborate with many application-based projects to iterate our SDK for developers based on their requirements, in order to make web3's multi-chain interaction easier. At the same time, as we use our protocol stack, we will continue to improve and update. More SQoS items to provide security are already in the planning stage. We will invite more project parties, developers, and end-users to participate and provide their valuable feedback. As security is very crucial in this industry, the Dante protocol stack will be fully tested on the testnet. And there will also be some targeted hackathon events related to security. Dante Network will be a long-term project because our final goal is to provide a simple, easy-to-use, and secure infrastructure. At that point, the interactions between most chains in web3 will be as convenient as the interactions with terminal devices in web2 through the internet.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "world-tree protocol stack for icp#@#@#rust#@#@#javascript#@#@#dante network is a middleware to empower multi-chain ecosystems to interconnect and interoperate with each other in web3.",
    "tags": [
      "rust",
      "javascript"
    ]
  },
  {
    "id": "matj",
    "name": "MatJ",
    "description": "MatJ is a online scientific computing platform, which aims to provide open source scientific computing and numerical analysis tools compatible with MATLAB syntax",
    "image": "matj.png",
    "links": {
      "github": "https://github.com/samshi/matj",
      "livePreview": "https://uqs7z-qiaaa-aaaak-qacra-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/328357-matj",
      "otherLinks": []
    },
    "submitterFirstName": "sam",
    "submitterLastName": "shi",
    "about": "Inspiration\n \n\n We need a light and easy touch platform to finish scientific computing\n \n\n What it does\n \n\n We develop a js math library MatJ, a web SaaS , compatible with some matlab / javascript / numpy syntax\n \n\n How we built it\n \n\n Input MatJ code, automatic transfer to javascript code \n \n\n Challenges we ran into\n \n\n The most challenges is mathematical method, for example: roots\n \n\n Accomplishments that we're proud of\n \n\n We finished almost all the linear algebra function\n \n\n What we learned\n \n\n Ignoring fear and authority, We can do it !\n \n\n What's next for MatJ\n \n\n symbolic math\n help document\n Social cooperation",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "matj#@#@#javascript#@#@#motoko#@#@#matj is a online scientific computing platform, which aims to provide open source scientific computing and numerical analysis tools compatible with matlab syntax",
    "tags": [
      "javascript",
      "motoko"
    ]
  },
  {
    "id": "ic-py",
    "name": "ic-py",
    "description": "ic-py: Python Agent Library for the Internet Computer",
    "image": "ic-py.png",
    "links": {
      "github": "https://github.com/rocklabs-io/ic-py",
      "external": "https://supernova.devpost.com/submissions/333069-ic-py",
      "otherLinks": []
    },
    "submitterFirstName": "Yvon",
    "submitterLastName": "Wu",
    "about": "Inspiration\n \n\n DFINITY foundation only provides Rust and Typescript agent libraries. Both of them have sharp learning curves which are not suitable for newbies. Python is one of the most popular and easy-to-use programming languages. It has extremely large user base and is friendly to developers.\n \n\n A python agent library will attract more developers to the IC ecosystem and help bloom the Internet Computer network. \n \n\n What it does\n \n\n \n\n support secp256k1 and ed2219 identity\n decode/encode candid parameters into/from python variable type\n raw query/update/read_state request to IC network\n parse candid description file into python-format and instantiate a canister to support easy-to-use request\n common canister interfaces (ledger, governance, cycle-wallet …)\n implement the synchronous and asynchronous requests to match different scenery requirements\n \n\n \n\n How we built it\n \n\n Mainly referring to Internet Computer Specification, agent-rs, and agent-js, we implement the basic modules below:\n \n\n \n\n Identity: handle cryptography issues to support secp256k1 and ed25519 identity\n Principal: Principal construction and authentication from str or bytes\n Candid: encode(serialize) and decode(deserialize) candid parameters to interact with Internet computer canisters. Support both basic types(nat, int, text..) and composed types(record, variant…).\n Client: HTTP client to handle communications with the IC\n Agent: Combine identity and client, provides query, update, and read_state request methods to Internet Computer network\n \n\n \n\n For the convenience of developers, we support the following enhanced features:\n \n\n \n\n Candid parser: Referring to candid specification, we implement a parser using antlr4 tools, which parse candid description into a python-format variable. Then it can be used to instantiate a canister.\n Canister instance: Leveraging candid parsing, we can instantiate a canister class with a did file. With a canister, a developer can call methods easily while it handles parameter encode/decode internally.\n Asynchronous request: During development, we found that asynchronous call is a fundamental requirement as it can improve the efficiency of the program. Thanks to httpx library we can implement the asynchronous call by requesting to IC endpoint asynchronously.\n \n\n \n\n Challenges we ran into\n \n\n \n\n candid serialization and deserialization: the data format of candid is unique and we need to deal with it carefully, meanwhile understanding how leb128 and cbor work.\n candid parsing: To parse the grammar of candid, we need the prerequisite knowledge of grammar parsing and abstract syntax tree. Understanding how candid is described, we implement a candid parser using antlr4 and parse candid into python types.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n canister instantiate: Canister instantiating helps simplify the request to IC canisters. Instead of using raw requests and getting obfuscating value returned, the canister instance tackle encode/decode issues inside it and provide convenience for developers.\n community usage: ic-py is used by many community projects and got good feedback.\n \n\n \n\n What we learned\n \n\n \n\n During the development of ic-py, we understand more about how IC works, how candid is encoded/decoded, and how IC uses a system tree to track the system states.\n Communication with the community is important. Several bugs and features are handled through GitHub issues. Continuously communication can help improve the project and provide a great user experience.\n \n\n \n\n What's next for ic-py\n \n\n \n\n increase test coverage and test automation\n optimize user experience\n collaborate with developers in the community to fix bugs, and provide more easy-to-use features",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ic-py#@#@#python#@#@#ic-py: python agent library for the internet computer",
    "tags": [
      "python"
    ]
  },
  {
    "id": "polaris",
    "name": "Polaris",
    "description": "Polaris, a fully transparent internet computer based social trading platform.",
    "image": "polaris.png",
    "links": {
      "github": "https://github.com/nijna/polaris",
      "livePreview": "https://drive.google.com/file/d/1gA5d96LHaxe8AZoxJxM1x--1TGEmGf8S/view?usp=sharing",
      "external": "https://supernova.devpost.com/submissions/329392-polaris",
      "otherLinks": [
        "https://www.figma.com/proto/ec5UGtfRODHZBSGZWc6mJP/Supernova?page-id=204%3A3819&node-id=204%3A10590&viewport=3793%2C1286%2C0.12&scaling=scale-down&starting-point-node-id=204%3A10590"
      ]
    },
    "submitterFirstName": "Philipp",
    "submitterLastName": "Blankenhagen",
    "about": "Inspiration\n \n\n More and more people are trying their luck at trading cryptocurrencies. However, actively trading cryptocurrencies can be quite a psychological burden, especially when things don't go well. Trading influencers on Youtube, Reddit or Tradingview share trading recommendations and want to take the burden away from their followers. Unfortunately, these influencers often share their trading recommendations in their own interest and not in the interest of their followers. Market manipulation, pump and dump schemes or promoting a shitcoin that is then sold to followers are not uncommon as a result. We want to create transparency here.\n \n\n What it does\n \n\n Polaris allows investors to transparently see traders' performance and select a trader to clone their trades. All this happens in WEB3 without central intermediaries.\n \n\n What's next for Polaris\n \n\n We would like to further develop Polaris and make it available to people who have had enough of intransparent trading gurus. Especially the announced features of a direct BTC and ETH integration will give us new possibilities.\n \n\n How it is built\n \n\n Please see the google drive, the architecture used is shown there in great detail.\n \n\n What the name stands for\n \n\n You might ask, what does the Name polaris mean? Similar to Supernova, Polaris also resides in a cosmic environment. For centuries, Polaris, also called the Guiding Star, has been used by travelers as a guide. We, like Polaris, provide guidance. We guide investors to the right traders.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "polaris#@#@#motoko#@#@#html#@#@#javascript#@#@#css#@#@#figma#@#@#polaris, a fully transparent internet computer based social trading platform.",
    "tags": [
      "motoko",
      "html",
      "javascript",
      "css",
      "figma"
    ]
  },
  {
    "id": "kawak",
    "name": "KawaK",
    "description": "Insight is the precondition to growth. KawaK is a meritocratic writing tool that empowers individuals regardless off their background. A community united by the intent of making a point.",
    "image": "kawak.jpeg",
    "links": {
      "github": "https://github.com/kawak-org/kawak2022/tree/testing",
      "livePreview": "https://3ysab-rqaaa-aaaan-qaewq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/332413-kawak",
      "otherLinks": [
        "https://www.figma.com/file/aMmchtOgxxjqUftsPuxlKc/Kawak?node-id=0%3A1"
      ]
    },
    "submitterFirstName": "Laszlo",
    "submitterLastName": "Corti",
    "about": "The Spark\n \n\n How hard can it be to receive feedback on an honest attempt at communication in the form of writing? The internet has made information so accessible that the value proposition of libraries has shifted from fountains of knowledge to mere locations synonymous with quiet.\n \n\n In this light, one would hope that of all institutions, universities would be the last to show any form of complacency. Yet even before Covid both staff and students were already displaying a growing alienation towards the cumbersome third party that is administration.\n \n\n What KawaK does\n \n\n Research has shown that education is one of, if not the most, cost effective way of tackling income inequality and yet it is not currently seen in any Web 3.0 Dapp.\n \n\n Looking at the extensive inefficiencies found in most educational systems, we asked ourselves what seemed to be the most obvious question: “What clear, foundational problems can we realistically solve to produce the best net-positive outcome?”\n \n\n As such we set our objective for KawaK: facilitating the opportunity for feedback for those who genuinely aim to better their speech, thinking and writing but who may be unfairly denied the opportunity. The quality of the tool will depend on the individual user - it is through their genuine effort that their proximal zone of development will be measured, and thus they will be matched with similarly skilled writers.\n \n\n How we built it\n \n\n To start, a user flow was drafted and was used as the grounds for discussion between the team. (See provided userFlow image) \n \n\n The frontend was designed by scrutinising what worked and what didn't with current text editor solutions. (Docs, Word and the recent beta of Essay.app) Traditional visual elements were the starting point (A4 , Font, Size) But we intend to incorporate new additions such as a drag and drop tool which would facilitate the reordering of sentences and overall cohesion.\n \n\n The backend was built entirely in Motoko Playground as we found this to be more practical than testing locally with Candid. With the exception of Internet Identity which needed to be tested on the main net. CRUD related data is stored and structured using the Motoko built in HashMaps. Multiple fields and entries were mapped for easy retrieval of certain data. The tokenisation process logic was written in Motoko using the DIP721 standard, where users get to transfer, accept and be rewarded with tokens if certain requirements are met. Users also have the option to digitise and mint their works as NFTs.\n \n\n Challenges we ran Into\n \n\n Having chosen to build KawaK in Motoko there were expectedly fewer resources to refer from than in Rust. The plan was to dynamically create a canister for each new user and automatically install CRUD text editor functionality. This provides the user with sovereignty over their \"Library/Profile'' canister. In encountering a confusing error we scoured public Motoko git repos, the best overlap we found was with IC Drive, which proved promising to begin with. Yet we later learnt that the most “advanced” form (dfx 0.7.2) of scaling canisters in Motoko per user had since been deprecated in the current dfx 0.10.3\n \n\n Accomplishments\n \n\n \n\n With growing concerns of failing to meet the deadline, it was made clear that a significant portion of our code would have to be rewritten resulting in a brief but notable mourning period throughout the team. However after every member took a moment to vent their frustration with both tears and laughter, we had bonded beyond most in person interactions. Since then, even in instances of stress every member knows that they can communicate\n Over 150 Social Science Master students and professors throughout Oxford, Bristol and Glasgow have signed up and expressed genuine curiosity and support for the development of KawaK.\n \n\n \n\n Lessons Learnt\n \n\n It is difficult to put a finger on exactly what was learnt beyond giving a list of bugs and subsequent resolutions. At the risk of sounding like a motivational speaker, I will try to convey a lesson shared by the whole team.\n \n\n In times of chaos, meaning is found when we surround ourselves with those who care about overlapping issues. When that care extends beyond the temporary emotion felt but instead translates to a plan leading to subsequent action, that is the essence of what will allow a team to prevail in the face of uncertainty. \n \n\n Next Steps\n \n\n Global education is limitless and by design requires no boundaries. We aim to achieve this by breaking down the barriers from the inside and operating KawaK within existing communities and institutions to simultaneously reap the benefits of cross-pollination and benefit those existing in said institutions.\n \n\n \n\n July - August we will be running a limited beta test for a curated list of writers and academics. The logic being that a core community must already exist in order to mitigate the damage that can be done by malicious actors.\n September we will be working in partnership with University of West Bristol to identify the role that KawaK may play in further education. Entertaining the possibility of a Moodle equivalent.\n Beyond September the risk of tunnel vision is too great, as such the short term emphasis will be placed on monetisation which does not compromise the initial value proposition and accessibility of KawaK. While offering original thinkers the ability to auction their play, song, poem or even formula is currently a promising path we remain ready to pivot.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "kawak#@#@#motoko#@#@#react#@#@#insight is the precondition to growth. kawak is a meritocratic writing tool that empowers individuals regardless off their background. a community united by the intent of making a point.",
    "tags": [
      "motoko",
      "react"
    ]
  },
  {
    "id": "refound-mint-the-art-of-journalism-back-to-life",
    "name": "Refound - Mint the art of journalism back to life",
    "description": "Refound is an NFT marketplace where journalists and photographers can share first person, creative content from the frontlines swiftly, raise awareness, and sell directly to businesses.",
    "image": "refound-mint-the-art-of-journalism-back-to-life.jpeg",
    "links": {
      "github": "https://github.com/web3abel/refound-icp",
      "livePreview": "https://www.beautiful.ai/player/-N591OF3bb8pBBT-ocWM",
      "external": "https://supernova.devpost.com/submissions/334332-refound-mint-the-art-of-journalism-back-to-life",
      "otherLinks": [
        "https://superlative-fenglisu-972af1.netlify.app"
      ]
    },
    "submitterFirstName": "Abel",
    "submitterLastName": "RR",
    "about": "Inspiration\n \n\n War time photographers and journalists face a lack of exposure and their families need financial support in case of their death\n \n\n Leverage blockchain technology to create a decentralized platform empowering wartime journalists and photographers to directly sell their content to the news\n \n\n What it does\n \n\n Refound is an NFT marketplace where journalists and photographers can share first person, creative content from the frontlines swiftly, raise awareness, and sell directly to businesses, with sale proceeds going to customizable beneficiaries.\n \n\n How we built it\n \n\n We built it using React, Internet computer, Exponentcli, and Netlify. We built this with inspiration from the leading IC marketplace, Entrepot App. \n \n\n Challenges we ran into\n \n\n We are primarily solidity front end developers and we had a learning curve to write in Rust and Motoko. We overcame the challenge and are excited for the build. \n \n\n Accomplishments that we're proud of\n \n\n We are excited about the prototype we have built to upload content and mint photographs for journalists, a Front Line Photography NFT Launchpad. We now know how to mint NFTs through the Exponent CLI and API platforms. \n \n\n What we learned\n \n\n We learned that having the right mindset of \"what are we trying to solve\" and \"whom are we helping\" when developing and building really helps to keep the focus on task and the motivation going. We also learned that \n \n\n What's next for Refound\n \n\n Refound is looking to test an MVP with journalists and assess where we can further improve to make the build a useful tool for journalists on the frontlines.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "rust",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "refound - mint the art of journalism back to life#@#@#internetcomputer#@#@#react#@#@#netlify#@#@#exponent#@#@#exponent-cli#@#@#rust#@#@#motoko#@#@#refound is an nft marketplace where journalists and photographers can share first person, creative content from the frontlines swiftly, raise awareness, and sell directly to businesses.",
    "tags": [
      "internetcomputer",
      "react",
      "netlify",
      "exponent",
      "exponent-cli",
      "rust",
      "motoko"
    ]
  },
  {
    "id": "niftios",
    "name": "NiftiOS",
    "description": "NiftiOS is operating system for the creators to bridge web3 to the posibilites that web3 world brings. \nEnd users don't even need a wallet untill they are ready to do so.",
    "image": "niftios.png",
    "links": {
      "github": "https://github.com/grmkris/nft-links",
      "livePreview": "https://www.niftios.xyz/",
      "external": "https://supernova.devpost.com/submissions/334268-niftios",
      "otherLinks": []
    },
    "submitterFirstName": "Kristjan",
    "submitterLastName": "Grm",
    "about": "Inspiration\n \n\n Web3 technologies are scattered all over the place, one project is great at something, while other project is great at something else. \n At NiftiOS we want to connect all great technologies together and be the glue for the web3 world and bridge for the web2 technologies, to start talkin web3 language.\n \n\n What it does\n \n\n On Niftios you can start creating your web3 presence. \n \n\n \n\n You can deploy your own industry-standard contracts on the chain that we support (Internet Computer Protocol, Ethereum Polygon). \n You can mint NFTs and send them to user are URLs. You don't need a wallet and user can store the NFT in their email and claim it to their wallet whenever they are prepared to do so\n Web3 Laboratory\n \n\n \n\n Create reward programs and issue NFTs for contributors (github integration)\n Create NFT gated events that only NFT holders can access\n Give NFTs to the people attending your events\n Added rewards to the issues on your open source projects, whoever closes the issue gets the NFT\n \n\n \n\n \n\n How we built it\n \n\n Application is built using \n NextJS for frontend and supabase for admin layer. \n On blockchain level we integrated Internet computer protocol through the NextJS api routes by converting RUST container to webassembly and calling that from the frontend.\n \n\n Challenges we ran into\n \n\n ICP is quite different to the EVM based chains we are used to. Tooling is not yet developed that well so we had to experiment quite a bit. \n In terms of end-user wallet integration we researched a few options (stoic, plugwallet etc) and in the end decided to keep the implementation generic and support as many wallets as possible.\n \n\n Accomplishments that we're proud of\n \n\n Running ICP minting tool on a nextjs serverless API route by utilizing vercel rust runtime. This allows us to move away from backend requirements and have a lightweight deployment that's easy to manage in the long run.\n \n\n What we learned\n \n\n It's incredibly easy to get started with ICP development. dfx and many samples provided really simplify the initial onboarding. But once we started to work on our specific use-case we identified several gaps in the ecosystem/tooling that developers come to expect. On the bright side, as we continue developing NiftiOS and integrating it more tightly with ICP we will continue to build necessary tools and open-source them as they're available.\n \n\n What's next for NiftiOS\n \n\n Finish the service and clear the rough edges and relase it to public domain. Based on the feedback we would keep working on it to provide better and cleaner user experience, while bringing even more features and bridging the gap between web2 and web3.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "niftios#@#@#nextjs#@#@#react#@#@#typescript#@#@#supabase#@#@#postgresql#@#@#icp#@#@#niftios is operating system for the creators to bridge web3 to the posibilites that web3 world brings. \nend users don't even need a wallet untill they are ready to do so.",
    "tags": [
      "nextjs",
      "react",
      "typescript",
      "supabase",
      "postgresql",
      "icp"
    ]
  },
  {
    "id": "dblogit",
    "name": "DBLOGIT",
    "description": "A decentralized blogging platform built on the internet computer, we are solving a major problem which is spreading of fake news, here our algorithm will curtail these problem, users can earn & stake",
    "image": "dblogit.png",
    "links": {
      "github": "https://github.com/DblogIT/frontend",
      "livePreview": "https://iqoey-qqaaa-aaaak-ab4bq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329900-dblogit",
      "otherLinks": []
    },
    "submitterFirstName": "Dominic",
    "submitterLastName": "Akpan",
    "about": "Inspiration:\n \n\n DBLOGIT is an inspiration from the native blogging sites, but with a twist, here the whole data will live on the blockchain, and using the internet computer as our basis development tool to achieve it, we are inspired to make a difference in the blogging space by bringing onboard a decentralized blogging site, were the data will be imprinted on the blockchain, thus solving the problems of downtimes, centralization, fake news, and censorship.\n \n\n What it does:\n \n\n Informing and updating our users with latest informations and updates live from the blockchain, and help fact check if a news is fake or authentic. By this we help our users curtail myriad of fake news in the world\n \n\n How we built it:\n \n\n The frontend was built with react.js and the data were stored on the ICP network\n \n\n Challenges we ran into:\n \n\n The major challenges was with setting up based on the requirements of internet computer system requirements in other to run the ICP SDK, even while we were trying to deploy we ran into challenges based on the system we used.\n \n\n Accomplishments that we're proud of:\n \n\n We did division of labour and each person did his best to hold up his end of bringing about the success of this project\n \n\n What we learned:\n \n\n we learnt a whole lot of stuff while setting up, the internet computer SDK and building the smart contract with motoko, a language we learned on the job to build this project etc\n \n\n What's next for Dblogit:\n \n\n we will keep building and bring in new features, at some point we will enable users to be able to post contents and earn from it. Stake tokens and get rewards for the token staked",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dblogit#@#@#javascript#@#@#react#@#@#motoko#@#@#a decentralized blogging platform built on the internet computer, we are solving a major problem which is spreading of fake news, here our algorithm will curtail these problem, users can earn & stake",
    "tags": [
      "javascript",
      "react",
      "motoko"
    ]
  },
  {
    "id": "swapp-by-celestium-labs",
    "name": "SWAPP by Celestium Labs",
    "description": "SWAPP IC NFT's with friends in a trustless matter!",
    "image": "swapp-by-celestium-labs.jpg",
    "links": {
      "github": "https://github.com/Celestium-Labs/SWAPP",
      "livePreview": "https://swapp.duelaliens.com/",
      "external": "https://supernova.devpost.com/submissions/331289-swapp-by-celestium-labs",
      "otherLinks": []
    },
    "submitterFirstName": "Pwoseidon",
    "submitterLastName": "Music",
    "about": "Inspiration\n \n\n Ever mint an NFT you didn’t like? Everyone else's NFT looks great, except yours... You can’t get a refund. But others seem to think yours is cool. Or you want a NFT from a community member but have no ICP to buy it? We at Celestium Labs built SWAPP for the community so you can safely SWAPP NFTs in a trustless manner. \n \n\n Currently, trades can be done, however not in a trustless manner. Consider this scenario:\n Two users have NFTs they’re willing to trade with each other. Each person will be expected to send their NFTs (one-by-one) via a wallet transfer to the other person’s wallet, and hope that the other person sends theirs in return. This could work with people who know and trust each other in real-life and are swapping face-to-face, for example. However, when the same scenario is presented between two individuals online, who have no relationship but desire each others’ NFT, the same level of trust may not be demonstrated. One person will inevitably send their NFT first and the other person could run off with that NFT, never to be heard from again, and there will be nothing the sender could do beyond that.\n \n\n What it does\n \n\n SWAPP allows you to trade multiple NFT’s simultaneously with your friends or strangers on the IC without risking losing your asset’s. By simply connecting your wallet you can get started.\n \n\n \n\n Create a swap room\n List one or more NFT’s and if you want an ICP amount\n Send the room link to a friend\n After you both listed NFTs, you then have to confirm\n Once both agree, the NFTs are going to be swapped \n \n\n \n\n We charge 0.05 ICP for each as a transaction fee, so we can host the service.\n \n\n Workflow\n \n\n \n\n \n\n How we built it\n \n\n SWAPP is hosted entirely on chain, both front and backend canisters. We have a custom DNS domain pointed to the frontend so it’s a friendly greeting to those who have yet to meet the IC. Through smart contracts we have made an asynchronous approach to SWAPP NFTs. Our escrow will make sure your goods are safe until both parties agree to the same conditions. SWAPP leverages IC’s gasless transaction capability. We take a small fee of 0.05 ICP. All source code is available on GitHub.\n \n\n \n\n Backend Canister\n Written in Motoko.\n Frontend Canister\n Written in Typescript with Next.js.\n \n\n \n\n \n\n \n\n Challenges we ran into\n \n\n One notable challenge we encountered was interacting with NFT Standard APIs. It’s no surprise that the Internet Computer has many NFT architectures and no two standards are the same. Coming from Ethereum, the logic behind a 3rd party moving an NFT from one wallet to another (with permission), isn’t directly translated to the most used NFT standard currently used on the IC network. As a result, a secure workaround needed to be developed (ideally without wrapping). This development effort took several days, but was eventually solved. \n \n\n Initially, the swap action was planned to be done using a allowance and approve system that’d only be activated once an NFT is presented by both parties. However, the method employed in SWAPP uses an escrow system that the parties can lock their pledges in before confirming the swap. Both methods will have helped us achieve the application’s objective regardless. \n \n\n Accomplishments that we're proud of\n \n\n We at Celestium Labs built SWAPP for the community so you can safely SWAPP NFTs in a trustless manner. We are proud to have built a working product that's been tested both internally by Celestium Labs, as well as by members of the IC Community. \n \n\n The achievement that we are most proud of is creating a service where this is possible and secure while having significantly limited access to the methods in the NFT standard’s API. This forced us to think outside the box and utilise the powerful capabilities that the IC and Motoko offer.\n \n\n What we learned\n \n\n Since it was our first IC-Project we learned many things about the ecosystem and it's capability. \n \n\n The largest lesson learned by the team was that not all issues should be looked at through the lense of another blockchain. What we mean by this, is that although the solution to performing swaps on the IC may have been found sooner if the NFT API methods exposed were the same/similar to those on another chain i.e. Ethereum, the power that the IC brings allows far more scope in solutions. Solutions that aren’t possible on other chains are made possible, and it therefore introduces a new dimension of problem solving.\n \n\n Regarding the challenges we run into there also has to be mentioned the lack of atomicity on the Internet Computer. The assets won’t automatically return when transactions fail or the swap isn’t concluded by both parties. We had to set a three day threshold of inactivity, so assets aren’t locked up. \n \n\n What's next for SWAPP\n \n\n Currently SWAPP supports EXT standard NFTs listed on Psychedelic’s DAB. We plan to expand beyond by implementing more standards. Maybe even asset’s that aren’t hosted on the IC but on another Blockchain depending on the integration.\n \n\n SWAPP supports both Plug and Stoic wallets currently, with the potential to support more wallets in the future as the ecosystem grows further.\n \n\n We envision that SWAPP won’t be limited to private SWAPP rooms. By implementing asset traits a future use case could be swapping NFT’s with specific traits. The possibility to search for specific NFT traits you want or need and showing other users what you want will be an inherent necessity in our future plans regarding e.g. trading card games. We - Celestium Labs - are also planning to utilize it in our main product - Duelaliens. \n \n\n We also plan on implementing a hub where users can list NFTs they’re willing to trade, and other users can create binding offers for those NFTs that’d be settled and swapped if the lister accepts. This way, users may discover NFTs they may not have previously known they wanted, and can try their luck for them with items in their inventory.\n \n\n We envision to bring people together to get the NFT’s they really want.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "swapp by celestium labs#@#@#motoko#@#@#typescript#@#@#javascript#@#@#next.js#@#@#fleek#@#@#dab#@#@#swapp ic nft's with friends in a trustless matter!",
    "tags": [
      "motoko",
      "typescript",
      "javascript",
      "next.js",
      "fleek",
      "dab"
    ]
  },
  {
    "id": "ic-war-alpha",
    "name": "IC War Alpha",
    "description": "Space shooter with upgradable NFTs",
    "image": "ic-war-alpha.png",
    "links": {
      "github": "https://github.com/waylad/war-alpha/tree/ic",
      "livePreview": "https://ic.waralpha.io/",
      "external": "https://supernova.devpost.com/submissions/333803-ic-war-alpha",
      "otherLinks": []
    },
    "submitterFirstName": "Waylad",
    "submitterLastName": ".",
    "about": "IC War Alpha\n \n\n Try it out now on https://ic.waralpha.io\n \n\n About IC War Alpha\n \n\n IC War Alpha is the first-ever game with upgradable NFTs. Mint a basic spaceship to start with. Pilot it in the game and fight enemies! Harvest their parts. Upgrade your ship. Then sell your upgraded NFT.\n \n\n \n\n First, click \"connect your wallet\". Make sure you have install Plug Wallet. If so, Plug Wallet opens to authorize the connection to the cannister.\n \n\n \n\n The game will then fetch all your spaceship NFTs from the smart contract. If you do not yet have a IC War Alpha NFT, click \"Mint New Ship\". You will receive a basic ship with entry-level weapons, wings, engine, and cabin. The ship will appear in your list of ships (if not refresh the page). Select that ship to access the game.\n \n\n \n\n The game is built with PhaserJS, a 2D Javascript game engine that allows us to pilot our ship and fire at enemies. Use the directional arrows to move the ship and press the space bar to fire. Try to kill the enemy ship, but be careful not to get hit. When the enemy is destroyed, it drops some loot. Move your ship over it to get it into your inventory.\n \n\n \n\n Then open your inventory to see all the parts you have found. Drag and drop a ship part to its corresponding area on your ship to upgrade that part. A IC transaction takes place to actually modify your NFT metadata and image with the new part.\n \n\n \n\n The smart contract is a modified DIP721 with a new endpoint to modify an NFT metadata and image.\n We have created an NFT collection of 256 unique spaceships made of 4 cabins, 4 wings, 4 engines, and 4 weapons.\n \n\n \n\n \n\n How it's built\n \n\n The GitHub repository is a mono-repo containing :\n \n\n \n\n The game, located in src/game, built with PhaserJS, a 2D javascript game engine\n The images and metadata generator for the NFTs, located in src/generator, a custom script that takes the 4 cabins, 4 wings, 4 engines, and 4 weapons and mixes them together to create the 256 combinations of JSON metadata and png files.\n The smart contracts for upgradable NFTs in src/contracts, which is a modified DIP721.\n \n\n \n\n What's next?\n \n\n I want to create more parts to generate up to 10,000 unique ships and then sell the collection in order to finance the development of the game for more enemies, worlds, multiplayer, some storytelling, etc...",
    "domains": [
      "GameFi"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ic war alpha#@#@#typescript#@#@#phaser.js#@#@#space shooter with upgradable nfts",
    "tags": [
      "typescript",
      "phaser.js"
    ]
  },
  {
    "id": "tingram",
    "name": "Tingram",
    "description": "Tingram - your social contacts!",
    "image": "tingram.jpeg",
    "links": {
      "github": "https://github.com/tingramtingram/dfinity",
      "livePreview": "https://m3h3q-wyaaa-aaaap-qabla-cai.ic0.app",
      "external": "https://supernova.devpost.com/submissions/326827-tingram",
      "otherLinks": []
    },
    "submitterFirstName": "Andrei",
    "submitterLastName": "Teterukov",
    "about": "Inspiration\n \n\n Develop a secure social dating and communication application that will be implemented using Web 3.0 technologies and managed via Social-Fi. Provide users with the ability to monetize their content and activity within the application.\n \n\n What it does\n \n\n The TINGRAM application will allow you to cover the most significant aspects of social life, such as dating, personal relationships, business communication, charity, environment. Will provide an opportunity for participants to earn inside the application, through unique communication, individual creativity in the NFT industry and useful content for society. The application will be managed and developed through the DAO model.\n \n\n How we built it\n \n\n We were attracted by the idea of IC accessibility and security, we decided to use the Internet Identity system and store all data decentralized in the IC blockchain. To create our application, we used the new programming language Motoko\n \n\n Challenges we ran into\n \n\n We faced the problem of creating our own token in the IC network, at the moment there is no such possibility. There are also no bridges with other blockchains, which does not allow scaling our application.\n \n\n Accomplishments that we're proud of\n \n\n Achieved fast video loading and sending messages in IC blockchain technology, and developed a unique model for rewarding users for activity within the application using a complex mathematical model built on tokens and NFT\n \n\n What we learned\n \n\n We studied the Motoko programming language, figured out the IC blockchain technology, learned how to connect blockchain wallets\n \n\n What's next for Tingram\n \n\n Attracting investments from large funds, to create liquidity and launch a closed beta version of the Tingram application, to test the functions and validate the mathematical model. Our task is to develop a really useful WEB3 application for the society, the life of which would exist for decades and be controlled through DAO tools.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "tingram#@#@#motoko#@#@#ic#@#@#dfinity#@#@#tingram - your social contacts!",
    "tags": [
      "motoko",
      "ic",
      "dfinity"
    ]
  },
  {
    "id": "nftofu",
    "name": "NFTOFU",
    "description": "NFTOFU is the one-stop NFT portal on IC ecosystem",
    "image": "nftofu.png",
    "links": {
      "github": "https://github.com/nftofuio",
      "livePreview": "https://supernova.nftofu.io/",
      "external": "https://supernova.devpost.com/submissions/334447-nftofu",
      "otherLinks": []
    },
    "submitterFirstName": "0x",
    "submitterLastName": "Lee.c",
    "about": "What it does\n \n\n NFTOFU is the one-stop NFT portal on IC ecosystem. It integrates data analysis, user profiling, behavior monitoring, NFT activities, etc.\n \n\n Accomplishments that we're proud of\n \n\n \n\n Completed NFT data synchronization on Entrepot, CCC, and will support Yumi, Jelly and other marketplace\n Completed market, collection, holder related data analysis API\n Completed UI of home page, collection list and details, holder list and details\n \n\n \n\n What's next for NFTOFU\n \n\n \n\n Support for user wallet login\n \n\n \n\n Interacte with collection / NFT, favorite, like\n Follow other users' addresses\n User address binding to social media, such as twitter, telegram, openchat, dscvr, etc.\n \n\n Support for more standard NFT and trading marketplaces\n Real-time data monitoring",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko",
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "nftofu#@#@#react#@#@#motoko#@#@#rust#@#@#javascript#@#@#graphql#@#@#nftofu is the one-stop nft portal on ic ecosystem",
    "tags": [
      "react",
      "motoko",
      "rust",
      "javascript",
      "graphql"
    ]
  },
  {
    "id": "lfico-protocol-and-sulfur-network",
    "name": "LFICO Protocol and Sulfur Network",
    "description": "License-Free Initial Coin Offering Protocol And Compliance and Verification Sharing Network",
    "image": "lfico-protocol-and-sulfur-network.gif",
    "links": {
      "github": "https://github.com/kentomisawa/sulfur",
      "livePreview": "https://github.com/kentomisawa/lfico",
      "external": "https://supernova.devpost.com/submissions/333978-lfico-protocol-and-sulfur-network",
      "otherLinks": []
    },
    "submitterFirstName": "kento",
    "submitterLastName": "tomisawa",
    "about": "Inspiration\n \n\n The regulations against crypto are one of the huge obstacles. There was the ICO boom a few years ago but it couldn't penetrate society due to the regulation. But that proved that ICOs are indeed on demand; even if an ICO was a fraud, people were willing to buy. If users can offer tokens without a license, it will boost the crypto ecosystem. And the important thing for this is to solve the underlying issues fundamentally.\n \n\n What it does\n \n\n Sulfer Network\n \n\n Sulfur Network is a compliance and verification state sharing network. Anyone can create rules and anyone can verify. It is very hard to define the standard interface for compliance because of its variety of forms, so Sulfur Network stores legal states for users to refer to easier.\n Anyone can create rules and anyone can verify anything they want to. It's up to users to access which jurisdiction of what rules of who verifies who complies. Because this real world is very complicated; decentralized compliance networks must be lightweight.\n \n\n Verifiers\n \n\n Verifiers might be regulated organizations or users who manage a community. They verify who follows what compliance.\n \n\n Compliance\n \n\n Regulations belong to a jurisdiction. Rules might be related to others. They can have relation edges to express relations.\n \n\n Users\n \n\n Users can share the states of regulations. VASPs (Virtual Asset Service Providers) are often regulated, but they can reduce management costs by sharing the states.\n \n\n LFICO Protocol - License-Free Initial Coin Offering Protocol\n \n\n LFICO Protocol is a framework for users to offer digital assets without any licenses. Exchanges might have a license but offering tokens itself can be done by anyone thanks to Generalized DEX, and Sulfur Network helps to corporate with regulated entities seamlessly.\n \n\n The Reason Why License-Free\n \n\n The main reasons why countries regulate crypto are protection for users' assets and Anti-Money Laundering/Combating the Financing of Terrorism (AML/CFT). Without these two reasons, countries don't have much reason to regulate because the disadvantages surpass the benefits. LFICO Protocol offers a scaffold to avoid the risks of AML/CFT and loss of assets.\n \n\n How To Avoid Asset Loss\n \n\n Generalized DEX has the value-stable token pool, and token issuers can set how much of the paid value for the purchase of the tokens is backed in the pool. The backed values are token agnostic and volatility-resistant over time; even stabler than any fiat currencies. In addition to it, the pricing logic is customizable unless the withdrawal value exceeds the deposit. Therefore, token issuers can avoid the loss of assets owned by users.\n \n\n How To Avoid AML/CFT\n \n\n Just restrict exchange and transferrence following the regulation in the target jurisdiction. Like, restricting until an address follows Financial Action Task Force (FATF)'s Travel Rule is one example. Offering untransferrable tokens is the same as selling a product. The problem with the existing tokens is the ability of anonymous transferrence. If it's not able to transfer anonymously, there is no reason to be regulated by AML/CFT.\n \n\n Compliance And Verification Sharing\n \n\n Thanks to Sulfur Network, it is easy to share the states of verification and regulations of a specific jurisdiction.\n \n\n Pricing Customization\n \n\n Pricing Customization might be a little tricky. Because it should be dynamic pricing rather than the pricing of derivatives, and the definition of the derivatives are various to each country. If other users' purchase and selling behaviors directly affect on the price, the products could be regarded as derivatives. So, to ensure the products are not derivatives, the token offerors can make the pricing coupled with external systems other than the purchase and selling power directly. However, it is more important to focus on the solution for underlying issues on derivatives rather than nominal definitions. Because if there are still issues, the tokens should be regulated with different rules. Therefore, at least, pricing and value backing have to be safe enough to fairly protect users' assets.\n \n\n Fundraising\n \n\n It's up to users how to fundraise with token offerings. But maybe a popular way is to withdraw a part of the backed value from the pool. For example, 80% of paid values are stored in the pool, then 20% of them are withdrawn by the token issuers as funds. Another way is that all of the paid values are stored in the pool for custom pricing, but traders have to pay margin fees to the token issuers.\n \n\n Transferability\n \n\n Transferability must be restricted at first because the definition of the derivatives is various for each country. The ability to exchange other assets may be one of the definitions. So the token offerors should also consider how to exchange into other assets, or, they can prohibit exchanging or transferring at all. But again, solving the fundamental problems is more important than nominal definitions to make it sustainable. In this case that is to make sure the flow of assets is safe and fair.\n Even if custom tokens are not transferrable, users can exchange those tokens with other assets because custom tokens are burnt and minted when deposited and withdrawn. Due to the nature of burning and minting, there is no difference between offering and exchanging. The safest way to do license-free ICO is to offer tokens that anonymous users are prohibited from exchanging or transferring. Despite that, allowing anonymous users to buy and sell only with their fiat currencies may be legal in many jurisdictions. This is because that is the same as purchase and payback dynamic pricing products.\n \n\n The Flow\n \n\n Token issuers set the target jurisdiction in which they offer tokens to users. Part of paid amounts may be sent to the token issuers. Project owners also decide whether users can transfer or exchange tokens at first. Then, an integrated third party like an exchange checks KYC or other compliance and verifies the address to authorize the rest of the ability to transfer or exchange.\n \n\n How we built it\n \n\n The canisters of LFICO Protocol and Sulfur Network interact with each other.\n \n\n Challenges we ran into\n \n\n Complexity of regulations\n \n\n Accomplishments that we're proud of\n \n\n The possibility of avoidance against crypto regulations in every country if sellers or buyers can use crypto to deposit into the pool at least. Because offering custom tokens can be the same as selling a dynamic pricing product that is able to be paid back.\n \n\n What we learned\n \n\n Laws are complicated and vary to a country.\n \n\n What's next for LFICO Protocol and Sulfur Network\n \n\n Deploy onto the test net, then I will make a foundation for those projects.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "lfico protocol and sulfur network#@#@#rust#@#@#canister#@#@#license-free initial coin offering protocol and compliance and verification sharing network",
    "tags": [
      "rust",
      "canister"
    ]
  },
  {
    "id": "glue",
    "name": "glue",
    "description": "glue allows nft projects to add holder verification to their discord communities. it's easy to use, easy to setup and easily extendable.",
    "image": "glue.png",
    "links": {
      "github": "https://github.com/glue-org",
      "livePreview": "https://discord.com/api/oauth2/authorize?client_id=974260670675697714&permissions=268435456&scope=applications.commands%20bot",
      "external": "https://supernova.devpost.com/submissions/327051-glue",
      "otherLinks": []
    },
    "submitterFirstName": "Moritz",
    "submitterLastName": "F",
    "about": "Inspiration\n \n\n For Ethereum NFT communities it is the most normal thing in the world to verify the holder status of members via collab.land. collab.land is an integral part of the infrastructure and enables many interesting use-cases like token gated communities or token gated raffles. On the Internet computer, there are so far only specialized solutions that work exclusively with the respective projects and were developed specifically for this purpose. Not every project can and not every project should develop its own solution. So what has been missing so far is glue - an easy to use solution for community leaders and members to perform holder verification.\n \n\n What it does\n \n\n glue allows projects on the IC that are built using the EXT or DIP721 standards to add holder verification to their discord server.\n \n\n How we built it\n \n\n We have four components that make up this project:\n \n\n server (web2)\n \n\n \n\n exposes an API written in JS using express.js \n authenticates discord users via discords oauth2 solution and passport.js\n establishes sessions using express-session and persists them with connect-mongo\n stores users and guilds in a mongodb database\n \n\n \n\n backend canister (web3)\n \n\n \n\n written in motoko\n exposes two methods\n \n\n \n\n storeMessage: takes a discord userId and guildId as an argument and stores them in a Trie with the caller principal as a key\n retrieveMessage: takes a principal as an argument and returns associated userId and guildId\n \n\n \n\n \n\n frontend canister (web3)\n \n\n \n\n written using svelte\n consumer facing UI that allows users to login with their discord account and wallet (plug and stoic supportd) to verify holdership of NFTs\n \n\n \n\n discord bot (web2)\n \n\n \n\n written in discord.py\n server admin interface to configure projects for holder verification on their server and generate their unique verification link that is exposed to users\n \n\n \n\n Challenges we ran into\n \n\n The hardest thing was fiddling with Cookies. As the frontend is hosted in an asset canister on the IC, the backend and the frontend cannot live on the same server. Cookies can't really be shared cross domains, thus we call an endpoint on our server from the frontend that exposes the SameSite=None and Secure attributes for Set-Cookie Headers. The Secure attribute needs an https context, but because we're serving our API using an nginx reverse proxy and the connection inside the server is http, the cookie was never set. What made this very hard to debug is that this restriction doesn't occur when serving/accessing from localhost and was first experienced when deploying to production. After narrowing the issue down, we finally found relief in a 6 year old closed GitHub issue and everything works as expected :)\n \n\n Accomplishments that we're proud of\n \n\n \n\n adding value to the overall ecosystem of the IC and providing an infrastructure project\n having a working solution ready by the end of the hackathon\n creating our first project relying on oauth2 for authentication\n \n\n \n\n What we learned\n \n\n \n\n how to setup oauth2 with passport.js\n how to use didc to generate bindings\n how to run an nginx reverse proxy\n how to write a discord bot using discord.py\n how to write a node server using express\n how to use the @dfinity/agent package in a node environment\n \n\n \n\n What's next for glue\n \n\n \n\n input validation\n add better UI/UX for consumers and server admins\n test everything thoroughly\n add support for telegram\n add secure verifiable raffle feature \n explore glue as an open internet service \n explore how glue can be consumed by other projects and services hosted on the IC",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "glue#@#@#motoko#@#@#passport.js#@#@#express.js#@#@#mongodb#@#@#discord.py#@#@#svelte#@#@#vite#@#@#typescript#@#@#glue allows nft projects to add holder verification to their discord communities. it's easy to use, easy to setup and easily extendable.",
    "tags": [
      "motoko",
      "passport.js",
      "express.js",
      "mongodb",
      "discord.py",
      "svelte",
      "vite",
      "typescript"
    ]
  },
  {
    "id": "ukrainian-magicals",
    "name": "Ukrainian Magicals",
    "description": "We create new vision of NFTs with AR Storytellings, AR Face Lenses and Application for it minting, usage and selling",
    "image": "ukrainian-magicals.png",
    "links": {
      "github": "https://github.com/insky/ukrainian-magicals-internet-computer-nft",
      "livePreview": "https://dydxz-fqaaa-aaaag-aanla-cai.ic0.app",
      "external": "https://supernova.devpost.com/submissions/332052-ukrainian-magicals",
      "otherLinks": [
        "https://ukrainianmagicals.fun/"
      ]
    },
    "submitterFirstName": "Ukrainian",
    "submitterLastName": "Magicals",
    "about": "Inspiration\n \n\n Our inspiration for this Hack was to create a new vision of NFTs with Augmented Reality Storytellings.\n We wanted to create not just an image but the whole story encoded into it using Augmented Reality and NFT.\n We were also inspired to create a new tool for AR monetization through NFT and blockchain.\n We were also inspired by the pictures and forms of Ukrainian Embroidery and Head Queen Crowns for Face lenses.\n And finally, we were inspired to create an Application for AR NFTs usage.\n \n\n What it does\n \n\n Our solution serves NFT enthusiasts, digital ART creators, companies, and brands as a NEW Monetization tool, as a new way of self-expression, and as a result our product we will serve as a new adoption way for NFT and Blockchain.\n With our product, people can become producers, collectors, and traders of unique Augmented Reality NFTs.\n \n\n How we built it\n \n\n So, how do we build all this?\n At first, there was an Idea to Create NFT collectibles with AR Effects and Application to mint, use and sell to customers, creators and brands.\n \n\n Then we created our Amazing Team which consisted of experienced entrepreneurs me and Andrew, Vitalii, and Roman who created the NFT smart contract, Anton created our cool AR Effect and Andrii who created a landing page to present it.Then We created a collection of images based on the pictures and forms of Ukrainian Embroidery, each image has its own story and the names of the cities sewn into the Embroidery Ornament. There are 3 cities in Ukraine - Kyiv, Kalush, and Lviv.\n \n\n For these images, we created an Augmented Reality Effect with AR Storytelling about the story of the Ukrainian Mariupol’s Drama Theatre Reconstruction.\n \n\n We also created an Augmented Reality Face Lens Prototype with the Queen’s Crowns.\n And for now, we keep working to finish it.\n \n\n Then we created the Internet Computer\n NFT Smart Contract that contains 3 non-fungible tokens, deployed it on IC blockchain framework and minted to contract owner itself. \n Here is GitHub with our Smart Contract.\n \n\n Then we created the Application Prototype.\n First for AR Face Lenses NFTs. We created 3 main screens. At first, you can explore different collections and find trending creators and NFTs. On the second screen, you can see the NFT image as a model of Crown, its description, and all other information, and on the third screen in real-time we show how you will look with this AR NFT applied to your face. \n \n\n We also show the Application flow for AR Markers NFTs. You can also explore images, chose one that you like, and get the AR storytelling encoded into it. \n \n\n And finally, we packed all this into the Landing page to present.\n \n\n Challenges we ran into\n \n\n Our challenges in Supernova Hackathon were to Create NFT collectibles with Augmented Reality Effects, create an NFT AR Face Lens prototype, and create NFT Smart Contract and Application Prototype.\n \n\n Accomplishments that we're proud of\n \n\n During the hackathon, we are proud of our solution. We provide an application to reveal all potential of our idea and usage, we found a new way to monetize AR through NFT, we provide New creative Use Cases for AR and NFT for creators and brands, and created a new trend for NFTs with AR.\n \n\n What we learned\n \n\n During the hackathon, we learned Internet Computer Blockchain, learned how to create Smart Contract on this framework, created a highly experienced team and we also learned how to challenge hackathon and find new solutions.\n \n\n What's next for Ukrainian Magicals\n \n\n To launch our app and to start sales we need nearly 95 thousand dollars. It is needed for MVP App development, marketing setups and budget, for B2B collaborations with Creators and Brands, and for new AR NFT Collections.\n \n\n We aim to expand the use of Internet Computer blockchain through a new vision of NFTs with additional value.\n Our product will serve as an infrastructure solution on Internet Computer to bring tons of new active users with AR NFTs Face Lenses and AR Markers.\n \n\n Magicals - create a new vision of NFTs!",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ukrainian magicals#@#@#rust#@#@#shell#@#@#ar#@#@#sparkar#@#@#dfxsdk#@#@#we create new vision of nfts with ar storytellings, ar face lenses and application for it minting, usage and selling",
    "tags": [
      "rust",
      "shell",
      "ar",
      "sparkar",
      "dfxsdk"
    ]
  },
  {
    "id": "on-chain-system-of-record-with-public-notary",
    "name": "On-chain System of Record with Public Notary",
    "description": "We use IC's low cost on-chain storage and inter-canister async calls features to make a cheap and scalable System of Record with Public Notary with features of Oracle, billing and Decrypt+Share.",
    "image": "on-chain-system-of-record-with-public-notary.png",
    "links": {
      "github": "https://github.com/amirhyoussefi/ic-sorn",
      "external": "https://supernova.devpost.com/submissions/334423-on-chain-system-of-record-with-public-notary",
      "otherLinks": []
    },
    "submitterFirstName": "Amir",
    "submitterLastName": "Y",
    "about": "(if video does not show on the page use: https://vimeo.com/722841866/5fa60bfae8) \n \n\n Inspiration\n \n\n Thought of how we can take advantage of unique/rare features of IC. \n \n\n We designed a System of Record using a Public Notary which uses following IC features:\n \n\n \n\n Low Cost of on-chain data storage\n Async inter-canister calls for scalability and lower latency\n \n\n \n\n Having this system on-chain is hardly practical on other blockchains.\n \n\n Then added a few interesting features like subscription to topic/channel, an IC Oracle Framework to periodically record the world measures on-chain and also ability to receive payments for the recording service. \n \n\n What it does\n \n\n We use low cost storage and async calls to make a cheap and scalable Public Notary with Oracle and Encrypted Sharing features.\n \n\n How we (partially) built it\n \n\n With Motoco and Go:\n \n\n Using \"stable\" to make persistent-storage of data (across upgrades)\n \n\n Using inter-canister call (to the notary canister)\n \n\n Using Pub/Sub\n \n\n Using Oracle Framework (hyplabs)\n \n\n Payment for record storage by sending ICP\n \n\n Challenges we ran into\n \n\n Old 3rd party code did not fully work on new dfx (in spite of updating version in dfx.json)\n \n\n Time to finish learning and the multiple integrations for extra features\n \n\n What's next for System of Record and Public Notary\n \n\n Enhance Oracle we could integrate with ChainLink technology\n \n\n Reveal+Share feature: to have all messages encrypted on-chain but user can selectively share decryption of some messages with a 3rd party\n \n\n Bill publisher per data-size",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "on-chain system of record with public notary#@#@#motoco#@#@#go#@#@#we use ic's low cost on-chain storage and inter-canister async calls features to make a cheap and scalable system of record with public notary with features of oracle, billing and decrypt+share.",
    "tags": [
      "motoco",
      "go"
    ]
  },
  {
    "id": "ictree-social-media-decentralized-run-fully-on-chain",
    "name": "ICTree - social media, decentralized, run fully on-chain",
    "description": "ICTree - social media, decentralized, run fully on-chain, allowing user to create personalized, easily customizable page - contains all the important links you want to share to the world!",
    "image": "ictree-social-media-decentralized-run-fully-on-chain.png",
    "links": {
      "github": "https://github.com/ntthuytien/ictree",
      "livePreview": "https://ova6s-nqaaa-aaaaj-aisca-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333268-ictree-social-media-decentralized-run-fully-on-chain",
      "otherLinks": []
    },
    "submitterFirstName": "ntthuytien",
    "submitterLastName": "nttien",
    "about": "ICTree - social media, decentralized, fully on-chain\n \n\n ICTree - decentralized social media reference landing page where you can share your social links, allowing you to create a personalized and easily customizable page - that contains all the important links you want to share and many interesting features is under development. \n \n\n ICTree built on The Internet Computer - The fastest and most scalable general-purpose blockchain\n \n\n The Internet Computer is world's first blockchain that runs at web speed and serves content on the web!\n In fact, this whole project is hosted and run on-chain on Internet Computer too!\n \n\n Challenges ran into\n \n\n I have ran into pretty much of challenges faced with Mokoto language and how to deploy dapp to ICP mainnet, but with the help of Internet Computer Developer Document and the community on Discord, finally I made it! \n Thank you @domwoe for your help and give me free cycles so I can deploy ICTree to mainnet <3  \n \n\n Accomplishments that we're proud of\n \n\n Finally got ICTree working and running fine on ICP mainnet! \n \n\n What's next for ICTree\n \n\n \n\n Add Link Icon Image Field: Allow upload image as field icon\n Add Theme Store: allow browse and choose themes from the community\n Static generate ICTree: Optimize page speed\n Add more fields...\n Decentralize ICTree\n Integrate decentralize file upload solution with IPFS\n More to comes...\n \n\n \n\n How to make your own ICTree theme?\n \n\n Really easy, please take a look at this theme, make sure these following CSS classes are in your theme so ICTree can render theme correctly:  \n \n\n ic_avatar - the avatar image\n \n\n ic_title - the title\n \n\n ic_description - the description\n \n\n ic_social_links - contains all your fields and links\n \n\n Is ICTree opensource?\n \n\n Sure! check project Github here: https://github.com/ntthuytien/ictree",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "ictree - social media, decentralized, run fully on-chain#@#@#motoko#@#@#react#@#@#icp#@#@#ictree - social media, decentralized, run fully on-chain, allowing user to create personalized, easily customizable page - contains all the important links you want to share to the world!",
    "tags": [
      "motoko",
      "react",
      "icp"
    ]
  },
  {
    "id": "social-review",
    "name": "Social Review",
    "description": "Decentralized app to collect, validate and reward reviews for various businesses/products. It lets businesses setup a feedback page to encourage interaction and reward tokens to loyal customers.",
    "image": "social-review.jpg",
    "links": {
      "github": "https://github.com/sanjivcodes/social_reviews",
      "livePreview": "https://7elun-6yaaa-aaaal-aayba-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334576-social-review",
      "otherLinks": []
    },
    "submitterFirstName": "Sanjiv",
    "submitterLastName": "Kumar",
    "about": "Social Review\n \n\n Social Review is a decentralized app to encourage users to give reviews/feedback for various products and businesses. Loyal users are encouraged with gamified token rewards. It also ensures only genuine reviews by enforcing Internet identity for login and then validating reviews using various stakeholders.\n \n\n Businesses can setup a page on SocialReview and the users can rate/leave feedback about their various products and services. Users can also explore other businesses from the app. Loyal users will be rewarded with tokens on the IC network\n \n\n Inspiration\n \n\n We wanted to build an app that did the following\n \n\n \n\n Combating fake reviews\n Easy way to aggregate trustable reviews for a business\n Encourage customers to leave feedback/reviews by rewarding them with tokens\n \n\n \n\n \n\n \n\n What it does\n \n\n \n\n Lets businesses create separate page for reviews\n Lets users login using their internet identity and post reviews for businesses\n The reviews are shown along with the user id for validation\n Loyal users are rewarded with tokens on the ICP\n \n\n \n\n Tech Stack\n \n\n \n\n Internet computer protocol\n Motoko\n Deployed on IC network\n Internet identity login\n Frontend app built using React\n Candid UI\n \n\n \n\n The app has two canisters deployed on ICP. One backend canister has the reviews and other one has the frontend react application deployed.\n \n\n Accomplishments that we're proud of\n \n\n \n\n Getting a functional social reviews app deployed on the internet computer\n Ability to gamify the feedback/review process of businesses\n \n\n \n\n What we learned\n \n\n \n\n We are new to web3 development and understanding decentralized apps was initially challenging.\n We also learnt about deploying multiple canisters on IC and motoko smart contracts\n \n\n \n\n What's next for Social Review\n \n\n \n\n Enable image uploads for reviews using a separate image canister\n \n\n \n\n Tokenized reward system for loyal customers",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "social review#@#@#motoko#@#@#react#@#@#node.js#@#@#internetcomputer#@#@#candid#@#@#decentralized app to collect, validate and reward reviews for various businesses/products. it lets businesses setup a feedback page to encourage interaction and reward tokens to loyal customers.",
    "tags": [
      "motoko",
      "react",
      "node.js",
      "internetcomputer",
      "candid"
    ]
  },
  {
    "id": "kverso",
    "name": "KVERSO",
    "description": "KVERSO is a large-scale virtual 3D Metaverse platform based on IC. With 3D Avatars customization, Pet System(KUNO), NFT PFPs(KABI), DIY display features, UGC+PGC, and dress-up functions.",
    "image": "kverso.jpg",
    "links": {
      "github": "https://github.com/KVERSO",
      "livePreview": "http://www.kverso.com/gallery",
      "external": "https://supernova.devpost.com/submissions/334448-kverso",
      "otherLinks": []
    },
    "submitterFirstName": "Project",
    "submitterLastName": "KVERSO",
    "about": "Project Description\n \n\n K-Universe is a decentralized universe that includes socializing, gaming, and creational functions based on IC Network with NFT, 3D engine, VR, and privatized traffic concepts. We aim to provide a Web3.0-level social interaction experience for players. The digital gallery is a method to display digital assets acquired by players and highlight personalities with trading functions. Players can present visual information on their channels to reveal the cyber lifestyle in Web3.0, empowering their virtual identities.\n \n\n While focusing on aesthetic orientation, KVERSO also pursuits social and interactive experiences. In our vision, member encounters should not be limited to Discord or Twitter groups. K-universe social interaction is a comprehensive multi-dimensional, sensational experience. Players can experience graphic creations, asset trade, casual games, and other social functions to involve themselves in Cyberspace development.\n \n\n What it does\n \n\n Project Kverso includes two key segments: Avatars and the K-Universe community.\n KABI includes NFT portraits, customizable 3D Avatars, a personal gallery, and personal channels, where users can experience the next-generation social and multiplayer functions of 3D K-Universe with KENNER Avatars. The galley is used to retain and display digital assets acquired by users with transaction functions; Users can publish visual information on their channels to present the cyber lifestyle in the Web3.0 era, define themselves, and empower their virtual identity. The first group of KABI holders will receive a Creator's Package, including 4 pieces of digital NFT apparel assets with the community title \"BLAZERS,\" and they will continue to receive future benefits as the project develops.\n \n\n \n\n \n\n How we built it\n \n\n Modeling Stage:\n KVERSO designers utilize 3D MAX and Blender to model and rig the characters from the original artwork, creating HPM (High Polygon Models) at about 30,000 in polygon count. Unity program allows model implementation in the virtual world, and users can operate with a keyboard and mouse on the Web & PC. Mobile users can also efficiently operate with virtual control sticks.\n \n\n Dfinity Application on Blockchain:\n We developed 10,000 pieces of KABI NFTs based on Dfinity. Based on 3D high-surface modeling and light tracking technology, KVERSO creates portraits with unique aesthetic styles, offering a differentiated option for art connoisseurs and investors who believe in decentralization. It highlights the collective identity of NFT community members and the uniqueness of the owners. It's an excellent way to connect with people in the cyber community.\n \n\n We want KABI to embody the latest aesthetic orientation of the cyber generation. The designers from Team KVERSO spent half a year researching the values in world fashion industries, combining hundreds of clothes, accessories, hairstyles, and character models into more than 400,000 characters based on fashion trends. We picked 10,000 pieces of exclusive portraits for selection. Every piece of image is a proud artwork by our passionate designers.\n \n\n Team KVERSO wishes for a peaceful world without discrimination on differences. KABI is a ticket to a universe unfettered by gender, religion, ethnicity, or lifestyle.\n \n\n We have a fair distribution of 10,000 PFP characters based on world ethnicity percentages, and we've also designed 2% of the characters with diversified characteristics across the world.\n \n\n Soon, KABI holders will be able to own their 3D Avatars. We will also transform Avatar clothing into 3D NFTs, upload them into the Dfinity public chain, and experience our Avatar dress-up system. After selecting outwears, users can start enjoying their life in the Metaverse, including the virtual world, Gallery, VR/AR games, etc.\n \n\n Ecology Construction:\n In the future, we will allow users to design wears by themselves and implement the user UGC system. K-Universe citizens can open up fashion stores, create encrypted artworks, and upload them to their galleries, inviting others to buy and sell in the Metaverse.\n \n\n Challenges we ran into\n \n\n We are a group of young people mainly from the year 1995 to 2000. We have been developing with funds from our team for 7 months and marketing for only more than 1 month. We did encounter some difficulties in funding and the initial cooperation within the team. Since it is a relatively difficult task to develop the Metaverse, the progress at the development level has to be done step-by-step.\n \n\n Accomplishments that we're proud of\n \n\n Our first 1,000 pcs KABI NFT Collection is currently No.1 in CCC transaction volume history. We've also developed an online NFT Gallery with Gate, Dfinity & DODO, the gallery includes purchasing, multiplayer, and communication functions, which will launch in a very short time, and we have also implemented ICP as a transaction method. There is a Metaverse demo on our official website, we are developing the Mobile APP as well.\n \n\n \n\n \n\n What's next for KVERSO\n \n\n In our concept, model uploading and custom dress-up functions will lead to the final form of UGC, and players will significantly enrich their digital assets. In the future, Kenners can freely trade and obtain returns after uploading digital assets. By adjusting market mechanisms, consumers can also purchase clothing at reasonable prices. Everyone has the right to create and the freedom to choose. The equality of rights in input and output is the most significant progress of Web3.0 compared to the Web2.0 era. Team KVERSO has designed various events such as community blind-box, creation contest, auction house, player's commission, etc. \n \n\n The significance of custom model uploads extends beyond the scope of gameplay. The Gamefi Metaverses are excellent, but it's still a Web2.0-style product where developers tell players how to play. Team KVERSO believes that the real Metaverse is an everyday scene for citizens, and life should not be just about gameplay and statistics. So we hand over the decision to players and let everyone participate deeply in our Metaverse construction.\n \n\n Linktr.ee\n \n\n Official Website\n \n\n Discord\n \n\n Twitter\n \n\n Medium",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "kverso#@#@#react#@#@#unity#@#@#node.js#@#@#internetcomputer#@#@#kverso is a large-scale virtual 3d metaverse platform based on ic. with 3d avatars customization, pet system(kuno), nft pfps(kabi), diy display features, ugc+pgc, and dress-up functions.",
    "tags": [
      "react",
      "unity",
      "node.js",
      "internetcomputer"
    ]
  },
  {
    "id": "unfoldvr",
    "name": "UnfoldVR",
    "description": "UnfoldVR is a VR native app, integrated with IC using WebRTC, that aims to become the Creative Metaverse. A place where people create and discover 3D NFTs and can interact with others in real-time.",
    "image": "unfoldvr.png",
    "links": {
      "github": "https://github.com/RP3a/unfold-dapp",
      "livePreview": "https://jmorc-qiaaa-aaaam-aaeda-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329656-unfoldvr",
      "otherLinks": [
        "https://x7sao-6qaaa-aaaaj-ad4wq-cai.ic0.app/",
        "http://bit.ly/3b2EZms"
      ]
    },
    "submitterFirstName": "George",
    "submitterLastName": "Cretu",
    "about": "Inspiration\n \n\n The original idea for UnfoldVR was originally significantly different. As a boutique VR development studio we were tired of B2B work and wanted to create our own product. We knew what people enjoyed about VR and what they didn't so we set out to create something to take full advantage of the VR technology. \n Fast forward a couple of years and many conceptual iterations, users and mentors feedback and we realized that the idea of the Metaverse has to be linked to decentralization and IC was the obvious target. \n So from CoachVR, an education VR app we landed on UnfoldVR - The Creative Metaverse. \n We were also quite frustrated with the general public perception of NFTs so we wanted from the get to make a product that uses NFTs to their true potential as ownership management systems and have everything in the VR app NFT driven. \n \n\n What it does\n \n\n We envision UnfoldVR as a key building block of the wider IC metaverse ecosystem. But we also believe that you need native apps for high computation environments, such as VR, to complement web-based solutions. \n The app has the following features implemented:\n \n\n \n\n Link Web App with Native PC VR app\n Select user Lobby Space\n Configure Lobby Space with 2D and 3D NFTs\n Create real-time-ready 3D worlds/items\n Load user creations\n \n\n \n\n Proposed future features include:\n \n\n \n\n Discover other users' creations\n Multi-user VR streaming\n Minting 3D creations as NFTs\n \n\n \n\n Our first challenge was having a native PC VR app communicate with the IC. We solved this using WebRTC technology. Users can login on our web app where they get a pairing code. After starting a local signaling server (included in our app) they can start the VR app and type in the pair code. This will link their Principal ID to their local VR app instance and in the backend we read/write and call functions between the VR app and the IC app. \n \n\n We decided to demonstrate this by bringing NFTs assets from the web app to the VR app. Users manually add NFT links in the web app and those NFTs become available in an NFT Library feature inside the VR app. At this point, given the fragmentation of the NFTs ecosystem and the lack of 3D NFTs we're only loading 2D NFTs dynamically. \n With the approval of their creators, Poked, VRSTL and Distrikt, we've brought in 3D assets from their NFT collections inside our VR app. The objective was to research and investigate compatible formats, optimization requirements and to demonstrate, at a POC level, how interoperability should work between metaverse projects. We also brought their models in Web AR, fully on the IC. \n \n\n The VR app then communicates back to the IC app which NFTs were placed in the user's lobby. \n \n\n The PC VR app is built with Unreal Engine 5 and we're publicly sharing the IC WebRTC protocol with both the IC community and the Unreal community. \n The creation tool, lobby spaces and save-game features are all built using Unreal Engine. Currently we're storing saved game data locally but in the future that will be uploaded on the IC user account. \n \n\n How we built it\n \n\n We're using Motoko for everything IC related with the frontend handled in React Typescript. \n Besides the web frontend, the backend has a database for each user where we store relevant information about their interaction in VR. \n In UnrealEngine we're using their visual scripting language, Blueprints to handle both internal VR app logic and the Web App communication. \n For the WebRTC component, we're making use of a public plugin which is a much simplified version of the built-in Pixel Streaming plugin which comes with Unreal Engine. We've modified the JS files associated with this plugin to manage the specific functions and requests we needed for our specific use case. \n Currently, we're using a local signaling server, which is installed on user's PCs, based in JavaScript, also publicly available. The end goal is to move this on the IC. \n \n\n Challenges we ran into\n \n\n Our first challenge was learning IC. We've been watching on the sidelines how the IC ecosystem grows but we never coded anything on the IC prior to receiving our dfinity grant, shortly before the Supernova kickoff. Fortunately VR development in Unreal Engine proved to be a very similar coding environment to the IC since it's also a medium that evolved very rapidly. \n \n\n One of the most difficult challenge we faced was finding a workable configuration for the WebRTC pairing. We tried many approaches and we succeeded in a few but reaching the current solution took many iterations. While it is an elegant solution, it can be improved still and it is not compatible with native Mobile VR which is our end goal, so there's a room to research further there. \n \n\n An unexpected challenge was rendering 2D NFTs. We knew the ecosystem is not yet standardized but we didn't expect it to have so much variation in implementation. This issue was compounded by the fact that rendering web frames in native VR isn't as flexible as rendering them on a web app. Here too there is much room for improvements. \n \n\n Accomplishments that we're proud of\n \n\n By far we're most proud to have demonstrated how a native PC VR app built with Unreal Engine can communicate securely with an IC app. \n We're also very proud to have pieced together UnfoldVR vision, including features yet to be implemented, in such a short amount of time. \n \n\n We're also extremely grateful for the openness of so many in the community, projects and individuals alike, especially with regards to figuring out a common standard for 3D content on the IC. We're committed to validating their trust. \n \n\n What we learned\n \n\n We've learned that IC is quite a flexible blockchain to work with. We originally expected to code in a more constrained environment with longer deploy times. \n We also learned a lot about WebRTC as a protocol, and we're excited about the associated opportunities of it in relation to IC. \n We also have a greater appreciation of the complexities of NFTs on the IC in general. \n \n\n What's next for UnfoldVR\n \n\n UnfoldVR is a much bigger project than the scope of this hackathon. We want to become the building block of the IC metaverse ecosystem. \n We aim to achieve this by leveraging our WebRTC integration system to empower many other IC projects. Also we want to give users the tools to create 3D web-friendly content to bring in other projects.\n Finally we aim to empower creators and leaders to communicate their vision in an immersive, more rich way through VR Multiplayer and Video Streaming of their sessions to other VR users and to the web, using an expanded architecture of WebRTC. \n \n\n All of this while creating a community around creators and creative content, where users can bring in 3D content from other projects, create 3D content to be used in other projects and discover and interact with the IC community. \n \n\n At this stage we're preparing to finalize our last dfinity grant milestone all while looking for funding for launching a significantly more robust VR app.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "unfoldvr#@#@#motoko#@#@#unreal-engine#@#@#react#@#@#typescript#@#@#unfoldvr is a vr native app, integrated with ic using webrtc, that aims to become the creative metaverse. a place where people create and discover 3d nfts and can interact with others in real-time.",
    "tags": [
      "motoko",
      "unreal-engine",
      "react",
      "typescript"
    ]
  },
  {
    "id": "dwitter",
    "name": "Dwitter",
    "description": "Dwitter is a platform for an interaction between users and celebrities with paid posts and tokenomics",
    "image": "dwitter.png",
    "links": {
      "github": "https://github.com/azhuravel/Dwitter-Dfinity",
      "livePreview": "https://oqjv5-vqaaa-aaaai-ack5a-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/333285-dwitter",
      "otherLinks": []
    },
    "submitterFirstName": "Alex",
    "submitterLastName": "Zhuravel",
    "about": "Inspiration\n \n\n Our team has chosen the SocialFi track as it is really close to us - we all have been working on social projects throughout our career. So we got together and arranged several evenings of brainstorming, and also read several core papers about DeSo - that’s how the idea of Dwitter arose. \n \n\n We have identified one of the main problems in communication between celebrities and fans (one of us worked with bloggers and was familiar with such issues) and wanted to solve it. In particular, many well-known people have to close comments on their public pages due to the large flow of so-called trolls who want to argue on every minor issue. Constant scandals with cyberbullying to athletes due to failures in matches and pop stars only add to the severity of the problem.\n \n\n Also we followed closely and remembered the peak of interest in BitClout. It was a truly interesting project and we decided that the BitClout-like model fits perfectly with the advantages of Dfinity, but also we added token utilization via posting on other user’s pages. \n \n\n Thus we wanted to put these two things together and to find a solution for communication mess in celebrity’s pages through tokenomics.\n \n\n What it does\n \n\n Our project introduces the Pay per Post model and BitClout-like tokenomic. A user can buy another user's token for ICP. Tokens can be used for posting on other user’s pages and as an investment - one can buy another user’s token and sell it later. \n \n\n Anyone can make a post on a celebrity’s page (and even any other) only by buying their tokens and then redeeming them for posting. Because of that, mainly true fans will communicate (as they need to pay for that). \n Also there are a bunch of social features like NFT's integration. \n \n\n Yet another interesting thing is that we also take into account crypto wealth in the formulas of tokenomics, as crypto wealthy people are some kind of celebrity. Thus, the price of your token depends on 2 factors: mainly on the overall number of tokens issued and also on your crypto wealth - the bigger each of these components is, the more expensive the token is. \n \n\n Main feature list includes:\n \n\n \n\n ICP transfer between users and canisters\n Bitclout-like tokenomics with AMM\n buying and selling user tokens\n only NFT you own can be used as avatar\n calculation of total market price of NFTs owned by user\n user wall with posts from other users\n \n\n \n\n Plus we have worked hard on architecture and developed the following features:\n \n\n \n\n one canister per user that allows scale to a large number of users\n upgradable canisters\n auto top-up user canisters with cycles\n \n\n \n\n How we built it\n \n\n Our team used Motoko for backend and ReactJS for frontend and we deployed the project on Dfinity mainnet. Also we widely used Plug as primarily auth service and for ICP payments.\n \n\n Our team considers the development of the community very important and we have decided to Opensource the whole project.\n \n\n Challenges we have ran into\n \n\n \n\n The first one was the architecture of canisters - we settled on one canister per user. It stores user and tokens data, and also holds ICP\n Also we discovered a large number of nuances while implementing purchase and transferring ICP from canister to user and backwards (using proposal)\n \n\n \n\n Accomplishments that we're proud of\n \n\n Dwitter works on the mainnet!\n Also it needs to highlight separately the canister architecture. Besides that, one of the most complex and interesting things was the development of tokenomics, where users can buy and sell tokens for ICP.\n \n\n What we learned\n \n\n How to make dapp on web3 with all data stored on Dfinity blockchain. Also we figured out how to implement tokenomics with AMM and improved knowledge in Motoko.\n We learned how to design canisters to be upgradable. It helps to gradually evolve the service on the mainnet without data loss.\n \n\n What's next for Dwitter\n \n\n In the future we plan to make an integration with Bitcoin and Ethereum (after Dfinity integrates with). Also we continue to work on adding more social mechanics and think about extra monetization features for celebrities. To sum up:\n \n\n \n\n integration with Bitcoin and Ethereum\n likes, subscriptions and comments\n monetization features\n UI/UX improvement\n page load optimization",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dwitter#@#@#motoko#@#@#react#@#@#plug#@#@#dwitter is a platform for an interaction between users and celebrities with paid posts and tokenomics",
    "tags": [
      "motoko",
      "react",
      "plug"
    ]
  },
  {
    "id": "thoth-spell-minter",
    "name": "Thoth Spell Minter",
    "description": "Thoth is a generalized tool putting the power of creating complex AI systems into the hands of anyone.",
    "image": "thoth-spell-minter.jpg",
    "links": {
      "github": "https://github.com/AtlasFoundation/Thoth/tree/supernova",
      "livePreview": "https://f4zho-laaaa-aaaam-qaquq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334383-thoth-spell-minter",
      "otherLinks": []
    },
    "submitterFirstName": "James",
    "submitterLastName": "Harbeck",
    "about": "Inspiration\n \n\n In working on AI systems and experiences and leveraging LLMs to rapidly create few-shot learning systems for a variety of purposes, we started trying to connect outputs from one model to the inputs of another. However, chaining and combining these systems is hard and complicated in code. This inspired Thoth, a node-based programming environment for connecting and building interconnected AI systems and data pipelines. It allows individuals to combine and program AI systems for a variety of use cases, and makes it easy to run these pipelines, which we call ‘spells, anywhere.\n \n\n Many companies are now looking to use Thoth to build systems that they can leverage it as a primary value proposition for their companies. By putting Thoth onto the IC, we solve the deployment problem for all of these individuals and companies, and we make the tool more accessible for others. We can allow individuals and businesses to focus on creating their Spells which create value rather than worrying about maintaining and building the infrastructure required to power a tool like Thoth. It opens the way for DApps to leverage truly world class AI.\n \n\n What it does\n \n\n Thoth is a node-based flow programming environment designed to chain together AI systems with business logic and other service integrations. Thoth will be deployed to the IC and enable people to mint “spells”. A Spell is a graph that represents the totality of the work and can be run in a multitude of environments. Thoth provides a backend where spells can be run, calling external AI systems and other services, to accomplish almost any kind of task, such as AI data processing, pipelines, AI brains for Metaverse characters, etc. These spells can work off a normal REST call/response model, or they can also be modelled and deployed as streaming pipelines for real-time event processing and signalling.\n \n\n This phase of the project consists of the following features:\n \n\n \n\n Thoth react front-end hosted directly on a canister\n Plug wallet sign-in for user authentication\n metadata “Spells” minted as DIP721v2 NFTs and registered with DAB\n loading NFT spells back into the client\n \n\n \n\n How we built it\n \n\n The program is built using mainly react and TypeScript and the open-source graph library called Rete js. Thoth can export a JSON object which represents the work to be done. These spells can be minted into NFTs and sent to other users to load into their Thoth session. It leverages a variety of plug, DAB, and DIP721v2 functions in order to work. A canister needed to be registered to the DAB registry in order to have full functionality. Mint functions needed to be done using DIP721v2 so we had to upgrade to that. Overall it was built by team effort and effective collaboration. \n \n\n Challenges we ran into\n \n\n 1) Larger package sizes from Webpack bundles created a load issue from canisters. We had to shrink the bundles to get loading working\n \n\n 2) Interaction with a traditional backend and loading NFT spells up was time-consuming, and would be improved\n \n\n Accomplishments that we're proud of\n \n\n We are proud that we have DIP721v2 functions and minting functions working from the UI. The ability to mint and share spells with others gives a wider degree of usability of Thoth by people to share their creations and leverage the work of other people in the network.\n \n\n What we learned\n \n\n We learned that the Internet Computer has some limitations that will require further development to solve. Through our work together, we were able to identify these limitations and develop strategies to overcome them. This experience has taught us the value of collaboration in problem-solving and we will carry this lesson forward into future endeavours.\n \n\n What's next for Thoth Spell Minter\n \n\n This is only the beginning for Thoth on the IC. The long-term goal is to create a layer 2 on top of the IC where users can register Agent Runners. These runners will be able to host deployed spells to do any kind of AI work. Spells cost of running would be auto computed from the spell graph so runners could be paid for the work they do. These runners would then be used to power the metaverse with AI, including as Autonomous AI Agents. These agents not only connect to the metaverse but all across social media and other communications channels to create a network of agent-centric services. These Agents would then be sold and distributed on a decentralized marketplace to provide computing through agent runners, individual components for Thoth, services of various kinds, and AI brains.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "thoth spell minter#@#@#react#@#@#typescript#@#@#node.js#@#@#internetcomputer#@#@#rust#@#@#thoth is a generalized tool putting the power of creating complex ai systems into the hands of anyone.",
    "tags": [
      "react",
      "typescript",
      "node.js",
      "internetcomputer",
      "rust"
    ]
  },
  {
    "id": "supernova-deployer",
    "name": "Supernova Deployer",
    "description": "An add-on for the Unity3D game engine to help videogame developers deploy NFT for ICP as easily and quickly as possible",
    "image": "supernova-deployer.png",
    "links": {
      "github": "https://github.com/Doc-Failure/Supernova_Deployer",
      "external": "https://supernova.devpost.com/submissions/332358-supernova-deployer",
      "otherLinks": []
    },
    "submitterFirstName": "Stefano",
    "submitterLastName": "Convertino",
    "about": "💡 Inspiration\n \n\n Previously, we participated in several hackathons with similar projects but for different blockchains.\n After completing our projects, we realized that the basic logic was easily migratable between the various blockchains, so we decided to migrate our implementation to other networks.\n \n\n Unfortunately, we have not been able to recreate an implementation similar to the others, but the basic logic of this application is the same.\n \n\n The main reasons why we started working on this product were several:\n \n\n \n\n In the next few years, it will be necessary to embark a large number of developers if you want to make blockchain applications mainstream.\n Learning a new programming language is not easy and takes time (It is estimated that learning a new programming language takes between 2 and 6 months on average).\n Video game development requires many skills.\n Metaverses, only from the point of view of programming languages, require at least 2 types of languages:\n \n\n \n\n A language for video game development\n A language for the development of smart contracts\n \n\n According to Unity.com, over 61% of game developers know how to develop for Unity3D.\n According to a StackOverflow survey, about 11% of all developers use Unity3D.\n Currently, there are 4.5 million registered Unity3D developers on Toptal.com, and it is by far the most popular game development software platform.\n \n\n \n\n A product that would allow Unity3D developers to create ICP applications without the need to learn the languages ​​and tools for developing smart contracts, would allow a large number of video game developers to be on board very quickly, significantly reducing onboarding times and costs.\n \n\n ✨ What it does\n \n\n Our application provides developers with a Unity3D interface through which it is possible to create and deploy NFTs on ICP.\n \n\n Within the application, there are several archetypes that present different implementations of the Dip standards.\n \n\n The archetypes are editable by anyone at will, although at the moment we recommend the use of the standard ones.\n \n\n From the interface, developers can:\n \n\n \n\n launch a local network\n deploy a contract\n minting tokens\n all automatically.\n \n\n \n\n Currently, we have decided not to implement any library to manage the interaction with contracts because we believe that it cannot add any usefulness to the tool.\n \n\n Later, we will consider whether to implement them after interviewing some users.\n \n\n 🔨 How we built it\n \n\n The project is built in C #, taking advantage of the Unity libraries.\n \n\n Within the project, there are some archetypes containing standard implementations of the ICP's protocols written in Rust.\n \n\n At this moment, being in the testing phase, only one archetype is available (Dip721).\n \n\n Each developer is free to upload their archetypes, use existing ones or modify them.\n \n\n When a developer interacts with the Unity3D client, this automatically calls the DFX functions present within the selected archetypes and allows the developer to have an experience similar to the console.\n With this project, a developer can work with ICP directly from the GUI without having to learn how to use any tools or programming language.\n \n\n It also doesn't require you to install any other dependencies other than our tool.\n We are currently working on using Docker within the project to simplify the migration of the application to other OS.\n \n\n 🔥 Challenges we ran into\n \n\n The original architecture of our project had to be completely different.\n \n\n We were planning a client in Unity and a server that, taking the client's data, would be able, through a Jenkins pipeline, to create and deploy a contract.\n \n\n Unfortunately, we weren't able to recreate a similar architecture.\n \n\n We didn't have much time left, so, in the end, we opted for a client-only architecture.\n \n\n 💯 Accomplishments that we're proud of\n \n\n The architecture adopted within the project has several advantages.\n \n\n The fact that the contracts are present within the client and are visible to all allows all users to modify the archetypes and share them with others.\n \n\n With this architecture, anyone can access the contract and customize it according to their experience.\n After contract customization, everyone can deploy and interact with contracts thanks to our tool.\n \n\n 📖 What we learned\n \n\n Before this hackathon, we had worked with various blockchains and participated in several hackathons, but we had never used our knowledge in the world of ICP.\n \n\n With this event, we were able to learn how ICP works and what the logic is behind it.\n \n\n We learn about its standards, DFX, Canisters, and Dfinity.\n \n\n 🚀 What's next for Supernova Deployer\n \n\n Our goal is to create a tool for Unity3D that allows you to deploy on all blockchains and that facilitates the integrations between them.\n Below is our roadmap:",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "supernova deployer#@#@#c##@#@#dfx#@#@#rust#@#@#unity#@#@#docker#@#@#an add-on for the unity3d game engine to help videogame developers deploy nft for icp as easily and quickly as possible",
    "tags": [
      "c#",
      "dfx",
      "rust",
      "unity",
      "docker"
    ]
  },
  {
    "id": "embark",
    "name": "Embark",
    "description": "Embark integrates Trade and DeFi, combining “Code Is Law” and legal property protection so that any good becomes financially usable as collateral, opening finance for everyone.",
    "image": "embark.jpeg",
    "links": {
      "github": "https://github.com/DevOps-Manager/decentralised_credit",
      "livePreview": "https://vimeo.com/722838000",
      "external": "https://supernova.devpost.com/submissions/329756-embark",
      "otherLinks": [
        "http://decentralised.trade",
        "https://vimeo.com/722818696"
      ]
    },
    "submitterFirstName": "Embark",
    "submitterLastName": "DeFi",
    "about": "Inspiration\n \n\n Enabling every SME to trade and finance globally.\n Next generation of DeFi needs to tap into the real world, while trade benefits from DeFi.\n \n\n What it does\n \n\n Modular Decentralised Trade establishes a standard centered on the IC allowing for financing trade, contract management of the whole contract lifecycle, user interaction including contract issuance, private market auctions, cash flow and fund management.\n \n\n Embark enables real-world promissory note issuance for financing trade and DeFi native yield farming.\n Promissory notes as the base instrument allow for smart Lines of Credit with legal protection and collateral, possible due to the representation of collateral as a bearer token that can be automatically transferred and are priced by verifiable real-world trade.\n \n\n How we built it\n \n\n The Platform integrates \n Fixed Income Contracts are based on the smart legal contract framework Accord and our custom Rust-based Smart Contracts\n \n\n Aims to be flexible regarding terms, collateral (multiple NFTs as collateral and settlement), HTTP request feeds for funding rates based pricing, yield farming integrations via Ethereum (IC ECDSA signature based subnet)\n \n\n Technologies:\n Smart Contracts in Rust\n UI in React\n QuantLib for Quant Finance\n Safe React for integrating with EVM based DeFi\n Accord for Legal Contracts \n \n\n Challenges we ran into\n \n\n We had difficulties to deploy large React UIs to IC. \n Thus we had to come up with a modular architecture and some of the functions are yet to be completed (lack of IC-Ethereum subnet) or deactivated to avoid user risks in this early phase of development.\n \n\n Accomplishments that we're proud of\n \n\n Completely browser based / web native\n \n\n Modular architecture (Frontend and Backend within Canister) integrated into Ethereum-based Vault\n \n\n The ledger and custody infrastructure of the protocol is based on a security focused Safe Multi-Sig and extended for Ethereum/IC compatibility enabling the integrating the fixed income contracts with yield protocols and institutional custodians: The integration is currently based on MetaMask that creates an Ed 25519key identity both on Ethereum as well as IC. Once IC-Ethereum subnet is available we’ll switch to Internet Identity\n \n\n What we learned\n \n\n Reverse Gas Model is different to Ethereum based contract interactions.\n In the future reverse gas provides more ease-of-use for end-users.\n \n\n What's next for Embark\n \n\n First Use-Case will feature Bitcoin denominated Money Market Notes\n \n\n The final version will use Stablecoins for settlement using Ethereum subnet and the IC fungible token standard once available",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "embark#@#@#react#@#@#rust#@#@#quantlib#@#@#embark integrates trade and defi, combining “code is law” and legal property protection so that any good becomes financially usable as collateral, opening finance for everyone.",
    "tags": [
      "react",
      "rust",
      "quantlib"
    ]
  },
  {
    "id": "nifties",
    "name": "Nifties",
    "description": "A place for the ones who dream.A place where they called 'home' when they're climbing the hill and reaching for the heights.A place to help them chase all the lights and shine.",
    "image": "nifties.jpeg",
    "links": {
      "github": "https://github.com/o-0-labs",
      "livePreview": "https://www.niftiesx.xyz",
      "external": "https://supernova.devpost.com/submissions/327541-nifties",
      "otherLinks": []
    },
    "submitterFirstName": "lingxiyang",
    "submitterLastName": "lansane",
    "about": "Inspiration\n \n\n The evolution of Web3 is happening, it changes itself every day, every hour, and every minute.\n Even ERC 721 standard is changing. Everything is evolving in this world.\n Web3 is turning itself upside down, it can and will change the world into a better place.\n Everyone wants to build something and leave his/her legacy in this new world and this is their Web3 dream. \n Wake up in the morning, what do you remember? \n  Everybody has a dream, but not everybody has the courage to chase them.\n  Nifties is not just about NFT it's about the people who want to achieve their WEB 3 dreams.\n  A place for the ones who dream.\n  A place where they called 'home' when they're climbing the hill and reaching for the heights.\n  A place to help them chase all the lights and shine.\n \n\n What it does\n \n\n Nifties is a place where an artist can achieve his/her Web3 dream. Therefore this platform offers the features below:\n  Hackathon: a place for art hackathons, users can hold or joint hold art hackathons for NFT artists\n  Muse: a place for education, dreamers can learn how to become a blockchain artist in one-stop\n  Promotion: a place for SNS account management, dreamers can manage their SNS account in one-stop, featuring data analysis, and multi-platform sync\n  Grants: a place for crowdfunding, dreamers are human beings too, kids gotta eat\n  Agora: a place for information, where users can check the recent events such as whitelist, mint, etc.\n  Bounties(coming soon): a place for bounty hunters. anyone can post their demands and pay the bill so that the bounty hunter will take care of the rest.\n  Workshop(coming soon): a place for dreamers to call 'home', they can store as much as possible amount of information and artwork as they want to introduce themselves to the world.\n  Thumbs-up(coming soon): a place where users can communicate, dreamers and viewers can show their appreciation for each other.\n \n\n How we built it\n \n\n Frontend: Typescript, React\n Backend: Rust, Rocket\n Contract: RUST, Crowdfunding, and NFT minting\n DB: Mysql\n \n\n Challenges we ran into\n \n\n Actually, time is not on our side, we were working against the clock. Cooperating and communicating is one of the most important things for a newly assembled hackathon team. We have not known each other before, but now we are a team and a real team. we are pretty sure that we will unite as a team to quest more adventures.\n \n\n Accomplishments that we're proud of\n \n\n We finally did it, most of the features are online, and we learned a lot about the ICP, we even learned how to build a prosperous community. \n \n\n What we learned\n \n\n We learned to communicate with each other in a proficient way, and we know how ICP works. we also did some research on how to build a community for creators, customers, and big companies that are going to support the money for the dreamers.\n \n\n What's next for Nifties\n \n\n First, we are going to finish and polish the feature we planned before, and also focus on the 3 things below:\n  Community Build: Attract more creators that happened to be a dreamer and more people who are interested in fine art. \n  Twitter Discord Telegram account up and online.\n  Held art hackathon and event for the dreamers on the platform.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "nifties#@#@#typescript#@#@#react#@#@#rust#@#@#rocket#@#@#nft#@#@#mysql#@#@#a place for the ones who dream.a place where they called 'home' when they're climbing the hill and reaching for the heights.a place to help them chase all the lights and shine.",
    "tags": [
      "typescript",
      "react",
      "rust",
      "rocket",
      "nft",
      "mysql"
    ]
  },
  {
    "id": "blank-space",
    "name": "blank space",
    "description": "A space to write, create, think and collaborate on documents with multiple peers across the globe through the IC blockchain.",
    "image": "blank-space.jpeg",
    "links": {
      "github": "https://github.com/mhmemon444/blankspace",
      "livePreview": "https://gxneu-6qaaa-aaaal-qax6q-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/329795-blank-space",
      "otherLinks": [
        "https://www.blankspace.live/"
      ]
    },
    "submitterFirstName": "Daniel",
    "submitterLastName": "Raad",
    "about": "Welcome to blank space!\n \n\n What is blank space?\n \n\n blank space brings decentralised, real-time document collaboration for the very first time to the IC Blockchain! While planning this project, Hassan and I were using Google Docs, an application which is actively used by approximately 2 billion users worldwide. This lead us to the belief that this application would have wide applicability, making use of the unique characteristics of the IC blockchain, such as its speed and security, making it a perfect candidate for real-time collaboration as well as decentralised document data storage so no company completely owns your data and documents.\n \n\n How we built it?\n \n\n The build process was completed by me and Hassan, making use of our primary tools: VS code for the development process, the Motoko docs for research and understanding of the IC blockchain, and finally Google Docs and Discord for collaborating and planning. \n \n\n The architecture involves 3 main canisters. \n \n\n \n\n blankspace_assets\n  blankspace\n  signalling\n \n\n \n\n blankspace_assets is our front end canister maintaining the primary react source code, which handles the connected peers on a document, the document itself (including the sending of deltas which are the changes on the document), and our front end features which can be interacted with. \n \n\n blankspace is canister is used for the management and maintenance of the Users to Documents relationship, as well as the current active peers on a set document.\n \n\n And finally the signalling canister for the signalling between users as they send their WebRTC offers and answers from one user to the other. \n \n\n This multi-canister implementation allows the signalling functionality to be separated from the blank space project and be utilised by anyone who wishes to use the signalling canister to also send offers and answers between multiple peers in the future, regardless of what application they are using a WebRTC offers answers based approach for.  \n \n\n Challenges we ran into\n \n\n The primary and most noteworthy challenge we faced was connecting users for the collaborative process. For this process, we decided to utilize WebRTC, to be able to quickly send messages (in our case, deltas which represent changes on the document) to each of the separate peers so that they have the most up to date documents.\n \n\n On web2.0, we would simply have used node.js as our server-side tool and utilized sockets to instantly connect users and exchange direct offers and answers for peers in WebRTC. Without Sockets, we needed to go back to first principles to understand what WebRTC provides and how it connects its users. We recognised that a WebRTC connection between peers can be made through paper, manually; if a peer which offers a connection receives an answer from a separate peer who reads the initial offer. Therefore, using Motoko, we built a signalling process through updates to the blockchain on who is attempting to connect, simply sharing the offers and answers between peers who represent a user on the document.\n \n\n Another major issue faced with connecting peers involves the ability to connect to other users on different networks. While testing blank space locally, our solution successfully managed to connect several peers together. However, once deployed to the IC, different users will be on different networks, and this meant that the webRTC peers were no longer connecting successfully. This was solved using a STUN and TURN server, hosted on Azure to allow WebRTC to connect users on different networks.  \n \n\n Accomplishments that we're proud of\n \n\n We are extremely proud that we were able to successfully connect users through the IC and collaborate on a live document. Our final test was to connect a user in America (myself) and a user in the UK (Hassan) over the live version of the IC. This was proof that we had successfully made a product which can be used by individuals globally, on a truly decentralised system. \n \n\n What we learned\n \n\n There are several skills we learned during this process, for example learning new tools and frameworks such as WebRTC, Motoko, and how real-time collaboration works for documents and the processes behind them. The most interesting takeaways revolve around how all these technologies can combine to produce a tool which can be used by several individuals around the world in a decentralised manner, working with the unique strengths that the IC blockchain provide, leading to challenges which were overcome and learning opportunities to demonstrate intuitive thinking which was a pleasure to work through. \n \n\n What's next for blank space\n \n\n Now, we have shown you how we brought decentralised real-time document collaboration to life with the help of the IC blockchain. But what's in store for the future of blank space? In the more immediate future we plan to add document encryption options, voice group call ability while collaborating on documents, and greater support for import/export formats, along with additional quality of life features. We will also look to scale this project further as it begins to grow, for example by adding more user canisters. Ultimately, the future of the IC blockchain looks very promising and we are looking forward to contributing to the ecosystem further!",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "blank space#@#@#motoko#@#@#webrtc#@#@#react#@#@#azure#@#@#a space to write, create, think and collaborate on documents with multiple peers across the globe through the ic blockchain.",
    "tags": [
      "motoko",
      "webrtc",
      "react",
      "azure"
    ]
  },
  {
    "id": "farmdao",
    "name": "FarmDAO",
    "description": "Onchain-offchain loans for emerging market agro-processing",
    "image": "farmdao.png",
    "links": {
      "github": "https://github.com/farmdao",
      "livePreview": "http://farmdao-app.live/",
      "external": "https://supernova.devpost.com/submissions/327515-farmdao",
      "otherLinks": []
    },
    "submitterFirstName": "Kyle",
    "submitterLastName": "Schutter",
    "about": "Inspiration\n \n\n Developing economies, especially in Africa, have a shortage of agro processing capacity. While developed economies can make dried mangos or tomato sauce when there is a bumper crop, developing countries often don’t have the capacity to process locally and thus produce rots. This is because Agro processing requires factories and factories require capital. And capital typically runs at 15-30% interest in developing countries.\n \n\n Affordable loans can unlock the potential of more than 1 billion people.\n \n\n Meanwhile, cryptocurrency holders are looking for yield, especially yield that is uncorrelated with the rest of the crypto market. Right now, in the bear market, yield is down.\n \n\n Investing in developing countries is a great way to get 10-30% yield on assets uncorrelated with the crypto-economy.\n \n\n Prior Art inspiration: Goldfinch does something similar for Consumer Finance companies in developing countries. Using the Eth network, Goldfinch provides USDC loans to consumer finance companies like JoyPay in Mexico to provide financing for phones, TVs, etc. Goldfinch has raised over $120m. FarmDAO is analogous to Goldfinch but for SME finance on the ICP blockchain.\n \n\n One of our team members (Kyle Schutter) has raised millions of dollars for agri processors in Africa over the last 10 years as owner of the the company thegrant.co. He knows the challenges of raising capital for this market intimately.\n \n\n What it does\n \n\n With FarmDAO, Agro processors like tomato sauce canneries or sunflower oil producers can now access capital faster and at affordable rates. The loan can be collateralized by machinery, land, invoices, purchase orders or personal guarantee. In addition to collateral, borrowers have other incentives to repay: reputational risk, reporting to local credit bureaus and no longer being able to borrow on our FarmDAO platform. \n Lenders are split into two tranches: Senior Debt at ~8% interest which is repaid first and Junior Debt at ~18% interest which is repaid last. This blended financing enables higher yield for those willing to take more risk.\n The Junior Debt backers have to do their due diligence and vet the opportunity because their money is on the line.\n If the Junior Debt backers approve the loan, they will fund 20% of the loan as the first-loss money or junior debt. They are taking more risk so backers receive a higher interest rate–let’s say 18%\n Backer-approved loans are then available for Senior Debt to fund the remaining 80% of the loan. The Senior Debt will have a lower interest rate because they are taking less risk.\n The combined interest rate will be 10% which is a good deal in developing markets. \n \n\n Once installed, the factory produces shelf-stable agricultural products which are exported or consumed locally. \n With this new revenue stream, the factory can repay the loan and then Senior Debt and finally backers are repaid automatically through the smart contract. This is vastly better than the current situation where liquidity providers often have their repayment disbursements delayed by processing issues.\n \n\n How we built it\n \n\n The frontend was built with ReactJS. The smart contracts were programmed in Motoko. The backend API and database was built using NestJS and PostgreSQL, respectively. We used class-validator for API request validation and the application is hosted on Heroku.\n \n\n Challenges we ran into\n \n\n \n\n no stablecoin on IC…yet! XTC is not quite a stablecoin as it is hard to go back and forth between ICP and XTC. So at this point loans can only be denominated in ICP.\n Connecting the front-end (react) with Motoko. Most documentation for Motoko/Javascript integrations is for Svelte, not React. However, the IC community was very helpful and helped us resolve the issues\n Differences in concept for ids and keys between internet computer and traditional blockchains\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Building a simple yet fully running loan application on a blockchain we had not used before.\n Sticking together as a team even when the going got tough.\n \n\n \n\n What we learned\n \n\n \n\n How to create canisters and have them communicate with each other (frontend canister and contract canister)\n How to make calls from the frontend canister using an Actor.\n We learned that ICP has a strong community of people willing to help and who want to see the protocol grow.\n \n\n \n\n What's next for Decentralized SME lending\n \n\n \n\n Integration of frontend and backend\n User authentication Wallet Implementation Go deeper with the display of the loans (Junior/Senior Debt) Connect React and Motoko\n User/Borrower verification via certain required documents and collateral before a loan is created. \n Give junior debts the option to see list of loan requests and a link to each borrower's documents for verification before contributing to junior pool \n Set up our react frontend which is more detailed and has a better UI/UX than what we have now in Svelte. \n Only show certain buttons based on user's role (eg. borrowers would only be able to see the withdraw pool funds and check loan status buttons) and pool status (withdraw pool funds won't be clickable until pool status has been set to approved and senior pool has enough funds for the requested loan). \n Enable contributions to Junior pool to be withdrawable. \n Implement business logic based on points mentioned above in the api and database. \n A token to enable direct investment in our protocol.\n \n\n \n\n Team\n \n\n \n\n Godswill (Nigeria) Backend development\n Kiko (Egypt) Smart contracts\n Elias (Canada) Frontend\n Chifunda (Zambia) Finance\n Kyle (Kenya/US) Product",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "farmdao#@#@#motoko#@#@#javascript#@#@#react#@#@#nestjs#@#@#postgresql#@#@#heroku#@#@#icp#@#@#dfx#@#@#onchain-offchain loans for emerging market agro-processing",
    "tags": [
      "motoko",
      "javascript",
      "react",
      "nestjs",
      "postgresql",
      "heroku",
      "icp",
      "dfx"
    ]
  },
  {
    "id": "metablok",
    "name": "Metablok",
    "description": "Metablok is a metaverse shopping& game platform where different brands  that want to sell  in the open-air mall and transfer their real-world products in 3D metaverse and offer them for sale with ICP.",
    "image": "metablok.png",
    "links": {
      "github": "http://github.com/hasimsait/dfx_deploy",
      "livePreview": "https://yp5qx-fyaaa-aaaag-qaovq-cai.raw.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/330362-metablok",
      "otherLinks": [
        "https://metablok.space/",
        "https://github.com/BeytullahCetin/Metablok-OpenMetaMall"
      ]
    },
    "submitterFirstName": "Hasan",
    "submitterLastName": "Özkul",
    "about": "Inspiration\n \n\n With the development of technology, the digitalization needs of brands are increasing day by day. Most of the brands open their stores and make sales on the internet. With the development of the metaverse over time, we think that there will be no brands that do not open a store in environments such as the metaverse. Especially in the metaverse environment, where visual perception increases and product inspection opportunities are moved to a different dimension We believe that the pleasure of shopping will be different.\n The number of vr glasses is increasing day by day and people have started to spend more time in the metaverse. As a shopping experience in the future, we think that the products can be purchased by examining the products in much more detail in the 3D environment, and even an experience similar to the physical shopping experience in the metaverse shopping centers can be given over time.We think that instead of selling land in Metaverse, establishing an open-air mall and selling empty shops in different sizes may be a more beneficial solution for companies. Moreover, in the following stages, each brand will be able to design the store itself with our store designer editor tool.\n \n\n On this platform, the experience of logging into the system with our own digital twin avatars, trying on different clothes on our avatar and purchasing with ICP coin is offered.\n \n\n In addition, we believe that cryptocurrencies will be used more widely in payments over time and crypto reward mechanisms will become widespread especially in internet shopping. All these are the factors that push us to do this project.\n \n\n What it does\n \n\n Metablok is a platform where brands can buy or rent empty shops in the metaverse, display their products in 3D environment, open them for sale and sell with crypto money. You can enter the system with your own digital twin avatar and talk other avatars with your voice.You can try different clothes with your avatar and buy with ICP. Moreover the platform will be play&earn game platform. Every avatar will enter the games(basketball,tennis etc) and earn metablok tokens.\n \n\n How we built it\n \n\n Barış Baran designed an open-air mall and stores with Blender, two of our friends (Resul,Dr Alper\n  and Beytullah) made the developments on the Unity Framework side and then created a multiplayer environment with the Photon framework. Beytullah added virtual dressing functionality to our system. Resul also developed avatar based-system with avatar-sdk. Haşim developed voice chat platform with Agora Voice SDK. Haşim & Mert and Hasan also dealt with blockchain developments and integrations, and we were able to release our first product in mvp.\n \n\n Challenges we ran into\n \n\n \n\n Transferring a real-world object to the metaverse was a big challenge.\n Optimization was a big challenge to overcome. WebGL is very unforgiving in this regard.\n Character control and functionality problems in multiplayer.\n Voice chat Agora-SDK integration was hard.\n \n\n \n\n Accomplishments that we're proud of\n \n\n \n\n Entering the system with the digital avatars we produced from our photos.\n  You can try and buy the clothes you choose in Metablok shops with your avatar.\n Avatars can talk each other with voice.\n Cross-platform support. We have connected both VR and WebGL in the same metaverse.\n We took pictures of different real-life objects from different angles and transferred them to the metaverse. It was not an easy thing, but we were proud to see that we could do it.\n 3D animated model built from one selfie used by local compute SDK in MetaBlock.\n For better optimization, we had to sacrifice a lot of the quality of the graphics. However, even after that, we believe we managed to create something that looks good\n \n\n \n\n What we learned\n \n\n \n\n How to create a cross-platform metaverse in Unity.\n How to transfer any real-world object and yourself as an avatar to the metaverse and customize your avatars with wearables.\n We learned how to use light baking and LOD (Level of Detail) right for better optimization.\n \n\n \n\n What's next for Metablok\n \n\n \n\n We will develop the ICP Unity wallet plugin for VR glasses and ensure that transactions can be done without leaving the metaverse.\n We are planning to open nft marketplace for our metaverse platform to sell and make auction on metaverse with our avatars. In this way, shops will be able to be sold over the nft market and the digital twins of the products will be auctioned between avatars.\n We also want people to try on things like dresses and shoes and experience what they look like with their own avatar.\n We also plan to use NeRF: Neural Radiance Fields and will optimize a neural representation for the custom real object and will build a 3D virtual object if we collect enough 3d object images. According to our knowledge, there is no AI model and SDK to convert from 2D to 3D because it needs training.\n We want to turn metablok into an entertainment platform where different games can be played over VR.\n -We are planning to add traditional payment methods to the metaverse as well. (Square, masterpass etc.)",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "metablok#@#@#unity#@#@#avatar-sdk#@#@#photon#@#@#agora-sdk#@#@#metablok is a metaverse shopping& game platform where different brands  that want to sell  in the open-air mall and transfer their real-world products in 3d metaverse and offer them for sale with icp.",
    "tags": [
      "unity",
      "avatar-sdk",
      "photon",
      "agora-sdk"
    ]
  },
  {
    "id": "save-soil-and-farmers",
    "name": "Save Soil & Farmers",
    "description": "52% of agricultural soil is already degraded, thousands of farmers are committing suicide due to soil depletion. It is estimated that soil extinction is costing the world up to US$ 10.6 trillion/year",
    "image": "save-soil-and-farmers.png",
    "links": {
      "github": "https://github.com/Prana-Tree/savesoil_dao",
      "livePreview": "https://www.consciousplanet.org/",
      "external": "https://supernova.devpost.com/submissions/334129-save-soil-farmers",
      "otherLinks": []
    },
    "submitterFirstName": "Prana",
    "submitterLastName": "Tree",
    "about": "Inspiration\n \n\n THE CRISIS: Lack of organic content turns soil into sand, leading to:\n \n\n FOOD CRISIS\n In 20 years, 40% less food is expected to be produced for 9.3 billion people. Poor soil leads to poor nutritional value. Today's fruits and vegetables already contain 90% fewer nutrients. 2 billion people suffer from nutritional deficiencies leading to multitude of diseases.\n \n\n CLIMATE CHANGE\n Carbon stored in soil is 3x that in living plants, and 2x that in the atmosphere, which means soil is crucial for carbon sequestration. If the world's soils are not revitalized, they could release 850 billion tonnes of carbon dioxide into the atmosphere contributing to climate change. This is more than all of humanity's emissions in the last 30 years combined.\n \n\n LOSS OF LIVELIHOOD\n Thousands of farmers are committing suicide due to depletion in soil.\n 74% of the poor are directly affected by land degradation globally.\n It is estimated that soil extinction is costing the world up to US$ 10.6 trillion every year.\n \n\n WATER SCARCITY\n Depleted soils cannot absorb and regulate water flows. Lack of water retention leads to water scarcity, droughts & floods. Organic matter can hold up to 90% of its weight in water and release it slowly over time. This is a big help in drought-prone areas.\n \n\n LOSS OF BIO-DIVERSITY\n Scientists say that around 27000 species of life forms are becoming extinct every year due to loss of habitat. The crisis has reached a point where 80% of the insect biomass has gone. Loss of biodiversity further disrupts the soil habitat and prevents soil regeneration.\n \n\n CONFLICT AND MIGRATION\n Population growth, and food and water scarcity could cause over 1 billion to migrate to other regions and countries by 2050. Land issues have played a significant role in over 90% of major wars and conflicts in Africa since 1990. From the French Revolution to the Arab Spring, high food prices have been cited as a factor behind mass protest movements.\n \n\n Save Soil is a global movement launched by Sadhguru, to address the soil crisis by bringing together people from around the world to stand up for Soil Health, and supporting leaders of all nations to institute national policies and actions toward increasing the organic content in cultivable Soil. We at \"Pranatree\" have some up with a solution to support the save soil movement by creating a product that will:\n \n\n \n\n Incentivize the farmers to increase the organic content in soil to the required 3-6% using a sensor based system on farms\n Enable economic support to farmers by facilitating easy access to carbon credit subsidies \n Ensure a percentage of sales at stores from organic produce goes back to the original farmer via farmer's DAO so that it not always the middlemen who profit vs the hard working farmer\n \n\n \n\n What it does\n \n\n we want to create a farmers dao for creating and managing economy which enhances solil health and helps deliver rich nutritious products.\n \n\n How we built it\n \n\n we are using a basic setup for dao on dfinity.\n \n\n Challenges we ran into\n \n\n we didn't had much time. :)\n \n\n What's next for Save Soil & Farmers\n \n\n We are seeking funding to develop the sensors that measures the organic content, hire ICP/Difinity developers, soil scientist and nutritionists to realize the project.",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "save soil & farmers#@#@#icp#@#@#52% of agricultural soil is already degraded, thousands of farmers are committing suicide due to soil depletion. it is estimated that soil extinction is costing the world up to us$ 10.6 trillion/year",
    "tags": [
      "icp"
    ]
  },
  {
    "id": "nfts-on-videate",
    "name": "NFTs on Videate",
    "description": "Videate is an open video platform that I was awarded a DFNINITY grant for and am in the process of building. For the hackathon, I added NFT purchasing and transferring for all videos on the platform.",
    "image": "nfts-on-videate.png",
    "links": {
      "github": "https://github.com/mymikemiller/videate",
      "external": "https://supernova.devpost.com/submissions/334186-nfts-on-videate",
      "otherLinks": []
    },
    "submitterFirstName": "Mike",
    "submitterLastName": "Miller",
    "about": "Inspiration\n \n\n Videate was initially inspired by my frustration in getting video files from my computer onto my iPhone 3GS oh so many years ago. I figured out that if I wrote a simple podcast server that allowed me to access a folder of files from my computer on my phone, I wouldn't need to mess with 30-pin dock connector cords or iTunes. Over the years, this idea has evolved into an open platform where anyone can subscribe to other users' video feeds where a set number of videos are automatically downloaded onto their devices overnight and, just like audio podcasts, can be set to be automatically deleted after viewing making space for the next episode to begin downloading.\n \n\n Because each user has their own unique feed link for each feed they subscribe to, similar to Patreon, I'm able to keep track of who is downloading what. This allows me to charge viewers each month a set amount that gets distributed among all the creators they viewed based on amount of time spent watching each. This single static fee and automatic splitting is in contrast to Patreon's model of requiring users to go through the manual step of setting up monthly contributions for each creator they want to support.\n \n\n With all the talk of NFTs this past year, it was obvious they would be a great fit for Videate, especially since, with the Internet Computer, they could be minted and tracked right along side the video feed generation and viewership tracking, so that's what I built during the hackathon.\n \n\n What it does\n \n\n When a viewer enjoys a video on the Videate platform, they can click a link in the video's Show Notes right inside the podcast player where they are watching the video to sign into their Videate account and mint an NFT for the video, or purchase the NFT from the current owner. With the original sale the video creator will earn the entire purchase price, and with any subsequent sales will receive a percentage.\n \n\n NFTs are seen by many as having little or no value. Indeed, owning an NFT for a video on Videate doesn't grant the owner distribution rights for the video or rights to any income the video generates on the platform (though that's a future possibility), but one tangible benefit of owning a video's NFT is that your name is shown to everyone else who downloads the video feed, and that certainly has value to many.\n \n\n How we built it\n \n\n I followed Severin Siffert's Supernova Hackathon workshop video Mint an NFT and used the [motoko code from github] to get the canister up and running which allowed me to integrate with my existing Videate canisters with very little trouble.\n \n\n Challenges we ran into\n \n\n The biggest challenge was that inside of the http_request function, which is used to generate the RSS feeds, canisters are not able to call each others' query functions. All functions had to either be upgraded to update functions, or all actors had to be placed in a single canister as described in this issue.\n \n\n Accomplishments that we're proud of\n \n\n I was able to get this working in only a few days of work due to the IC and Motoko's ease of use and interoperability. Thanks DFINITY!\n \n\n What we learned\n \n\n I continue to be impressed with the IC, but there are still a few bugs that need to be worked out as mentioned above.\n \n\n What's next for NFTs on Videate\n \n\n Adding payment to the platform, as planned as part of the the grant work, and integrating NFT purchase and transfer payment.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "nfts on videate#@#@#motoko#@#@#react#@#@#videate is an open video platform that i was awarded a dfninity grant for and am in the process of building. for the hackathon, i added nft purchasing and transferring for all videos on the platform.",
    "tags": [
      "motoko",
      "react"
    ]
  },
  {
    "id": "mantadocs",
    "name": "MantaDocs",
    "description": "MantaDocs is a knowledge workspace that lets you create, organize and collaborate on rich documents. From planning your next vacation, to sharing ideas across your team. MantaDocs has you covered.",
    "image": "mantadocs.png",
    "links": {
      "github": "https://github.com/jnlewis/manta-ic",
      "external": "https://supernova.devpost.com/submissions/334201-mantadocs",
      "otherLinks": []
    },
    "submitterFirstName": "Jeffrey",
    "submitterLastName": "Lewis",
    "about": "What it does\n \n\n MantaDocs is a decentralized knowledge workspace that lets you create, organize and collaborate on rich documents. From planning your next vacation, to sharing ideas across your team. MantaDocs has you covered. \n \n\n Create beautiful documents and organize them in workspaces of your own where you can keep private or make them public so others can join in and collaborate. Discover interesting public workspaces that you can join to see, learn and contribute.\n \n\n Features\n \n\n \n\n Intuitive user experience makes setup, creation, and discovery easy.\n Compose and style documents on a modern rich text editor.\n Workspaces keeps your documents well organized.\n Control access through private and public workspaces.\n Accessible on both desktop and mobile web browser.\n \n\n \n\n \n\n \n\n Inspiration\n \n\n The project was inspired by Confluence, an enterprise platform for teams to manage work. We loved the idea of collaboration through documents and being able to keep ideas and work documented all in one place. At the same time, we also wanted to be able to safely store our private notes that only we can see and access and is available throughout our lifetime regardless of which organization we are attached to. We came up with MantaDocs, a simplified and focused platform that supports both private and public spaces so we can have the best of both worlds. We went further to make workspaces not just accessible to who we invite, but to everyone on MantaDocs through a discovery feature.\n \n\n How we built it\n \n\n \n\n \n\n MantaDocs is built for the Internet Computer blockchain and consists of two canisters: a frontend application for the UX and the backend for managing the applications core storage. The frontend is developed with React, and the backend modules are written in the native Mokoto language. On the storage, we keep three key-value store segments which are Documents, Workspaces and Members. The documents and workspaces store are self-explanatory, and the members store is used to keep track of workspace members and is updated whenever people join or leaves a workspace.\n \n\n Challenges we ran into\n \n\n As this is the first time developing for Internet Computer, we had no knowledge on Mokoto and had to learn from the start. Fortunately the learning curve was not very steep with the help of documentations and resources. However, we had hoped that more of the showcase projects were open source and had Github links so we could learn more by examples which would have reduced some trial and errors. Nevertheless, we were able to complete the MVC in time and were really happy to learn a new language.\n \n\n Accomplishments that we're proud of\n \n\n At first we set out to make something really simple, just a tool that lets you write rich documents and save them privately. Then we added the concept of Workspaces for better organization. Later we introduced visibility on workspace where we can set them private or public and finally made it possible to discover public workspaces across the application. While working on this project, we were so passionate that we kept working to make the project better than we initially intended or thought we could achieve. We are proud with of being able to produce a prototype that has all the features we imagined.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "other"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "mantadocs#@#@#mokoto#@#@#react#@#@#mantadocs is a knowledge workspace that lets you create, organize and collaborate on rich documents. from planning your next vacation, to sharing ideas across your team. mantadocs has you covered.",
    "tags": [
      "mokoto",
      "react"
    ]
  },
  {
    "id": "decium",
    "name": "Decium",
    "description": "A Decentralized web3 blogging platform.",
    "image": "decium.jpg",
    "links": {
      "github": "https://github.com/Quatre-Finance/decium",
      "external": "https://supernova.devpost.com/submissions/327825-decium",
      "otherLinks": []
    },
    "submitterFirstName": "bobeu",
    "submitterLastName": "Isaac",
    "about": "Inspiration\n \n\n Being a team of persons, building decentralized innovation that grants unrestricted access to anyone around the world has been our focus. Coming from EVM background, we knew it might be challenging to learn a new programming language entirely within a short time, but after we got to know about Dfinity, we are determined to show the world how the internet computer can scale decentralized applications that practically not suited for machines like the EVM. As the developer, my goal has been to create an unrestricted self-governed platform. I got this inspiration long ago when I saw much quality contents go unnoticed, and again content makers do not earn reward commensurate to the value they give.\n \n\n What it does\n \n\n Decium is a content management and marketplace platform where anyone can simply log in using the internet identity sign method to publish and/or trade content such as tutorials, solutions, professional materials, and so on. Decium is permissionless. We only require sign-in using the IID so that each user will be unique from another and can quickly initiate and sign transactions from their wallet.\n \n\n Content makers who are either occasionally or specialize in creating consumable content can leverage Decium to expand their reach by simply uploading or creating new content using a section dedicated for it. Consumers of these contents are able to access them by first purchase them using ICP. Afterwards, they can access the content (s) either from the platform or be routed to an approved content location.\n \n\n Bloggers are able to mint copyrights presented in NFT forms which are transferable and can be listed on the Decium content marketplace for sale.\n \n\n How we built it\n \n\n We started with the idea formulation, then to the problem definition with a series of brainstorming section. After two rounds of meeting, we concluded on what to build. The designer got to work, released the mockup design after a few days, then the final design. \n \n\n I began working on the from afterwards even though we had not find any frontend developer. \n I initiated a repository, instantiated with Nextjs framework, but we have adopted MaterialUI style since it is faster to build with it than having to start from the scratch.  \n \n\n Challenges we ran into\n \n\n The major challenge is getting a frontend developer to join our team, and learning new language within a short period of time. A guy joined us but never show up after some days. We tried to reach out to him severally, but he often ignores us. Again, we got two Indian dudes who, after having calls with them did not show up again. But then, we have to keep moving. \n \n\n We were left with just three people: a designer (lady), admin and myself. Although we entered the hackathon late, I spent couple of days to build the frontend then moving to learn motoko was challenging for me. There was not enough time to really study the documentation as that is my style of learning. Perhaps I had given up submission yesterday when I was struggling to run the motoko code until today I saw the deadline was extended by 24 more hours. I was elated. Even if I could not win in this hackathon, I am very much happy for been able to submit. I am dedicated to pursuing this project. I will continue with the motoko doc to perfect my knowledge of it.\n \n\n Accomplishments that we're proud of\n \n\n We are able to write some motoko code, even though not complete and there are some bugs that would not make it run successfully. This was one of the coolest accomplishment for us plus the privilege to submit our works.\n \n\n What we learned\n \n\n Team work and encouragement. The admin guy is very encouraging and supportive. The design lady is fast to work and deliver. Above all, giving up at a difficult time is not the best. You've got to re-strategize and keep moving. It is not finish until it is finished.\n \n\n What's next for Decium\n \n\n Decium is a cool and exceptional project we believe is introducing a new paradigm in the world of content management and consumption. It will bring much popularity to Dfinity platform. It will also encourage the usage of the platform and her currency. We are committed to keep building. Mainnet and long-term running is our target.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "decium#@#@#react#@#@#nextjs#@#@#materiaui#@#@#motoko#@#@#a decentralized web3 blogging platform.",
    "tags": [
      "react",
      "nextjs",
      "materiaui",
      "motoko"
    ]
  },
  {
    "id": "web3-empowered-marketing-advisor",
    "name": "WEB3 Empowered Marketing Advisor",
    "description": "Get a Marketing Advise from over 200 Marketing Expert, based on your situation, product and target group with an exact guideline how to do your marketing. Fully on Web3 build on the Internet Computer.",
    "image": "web3-empowered-marketing-advisor.png",
    "links": {
      "github": "https://github.com/MCikus/supernova-submission",
      "livePreview": "http://ufostart-supernova.icp.xyz/landing",
      "external": "https://supernova.devpost.com/submissions/334198-web3-empowered-marketing-advisor",
      "otherLinks": [
        "http://ufostart-supernova.icp.xyz"
      ]
    },
    "submitterFirstName": "Marcel",
    "submitterLastName": "Hühn",
    "about": "Inspiration\n \n\n We are driven by our core values and aiming to become a real DAO anytime in the future. We thing that decentralization by design should always be the goal. Each Core-Team Member at UFOstart is either a Freelancer or has some other kind of business up-and-running. So we formed from a small marketing team to a interdisciplinary team with a huge skillset. But at UFOstart we are still at our roots, to form a new style of Marketing product wich is based more like a protocol and with our main target group of Blockchain Startups. \n \n\n What it does\n \n\n Our marketing api collects data and runs it through our decision engine then a marketing plan is created from the input fields. This marketing plan is completely data-driven. Our community can independently design UIs or develop data displays to enrich their own product. \n \n\n How we built it\n \n\n We build our MVP with Vue.js using our UFOstart REST-API which is build in MongoDB with Express. \n \n\n Challenges we ran into\n \n\n Our main challenge we faced was the short time and the invisible informations regarding the IC technology. It kind lacks of some best practices and short tutorials. \n \n\n Accomplishments that we're proud of\n \n\n We're anyway proud of us, that we have such a good team and in any case how the hackathon result might be, we have gone a very long way forward to our main goal. We learned ourselves a lot and had much fun. \n \n\n What we learned\n \n\n We learned a lot about IC, which all of us in the team have found very fascinating for several years. We have looked more deeply into the functionality and added value and are all convinced that this network is suitable for our purposes. \n \n\n What's next for WEB3 Empowered Marketing Advisor\n \n\n Since we are a community project, we want to create a directory or marketplace for all the integrations used from our community. We also want the Rest API to have some sort of \"Quest API\" to allow community participation and micro-tasks to clean and maintain the database independently. In the distant future, when the project is used a lot, we are thinking about rolling out a full protocol for marketing decisions. We also want to fully move our Web2 based API to the IC in Web3 as soon as possible.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "javascript",
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "web3 empowered marketing advisor#@#@#vuejs#@#@#rest-api#@#@#javascript#@#@#motoko#@#@#get a marketing advise from over 200 marketing expert, based on your situation, product and target group with an exact guideline how to do your marketing. fully on web3 build on the internet computer.",
    "tags": [
      "vuejs",
      "rest-api",
      "javascript",
      "motoko"
    ]
  },
  {
    "id": "generalized-dex",
    "name": "Generalized DEX",
    "description": "A new type of swappable DEX, which is gasless, feeless, debtless short-able, and extremely extensible to various logic",
    "image": "generalized-dex.gif",
    "links": {
      "github": "https://github.com/kentomisawa/generalized-dex",
      "livePreview": "https://docs.google.com/document/d/1QqzhxLDBoQcvZSrotmO9biPbV5w3oI-xnofYA0aFVQk/edit?usp=sharing",
      "external": "https://supernova.devpost.com/submissions/331056-generalized-dex",
      "otherLinks": []
    },
    "submitterFirstName": "kento",
    "submitterLastName": "tomisawa",
    "about": "Inspiration\n \n\n There are some issues that remain in the existing DEXs. They are not extensible. There are fees that can be removed. And the value in the liquidity pool is not stable.\n \n\n What it does\n \n\n A new type of swappable DEX, which is gasless, feeless, debtless short-able, and extremely extensible to various logic, but still, swappable, effective to exchange minor tokens, able to create tokens with a custom pricing system, and the value of the amount you have deposited is stabler than any fiat currencies over time; that means you even can issue tokens that are stabler than any fiat currencies and swappable without any fees; moreover, this DEX is fast, fully scalable, and truly decentralized thanks to Internet Computer, furthermore, easier to integrate external services to bridge to fiat currencies or other chains in the perspective of UX because the frontend is also decentralized.\n \n\n Details\n \n\n Static Price Quote\n \n\n Static Price Quote is the way to quote the price respective to every currency or token by the Universal Static Price. It works as “the quote currency of all” instead of exchanging at the price of every pair of derivatives. That enables “deposit” and “withdrawal” at the same price and at a different moment because prices are quoted by the price that is static over time. The Universal Static Price is stabler than any fiat currencies.\n \n\n Rules\n \n\n The rules of this exchange are very simple, which are:\n \n\n \n\n An address can withdraw the amount of the value the address has deposited.\n The deposited value is confirmed with whitelisted tokens or executed orders with non-whitelisted tokens. There are some limitations on swapping minor tokens but thanks to the flexibility of this protocol, anyone can make applications that liquidate for trades of the tokens like adding liquidity providers or making the proxy address that regards the minor tokens as whitelisted ones. But users are still able to exchange in a conventional way although it's more efficient.\n \n\n \n\n No Liquidity Providers\n \n\n There are no liquidity providers although there is a liquidity pool. What liquidates the pool is time lags between deposit and withdrawal. That sounds like liquidity is lacking, however, it can be much more liquidated than other AMMs thanks to the flexibility and extensibility of this DEX.\n Examples that liquidate the pool are the followings:  \n \n\n \n\n Custom pricing token issuance\n Debtless short selling\n A volatility-resistant value-backed pool for insurance, banking, etc\n Value-guaranteed derivatives\n NFTs of which the value never decreases\n \n\n \n\n Or other applications. All of those are able to build with. This is the extensibility of Generalized DEX.\n \n\n Custom Token Offering\n \n\n Custom token offerings are one of the most powerful applications that users can build in this protocol. This is because supply and pricing are customizable and the value can be stably backed by Universal Static Price. Custom tokens can be burnt and minted when deposited to and withdrawn from the pool. That is also helpful for customization.\n \n\n Data From Third Parties\n \n\n Price feeds, currency weights, and inflation rates are fetched or provided. Data from third parties will get much more secure in the future. Thanks to the Internet Computer it's able to fetch directly data from trusted sources.\n \n\n Price Adjustment\n \n\n Prices are adjusted to control supplies and demands in the liquidity pool. That keeps the value in the pool the same. Some of the exceeded value of tokens are used for gas rather than decreasing its price. Even if price feeds get broken, the price adjustment keeps the DEX still working.\n \n\n Non-Whitelisted Tokens\n \n\n There would be malicious tokens that violate the pricing system. Users still can trade those tokens efficiently. This is because once the value of the counter tokens gets confirmed or the counter order is booked, the order for the non-whitelisted tokens is executed. Those are much more efficient than the conventional exchange because orders are booked irrespective of token pairs, moreover, prices and amounts of ordered tokens are bundled.\n \n\n Universal Static Price (USP)\n \n\n Universal Static Price (USP) is calculated to minimize the intrinsic change of its value from price feeds, currency weights, and inflation rates by applying the weighted average of value changes of major currencies. USP represents the price that never fluctuates over time.\n \n\n How we built it\n \n\n I built with dfx new --type=rust. Price feeds, currency weights, and inflation rates are extrinsic data.\n \n\n Challenges we ran into\n \n\n Calculation of USP. The formula is a little complicated but sophisticated.\n \n\n Accomplishments that we're proud of\n \n\n The extensibility. One of the examples is that you can short-sell without debts. And achieved to remove fees and keep the value of the token pool stable. That stability is the key to license-free token offerings. And removing gas and fees is the key to continuous fundraising for social workers.\n \n\n What we learned\n \n\n The beautiful nature of the Internet Computer\n \n\n What's next for Generalized DEX\n \n\n Implement every important functionality, collecting third-party data and making a foundation, then sophisticating the code",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "generalized dex#@#@#rust#@#@#canisters#@#@#a new type of swappable dex, which is gasless, feeless, debtless short-able, and extremely extensible to various logic",
    "tags": [
      "rust",
      "canisters"
    ]
  },
  {
    "id": "mini-desktop",
    "name": "Mini Desktop",
    "description": "A desktop that knows no bounds.",
    "image": "mini-desktop.png",
    "links": {
      "github": "https://github.com/amitsingh19975/destop-on-blockchain",
      "external": "https://supernova.devpost.com/submissions/333334-mini-desktop",
      "otherLinks": []
    },
    "submitterFirstName": "amitsingh19975",
    "submitterLastName": "Singh",
    "about": "Inspiration\n \n\n Ever since I heard about decentralized technology 3 to 4 years back, my mind had all kinds of interesting, good, and bad ideas, including OS on-chain. A thought would come to my mind that should I try to implement it and see where would it take me, but procrastination always put these ideas in the backseat; I would give time to other projects. This time around, I decided to do it as I found the project to be possible with a canister model of Dfinity and memory cost, which is acceptable by many. Although I had the idea to implement a whole OS, I soon found it laborious and time-intensive and decided to implement a desktop. After the competition, I would love to implement OS on the blockchain if I get the time and more resources.\n \n\n What it does\n \n\n The app tries to move desktop experience on the blockchain allowing users to access it anywhere in the world as long as they have a proper internet connection. You can create and edit text, play audio or music, watch videos, open images, etc. At this point, we have limited features that could be extended in the future.\n \n\n How we built it\n \n\n As of right now, I have implemented everything using HTML, CSS, Vue, Dfinity and Typescript and other third-party libraries.\n \n\n Challenges we ran into\n \n\n There were a few problems that gave me a hard time:\n \n\n \n\n Designing the System.\n Storing assets.\n Caching the data so that you do not put pressure on bandwidth.\n Trying to design the best way to interact with the canister.\n Adding window apps dynamically.\n Adding a context menu\n Adding quasi-support for offline interaction.\n \n\n \n\n There are also a few problems that I'm unable to solve:\n \n\n \n\n Adding web worker (due to limitation)\n Adding full support for offline mode.\n Allowing streaming rather than downloading the whole asset in one go.\n \n\n \n\n Accomplishments that we're proud of\n \n\n The thing that I'm most proud of is how the app turns out, and a few honorary mentions:\n \n\n \n\n Improved knowledge of Typescript, Vue, HTML and CSS.\n Designed cache manager, window manager, etc\n \n\n \n\n What we learned\n \n\n \n\n Learned to work with webpack, Dfinity's canister and Motoko\n IndexedDb\n How to design a system\n \n\n \n\n What's next for Mini Desktop\n \n\n My next task would be to move the implementation to wasm and optimize the app properly. Furthermore, add features, such as shortcuts, notifications, full offline support, etc., and bring the app close to its offline counterpart.\n \n\n To watch the full demo click here.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "mini desktop#@#@#typescript#@#@#vue#@#@#motoko#@#@#css#@#@#html#@#@#a desktop that knows no bounds.",
    "tags": [
      "typescript",
      "vue",
      "motoko",
      "css",
      "html"
    ]
  },
  {
    "id": "q-messaging-system",
    "name": "Q messaging system",
    "description": "Q is an uncensored open source messaging system.Q is written in the Motoko language of internet computer ICP.One of the aims is to give a unified identity to the multitude of anonymous people.",
    "image": "q-messaging-system.png",
    "links": {
      "github": "https://github.com/metaquid/Q-messaging-system",
      "livePreview": "https://meize-wiaaa-aaaan-qamyq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334359-q-messaging-system",
      "otherLinks": []
    },
    "submitterFirstName": "Salvatore",
    "submitterLastName": "Mocciaro Perez",
    "about": "Inspiration\n \n\n In what will be the new internet, in addition to the useful identity certification systems, anonymity must still be preserved.\n I wanted to take advantage of the native features of the new Motoko language and challenge myself to write something functional and useful.\n Ultimately it is communication that makes us human and I thought a communication app was a good place to start.\n Just as the internet computer is a distributed and non-centralized network, the concept of the individual also exists in its decentralized form.\n While a specific individual, as each of us is, is in fact centralized, the idea of an anonymous individual is in fact decentralized, because it is not identifiable.\n Take advantage of the decentralization of computer networks of today and the near future to allow this trans-human possibility that transcends the single individual to empower him in this new dimension.\n From the anonymous individual, in his multitude, the collective individual emerges, which is not society, with its rules, but the abstraction of a prototype individual.\n The aim is to provide new material of interaction and knowledge for the next artificial intelligences, so that they can learn from authentic human nature, which is expressed only when it is free from restrictions and social constraints imposed from above.\n \n\n What it does\n \n\n Q does what it says: records messages for reading and sharing.\n Q only checks the length of the messages but otherwise leaves you free to write what you want.\n There are several independent channels to choose from, in which one can communicate.\n Q sequentially numbers the messages as they flow, showing them one on top of the other, creating a stack.\n At message number 100 of a channel the system does a reset to prevent data overload.\n Only the affected channel is reset, while the others update independently.\n These simple mechanisms allow you to manage messages that can be shared publicly but which disappear after a certain period of time.\n In this way we preserve anonymity while ensuring communication between potential strangers.\n But even people who know each other will benefit from using Q due to its anti-censorship qualities.\n \n\n How I built it\n \n\n Q was developed in the motoko language, in the windows environment, in the windows linux subsystem.\n Once installed ubuntu in the WSL environment I started using the scite editor for the code, finding it suitable and lean for the task.\n The DFX framework is very well done, and despite its complexity, you can use it a little at a time, gradually.\n A lot of trial and error before I realized that the messages the compiler gave me were very accurate and useful.\n \n\n Challenges I ran into\n \n\n I was not developing in linux but windows, and the language I am familiar with is PHP.\n I wanted to develop something on the internet computer, after reading the goals and the great vision that ICP has of the future.\n I also wanted to develop in motoko because it is the language that synthesizes that great vision.\n Initially I was thinking of developing another concept, but too complex for the time and knowledge at my disposal.\n The difficulty of finding some functions in the Motoko language slowed me down a lot.\n Eventually I had to be able to do something with what I had learned.\n Despite the lack of some functions, which will arrive, I thought I could develop a communication system.\n Motoko has great potential, but is still immature today (21 June 2022).\n Despite the difficulties, I still took the good in the system to make something work.\n \n\n Accomplishments I'm proud of.\n \n\n And in the end the system works, while I have left room for further improvements.\n I conceived Q in a modular way, in order to be able to intervene more easily, but also to make it understandable to others,\n I isolated the fundamental concepts for a shared communication system, using a language I did not know before.\n Knowing that I can develop today on a cutting-edge internet platform and that it is the future galvanizes me a lot.\n \n\n What I learned\n \n\n I learned to use WSL ubuntu in a windows environment, because it was the only way for me to access ICP technology.\n I tried to install rust as well but then I focused on motoko and learning about him.\n Documentation is still in its infancy and finding examples is still a challenge.\n But every step taken to learn motoko showed me the great robustness of his approach.\n I have yet to understand much of the motoko syntax, especially in the area of pattern matching.\n \n\n What's next for Q messaging system\n \n\n Integrate some improved features, such as antispam, but also optimization in general.\n Being able to check the performance of the system while it is running will certainly give me other ideas.\n Perhaps even the possibility of adding images in the form of icons for composing messages.\n The connection with an artificial intelligence could also serve to finalize the project.\n A form of collective synthetic intelligence should emerge from the accumulated human interactions.\n Person Q is therefore the synthesis, the unification of the many people who will use the Q messaging system.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "motoko",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "q messaging system#@#@#motoko#@#@#ubuntu#@#@#windows-10#@#@#dfx#@#@#html5#@#@#javascript#@#@#q is an uncensored open source messaging system.q is written in the motoko language of internet computer icp.one of the aims is to give a unified identity to the multitude of anonymous people.",
    "tags": [
      "motoko",
      "ubuntu",
      "windows-10",
      "dfx",
      "html5",
      "javascript"
    ]
  },
  {
    "id": "dynamic-rarity-nfts",
    "name": "Dynamic Rarity NFTs",
    "description": "Dynamically changing rarities",
    "image": "dynamic-rarity-nfts.gif",
    "links": {
      "github": "https://github.com/barolukluk/dynamic_rarity_nfts",
      "livePreview": "https://x7qdv-qyaaa-aaaan-qacgq-cai.raw.ic0.app",
      "external": "https://supernova.devpost.com/submissions/334490-dynamic-rarity-nfts",
      "otherLinks": [
        "https://bootcamp-faucet.vercel.app/"
      ]
    },
    "submitterFirstName": "Baran",
    "submitterLastName": "UÇAR",
    "about": "I have created an NFT minting dapp where each user can select their own traits and create a unique DNA for each NFT. Users have to pay a certain amount of tokens to mint an NFT and after each mint a unique DNA code for NFT is created with the selected traits. Besides that , I have created a system called dynamic NFT rarity index (DNRI) which is a new rarity index automatically calculated by looking at the DNAs of previously minted NFTs after each mint . So, after the each mint, all the rarities of the collection will be recalculated with respect to new state. In addition, users will also be able to view the transaction history of each NFT.\n \n\n I am not a experienced react developer, so the ui part of the project is not as cool as the motoko part but i think it is understandable.\n \n\n Notes: 1- Clicking the mint button without connecting your wallet will not work, you must first connect your wallet. 2- If you connect your wallet and click \"collected NFTs\" button, you can see your nfts and transfer them. If you don't connect your wallet and click the collected NFTs button, you will see nothing but ugly \"waiting\" text. 3- If you click \"view all NFTs\" button you can see all the NFTs already minted. 4- All rarity indexes are recalculated and dynamically changed after each mint. 5-If the button is greyed out, it is running in the background and will be back to normal shortly.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "motoko"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "dynamic rarity nfts#@#@#react#@#@#motoko#@#@#dynamically changing rarities",
    "tags": [
      "react",
      "motoko"
    ]
  },
  {
    "id": "btc-lending-protocol",
    "name": "BTC Lending Protocol",
    "description": "Access your Bitcoin's value today.\n\nA port of Ethereum's Liquity and Solana's Hedge onto the IC. Instead of using ICP as the primary hedging token, native Bitcoin is used.",
    "image": "btc-lending-protocol.png",
    "links": {
      "github": "https://github.com/dangdennis/btc-lending-protocol",
      "external": "https://supernova.devpost.com/submissions/334250-btc-lending-protocol",
      "otherLinks": []
    },
    "submitterFirstName": "Dennis",
    "submitterLastName": "Dang",
    "about": "Inspiration\n \n\n Despite the fall of Luna and Terra, I still wanted to see crypto-collaterized stablecoins succeed. A true DeFi future is not possible if ecosystem stability is found only in the leading nation's currency.\n \n\n Liquity and Hedge provided the most interesting (and seemingly) stable model. So let's take it to the Internet Computer. To make this more challenging and interesting, I wanted to bring this layer of functionality to Bitcoin itself with IC's Bitcoin Integration.\n \n\n What it does\n \n\n The Bitcoin Lending Protocol (real name pending) lets users trade their native Bitcoin for an IC-native stablecoin at current BTC/USD market value. As long as users maintain sufficient collateral, they maintain ownership of their lent Bitcoin.\n \n\n How we built it\n \n\n I reviewed the Liquity and Hedge docs for all product features, and explored the Bitcoin integration repo. The product docs were very clear and shared many similarities. I also reviewed Liquity's Solidity contracts. Once an understanding of the core product was fleshed out, I began coding.\n \n\n I started with the core data structures that'll maintain the vaults, the stability and staking pools. Once those APIs were done - depositing, withdrawing bitcoin and stablecoin from vaults and pools - I needed a way to securely accept ingest bitcoin price from an oracle. I did not make an oracle, and opted to stub that functionality out for now. It returned a constant BTC/USD price. \n \n\n Challenges we ran into\n \n\n The first learning bump was figuring out how to enable Bitcoin transactions and storage in a secure manner. This meant understanding UTXOs and also just running the bitcoin docker node in regtest. Something as seemingly simple as sending satoshis, and checking account balances was...more difficult than I had anticipated.\n \n\n Another challenge was deciding what data structures to copy from the Solidity world, and what could be simplified onto IC. Without a proper database that can quickly index and answer questions like \"Give me the vault with the lowest collateral maintenance\", I also considered implementing a double linked list that sorted the vaults. I resorted to using a min-max heap. Difficult things to work with in Rust when you're dealing with multiple references. \n \n\n In the end, I was not able to finish a working version of the product. Despite shedding a lot of security practices, the combined challenge of solo work, self-motivation, Rust, and Bitcoin APIs, and preparing for NFT NYC dissuaded me from completing.\n \n\n Accomplishments that we're proud of\n \n\n I started. :D \n \n\n What we learned\n \n\n I got a taste of what coding in Rust and working with Bitcoin feels like. I have a deeper understanding of Liquity's model, and expect myself to continuing reimplementing it in future attempts.\n \n\n What's next for BTC Lending Protocol\n \n\n Nothing.",
    "domains": [
      "Asynchronous DeFi"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "btc lending protocol#@#@#rust#@#@#bitcoin#@#@#ic#@#@#access your bitcoin's value today.\n\na port of ethereum's liquity and solana's hedge onto the ic. instead of using icp as the primary hedging token, native bitcoin is used.",
    "tags": [
      "rust",
      "bitcoin",
      "ic"
    ]
  },
  {
    "id": "ic-metamask",
    "name": "IC metamask",
    "description": "IC metamask",
    "image": "ic-metamask.gif",
    "links": {
      "github": "https://github.com/aewc/ic-signer/tree/supernova",
      "external": "https://supernova.devpost.com/submissions/328278-ic-metamask",
      "otherLinks": []
    },
    "submitterFirstName": "力全",
    "submitterLastName": "冯",
    "about": "Inspiraasdtion\n \n\n it is a signer, composability of permissions.\n \n\n What it does\n \n\n Users use signatures, certificates, delegation, etc. to indicate their identity. After the canister verifies its authority, it will use ECDSA to generate a new signature as required.\n \n\n How we built it\n \n\n we built by Rust canister, using ecdsa.\n \n\n Challenges we ran into\n \n\n Secure permissions management can be a bit of a hassle\n \n\n Accomplishments that we're proud of\n \n\n For example, a user can fully participate in the IC ecosystem with only metamask, and he/she does not need to install plug-ins such as plugs again, and does not need to register II. MetaMask has tens of millions of users\n \n\n What we learned\n \n\n ECDSA of cansiter\n \n\n What's next for IC metamask\n \n\n IC Signer!",
    "domains": [
      "Public Good / Social Impact"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "ic metamask#@#@#rust#@#@#ic metamask",
    "tags": [
      "rust"
    ]
  },
  {
    "id": "invoices-as-nfts",
    "name": "Invoices as NFTs",
    "description": "Invoices as NFTs is a quick demo that deals with enabling Premium features on your dApp without dealing with the ledger, via an invoice canister.",
    "image": "invoices-as-nfts.gif",
    "links": {
      "github": "https://github.com/GLicDEV/invoices_as_nft",
      "livePreview": "https://t5izh-jqaaa-aaaai-qngjq-cai.ic0.app/",
      "external": "https://supernova.devpost.com/submissions/334600-invoices-as-nfts",
      "otherLinks": []
    },
    "submitterFirstName": "GLicDEV",
    "submitterLastName": "Gldev",
    "about": "Inspiration\n \n\n The idea was to explore ways to enable developers to enable Premium features on their dApp in a similar way that other projects already provide gated communities based on ownership of a token (like DSCVR does)\n \n\n What it does\n \n\n Users can pay for a premium membership with any wallet they choose to, and the Invoice canister acts as a witness, and an intermediary between the Ledger and any canisters in your ecosystem\n \n\n How we built it\n \n\n This was built in rust, with some inspiration from the libraries provided by Dfinity and the work done by Kyle on the invoice canister written in Motoko.\n \n\n Challenges we ran into\n \n\n The local dev experience while trying to locally test with a Ledger, an Internet Identity canister and my own canisters was a bit rough, and I ended up dealing with some bugs in production :)\n \n\n Accomplishments that we're proud of\n \n\n This works pretty seamlessly from my testing, and it can provide a starting point for other projects that want to explore this avenue of providing gated access based on a witness / NFT canister.\n \n\n What we learned\n \n\n Fixing bugs in production is cool?!\n Working with the ledger and receiving funds is not really that scary! Have a look at the code, it's pretty simple and straightforward. The improvements on the libraries available is huge from ~6months ago when the canisters were enabled to hold ICP! Give it a try!\n \n\n What's next for Invoices as NFTs\n \n\n Well, it mostly depends on the community feedback. I could see this going the way of Kyle's project, as a global public invoicing canister (with a lot of work & testing) or it could be used by devs that want to pickup something that works and adapt it to their needs. One particular interesting use case is something like a \"Proof of Membership\" or \"Proof of Usage\". More and more dApps are thinking about how to pre-screen their users, and I think the community could use a privacy-aware witness approach to ownership, membership and on-chain spending.",
    "domains": [
      "Metaverse and NFTs"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "invoices as nfts#@#@#rust#@#@#react#@#@#invoices as nfts is a quick demo that deals with enabling premium features on your dapp without dealing with the ledger, via an invoice canister.",
    "tags": [
      "rust",
      "react"
    ]
  },
  {
    "id": "my-status",
    "name": "My Status",
    "description": "My Status is a social media platform that allows users to share daily events of their lives with friends in the form of \"statuses\".",
    "image": "my-status.jpg",
    "links": {
      "github": "https://github.com/aymanfmustafa/My-Status",
      "livePreview": "https://testflight.apple.com/join/cKTspEFY",
      "external": "https://supernova.devpost.com/submissions/327580-my-status",
      "otherLinks": []
    },
    "submitterFirstName": "Ayman",
    "submitterLastName": "Mustafa",
    "about": "Inspiration\n \n\n Social media has become an integral part of our lives. However, social media platforms controlled by the tech giants are plagued with many serious issues, ranging from censorship to damaging teens' self-esteem. The rise of Web3.0 technologies opens the door for creative solutions to those issues.\n \n\n What it does\n \n\n My Status is a social media platform built on the Internet Computer blockchain with a native iOS frontend. \n Users share daily events of their lives with friends in the form of \"statuses\". A Status is a photo, short video, audio, or text that expresses what you're up to in the current moment. A Status is captured at the moment, it cannot be uploaded or prerecorded. The goal is to portray the moment as is.\n Friendship is a bidirectional relationship. There are two levels of friendship: \n \n\n \n\n Circle: Close friends. To establish a Circle friendship you send an add request. The recipient can accept or deny the request. \n Network: Outer circle of friends, colleagues, and other acquaintances. A Network friendship is established when you add a friend.\n \n\n \n\n This classification helps you decide what to post for each group. All statuses that you post are grouped by day in your Journals. You can also post private statuses that are seen by you only.\n \n\n Phone Call Requests:\n The app allows users send phone call requests to their Circle friends. The purpose of this is to minimize the disturbance and the occasional inconvenience of phone calls. A user can send a request to be called within a window of time. The receiving user can deny or accept the request. \n \n\n Places and Experiences:\n A user can attach an experience to a status. An experience is the user impression about a physical place of business expressed in a binary rating system. This could be a coffee shop, restaurant, etc. The experience, therefore, consists of the status posted by the user taken at the place and the user’s rating of the place (like or dislike). \n \n\n A place will have a total rating that is the accumulation of users ratings. When viewing a place page, a user can view the total rating of that businesses as well as the statuses posted in that pace, as long as those statuses belong to the user’s friends and have not expired yet. \n \n\n A place can be created by any user. A verified place can be created only by the business owner. (How to verify places is to be addressed in the future). There could be multiple places that have the same location. Eventually, only the verified or popular places will attract ratings. \n \n\n When a user wants to add an experience to a location (determined by the current GPS coordinate), the user is presented with all places in that location, if any. The user will also have the option of adding a new place. The user can choose whether that place can visible by friends or by everyone. The app is therefore building a new database of places that is independent of the big tech databases. \n \n\n This is a natural way to promote businesses. Uses express their experiences genuinely to their friends. Businesses who provide good experiences to customers will benefit from the word of mouth.  \n \n\n How we built it\n \n\n The backend is built on the Internet Computer smart contracts (canisters) using Motoko language. The front end is a native iOS app built with swift language. An interface bridge connecting the backend with the frontend is built with rust language.\n \n\n Challenges we ran into\n \n\n Besides understanding how build a smart contract on the Internet Computer, The first major challenge was communicating with the Internet Computer canisters from the iOS app. I've had to build an interface to communicate with the low level rust IC library using rust, a language I was not familiar with. Further challenges I faced had to do with scalability and inter canister communications.  \n \n\n What's next for My Status\n \n\n My Status is a social media platform where friends interact and keep in touch with each other. This opens the door for adding services that can benefit from the network effect and the features of the Internet Computer blockchain . For example, the app can connect to a DeFi protocol to make it possible for friends in the network to do financial transactions, such as sending money, borrowing, etc. \n \n\n The app can leverage the idea of adding places and experiences to allow businesses to create specialized accounts. A business account can interact directly with its customers to take feedback, offer discounts, provide loyalty cards, etc. When tokenization is implemented, users can make payments to businesses directly using the app.\n \n\n The current domains will be expanded to include a World domain. This allows users to post publicly. A public domain will create an opportunity for users to monetize their contents. For example users can write high quality articles, just like Medium or Substack, but with being able to totally control how they want to charge their readers. \n \n\n The app will have a native Android mobile app, as well as a website that is completely on chain. The website version will obviously be limited to certain features.",
    "domains": [
      "SocialFi"
    ],
    "languages": [
      "motoko",
      "rust",
      "javascript"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo",
      "live demos"
    ],
    "search": "my status#@#@#motoko#@#@#swift#@#@#rust#@#@#javascript#@#@#my status is a social media platform that allows users to share daily events of their lives with friends in the form of \"statuses\".",
    "tags": [
      "motoko",
      "swift",
      "rust",
      "javascript"
    ]
  },
  {
    "id": "launchtrail",
    "name": "LaunchTrail",
    "description": "Bring 100% verifiability to Internet Computer projects and make them more secure and dependable.",
    "image": "launchtrail.png",
    "links": {
      "github": "https://github.com/spinner-cash/launchtrail",
      "external": "https://supernova.devpost.com/submissions/327084-launchtrail",
      "otherLinks": []
    },
    "submitterFirstName": "spnrapp",
    "submitterLastName": "spinner.cash",
    "about": "Inspiration\n \n\n Internet Computer is a different kind of blockchain, with data privacy as one of its design principles.\n This is a welcoming change that will unlock many applications that is not even possible with other blockchains. But it also brings challenges to developers.\n \n\n How can users verify a project actually does what it claims to do?\n \n\n A project can be open source and provide ways to verify its deployed code matches its source.\n But this is still not enough, because a canister can be upgraded by its developer, or its state can be altered through privileged access.\n In fact, one can't even be sure that a canister's code is unchanged between calls.\n \n\n Making canister immutable can help to ease these concerns, but that means it will no be able to get bug fixes or new features.\n For simple canisters this seems okay, but it's impractical to ask all projects to only use immutable canisters.\n \n\n This quest leads us to creating LaunchTrail.\n \n\n What it does\n \n\n LaunchTrail keeps a public record of everything it has done and everything it is about to do, including but not limited to the following:\n \n\n \n\n Creating new canisters\n Installing or upgrading canister code\n Making calls to canisters to change their configuration\n \n\n \n\n A project can manage all its canisters through its own instance of LaunchTrail.\n A project should first deploy a LaunchTrail canister, set it as immutable, and keep a verifiable offline record.\n Then it can use LaunchTrail to deploy and manage other canisters.\n \n\n Because LaunchTrail is immutable and it tracks every action that it has ever performed in an append-only log, it means the project's history is now 100% available and verifiable.\n \n\n LaunchTrail also introduces the concept of \"scheduled action\": an action that is scheduled to take place at a future time.\n The purpose is to give users enough time to evaluate the impact or the risk of an upcoming change.\n At the same time, one can be sure nothing is changed until the next scheduled action takes place.\n \n\n In short, LaunchTrail provides verifiable project history, improves both transparency and dependability to a project built on the Internet Computer.\n \n\n How we built it\n \n\n LaunchTrail was initially built to scratch an itch of our own: we were building a DeFi project called SpinnerCash, and we wanted the highest degree of security, which means we cannot compromise on verifiability. This leads us to thinking what is different about building on IC, and how can could solve the challenges that come with it.\n \n\n We leveraged some of the modules we have already built, for example, the append only logger was very easy to implement on top of our own stable memory solutions.\n So we were able to build LaunchTrail relatively quickly within a week, also thanks to the great canister SDK and tools provided by the DFINITY team.\n We were also very mindful about providing good documentation in our code, as well as good automated test cases.\n You can launch your own LaunchTrail within seconds of downloading a simple Makefile.\n \n\n Challenges we ran into\n \n\n One of the challenges is that LaunchTrail itself needs to be 100% verifiable.\n Publishing the source code and making it immutable is only one part of the story.\n \n\n However, we must keep in mind that one could mess with a canister's state before setting it immutable.\n So the track record of when the LaunchTrail is created and made immutable is also very important.\n \n\n To solve this problem we quickly created a tool to take a snapshot of canister info that is returned from the IC's read_state API.\n This info is timestamped and signed by IC's public key, so it can serve an offline book-keeping, and verifiable by checking the signature. \n \n\n IC's ability to allow users to verify canister data via just signatures is really amazing.\n For other blockchains one has to go through the entire block history back to the genesis block, which is not only cumbersome but also impractical.\n \n\n Accomplishments that we're proud of\n \n\n There are other projects providing event logging services, but we are the first to note this verifiability problem is more than just event logging, because upgrade history matters too.\n \n\n Many people still have a mindset that all block data must be public in order for people to trust an application built on top of a blockchain.\n This view unfortunately is mixing up layers between system and application.\n It is not scalable, and at odds with IC's grand mission.\n \n\n We are really proud of bringing awareness to this problem and help solve it at application level.\n \n\n What we learned\n \n\n It is shocking that in the crypto industry, people talk about \"DON'T TRUST, VERIFY\" as a mantra, and yet in practice, many blindingly trust project developers as long as there is profit to be made, which leads to horror stories of being \"rug pulled\".\n \n\n Contrary to popular belief, we actually think immutable smart contract should take a partial blame, because software absolutely requires maintenance and bug fixes, without which the entirely technology industry would not be at its place today.\n \n\n We need a solution that is not an impedance mismatch with upgradability and data privacy, and yet still 100% verifiable.\n We are glad that IC is on the right path towards that goal and we were able to contribute to a solution.\n \n\n What's next for LaunchTrail\n \n\n At the moment one can use the public interface of the LaunchTrail canister to schedule actions and view logs (parameters, results, etc.).\n But it is not convenient if an end user just wants to check and verify past or upcoming actions.\n So we need a more intuitive web interface to help users do that, which is what we plan to work on next. \n \n\n Since LaunchTrail was first announced and published, we have learned that some projects are planning to use it, which made us very proud.\n But we also think the public still needs to be more educated on the verifiability problem because it is a very important issue that cannot be neglected.\n We hope to bring more awareness to the problem by entering this project into the Supernova hackathon competition.\n The more users start to realize to realize this is an actual problem, the more they will push developers to address it, and the better we can build a future with reliable and trustworthy services on the Internet Computer.",
    "domains": [
      "Blue Sky"
    ],
    "languages": [
      "rust"
    ],
    "level": "advanced",
    "contentType": [
      "code samples",
      "community repo"
    ],
    "search": "launchtrail#@#@#rust#@#@#canister#@#@#internetcomputer#@#@#bring 100% verifiability to internet computer projects and make them more secure and dependable.",
    "tags": [
      "rust",
      "canister",
      "internetcomputer"
    ]
  }
]
